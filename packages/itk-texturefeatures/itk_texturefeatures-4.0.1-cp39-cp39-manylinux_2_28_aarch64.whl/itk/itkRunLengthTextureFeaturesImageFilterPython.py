# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TextureFeaturesPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRunLengthTextureFeaturesImageFilterPython
else:
    import _itkRunLengthTextureFeaturesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
class vectoritkImageVF102(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF102_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageVF102_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageVF102

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type
        j: std::vector< itkImageVF102_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type
        j: std::vector< itkImageVF102_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type
        j: std::vector< itkImageVF102_Pointer >::difference_type
        v: std::vector< itkImageVF102_Pointer,std::allocator< itkImageVF102_Pointer > > const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type
        j: std::vector< itkImageVF102_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageVF102

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageVF102_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageVF102_Pointer,std::allocator< itkImageVF102_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageVF102_Pointer >::difference_type
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageVF102_Pointer >::value_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageVF102_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageVF102_Pointer > &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageVF102_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageVF102_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageVF102_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageVF102_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageVF102_Pointer >::allocator_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageVF102_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF102_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageVF102_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageVF102_Pointer >::iterator
        last: std::vector< itkImageVF102_Pointer >::iterator

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF102
        __init__(self, other) -> vectoritkImageVF102

        Parameters
        ----------
        other: std::vector< itkImageVF102_Pointer > const &

        __init__(self, size) -> vectoritkImageVF102

        Parameters
        ----------
        size: std::vector< itkImageVF102_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF102

        Parameters
        ----------
        size: std::vector< itkImageVF102_Pointer >::size_type
        value: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_swiginit(self, _itkRunLengthTextureFeaturesImageFilterPython.new_vectoritkImageVF102(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageVF102_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageVF102_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageVF102_Pointer >::size_type
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageVF102_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageVF102_Pointer >::size_type
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageVF102_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF102_Pointer >::iterator
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageVF102_Pointer >::iterator
        n: std::vector< itkImageVF102_Pointer >::size_type
        x: std::vector< itkImageVF102_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageVF102_Pointer >::size_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageVF102_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_capacity(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_vectoritkImageVF102

# Register vectoritkImageVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF102_swigregister(vectoritkImageVF102)
class vectoritkImageVF103(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF103_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageVF103_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageVF103

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type
        j: std::vector< itkImageVF103_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type
        j: std::vector< itkImageVF103_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type
        j: std::vector< itkImageVF103_Pointer >::difference_type
        v: std::vector< itkImageVF103_Pointer,std::allocator< itkImageVF103_Pointer > > const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type
        j: std::vector< itkImageVF103_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageVF103

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageVF103_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageVF103_Pointer,std::allocator< itkImageVF103_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageVF103_Pointer >::difference_type
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageVF103_Pointer >::value_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageVF103_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageVF103_Pointer > &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageVF103_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageVF103_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageVF103_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageVF103_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageVF103_Pointer >::allocator_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageVF103_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF103_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageVF103_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageVF103_Pointer >::iterator
        last: std::vector< itkImageVF103_Pointer >::iterator

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF103
        __init__(self, other) -> vectoritkImageVF103

        Parameters
        ----------
        other: std::vector< itkImageVF103_Pointer > const &

        __init__(self, size) -> vectoritkImageVF103

        Parameters
        ----------
        size: std::vector< itkImageVF103_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF103

        Parameters
        ----------
        size: std::vector< itkImageVF103_Pointer >::size_type
        value: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_swiginit(self, _itkRunLengthTextureFeaturesImageFilterPython.new_vectoritkImageVF103(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageVF103_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageVF103_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageVF103_Pointer >::size_type
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageVF103_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageVF103_Pointer >::size_type
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageVF103_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF103_Pointer >::iterator
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageVF103_Pointer >::iterator
        n: std::vector< itkImageVF103_Pointer >::size_type
        x: std::vector< itkImageVF103_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageVF103_Pointer >::size_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageVF103_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_capacity(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_vectoritkImageVF103

# Register vectoritkImageVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF103_swigregister(vectoritkImageVF103)
class vectoritkImageVF104(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF104_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageVF104_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageVF104

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type
        j: std::vector< itkImageVF104_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type
        j: std::vector< itkImageVF104_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type
        j: std::vector< itkImageVF104_Pointer >::difference_type
        v: std::vector< itkImageVF104_Pointer,std::allocator< itkImageVF104_Pointer > > const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type
        j: std::vector< itkImageVF104_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageVF104

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageVF104_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageVF104_Pointer,std::allocator< itkImageVF104_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageVF104_Pointer >::difference_type
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageVF104_Pointer >::value_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageVF104_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageVF104_Pointer > &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageVF104_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageVF104_Pointer >::iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageVF104_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageVF104_Pointer >::reverse_iterator"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageVF104_Pointer >::allocator_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageVF104_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF104_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageVF104_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageVF104_Pointer >::iterator
        last: std::vector< itkImageVF104_Pointer >::iterator

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF104
        __init__(self, other) -> vectoritkImageVF104

        Parameters
        ----------
        other: std::vector< itkImageVF104_Pointer > const &

        __init__(self, size) -> vectoritkImageVF104

        Parameters
        ----------
        size: std::vector< itkImageVF104_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF104

        Parameters
        ----------
        size: std::vector< itkImageVF104_Pointer >::size_type
        value: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_swiginit(self, _itkRunLengthTextureFeaturesImageFilterPython.new_vectoritkImageVF104(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageVF104_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageVF104_Pointer >::value_type const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageVF104_Pointer >::size_type
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageVF104_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageVF104_Pointer >::size_type
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageVF104_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageVF104_Pointer >::iterator
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageVF104_Pointer >::iterator
        n: std::vector< itkImageVF104_Pointer >::size_type
        x: std::vector< itkImageVF104_Pointer >::value_type const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageVF104_Pointer >::size_type

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageVF104_Pointer >::size_type"""
        return _itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_capacity(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_vectoritkImageVF104

# Register vectoritkImageVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.vectoritkImageVF104_swigregister(vectoritkImageVF104)

def itkImageFileWriterIVF102_New():
    return itkImageFileWriterIVF102.New()

class itkImageFileWriterIVF102(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF102 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF102
        GetInput(self, idx) -> itkImageVF102

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF102

        Create a new object of the class itkImageFileWriterIVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF102_swigregister(itkImageFileWriterIVF102)

def itkImageFileWriterIVF103_New():
    return itkImageFileWriterIVF103.New()

class itkImageFileWriterIVF103(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF103 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF103
        GetInput(self, idx) -> itkImageVF103

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF103

        Create a new object of the class itkImageFileWriterIVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF103_swigregister(itkImageFileWriterIVF103)

def itkImageFileWriterIVF104_New():
    return itkImageFileWriterIVF104.New()

class itkImageFileWriterIVF104(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileWriterIVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileWriterIVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageVF104 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageVF104
        GetInput(self, idx) -> itkImageVF104

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetFileName(self)

    def SetImageIO(self, io):
        r"""
        SetImageIO(self, io)

        Parameters
        ----------
        io: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetImageIO(self, io)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetImageIO(self, *args)

    def Write(self):
        r"""Write(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_Write(self)

    def SetIORegion(self, region):
        r"""
        SetIORegion(self, region)

        Parameters
        ----------
        region: itkImageIORegion const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetIORegion(self, region)

    def GetIORegion(self):
        r"""GetIORegion(self) -> itkImageIORegion"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetIORegion(self)

    def SetNumberOfStreamDivisions(self, _arg):
        r"""
        SetNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetNumberOfStreamDivisions(self, _arg)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetNumberOfStreamDivisions(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_UseCompressionOff(self)

    def SetCompressionLevel(self, _arg):
        r"""
        SetCompressionLevel(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetCompressionLevel(self, _arg)

    def GetCompressionLevel(self):
        r"""GetCompressionLevel(self) -> int const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetCompressionLevel(self)

    def SetUseInputMetaDataDictionary(self, _arg):
        r"""
        SetUseInputMetaDataDictionary(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_SetUseInputMetaDataDictionary(self, _arg)

    def GetUseInputMetaDataDictionary(self):
        r"""GetUseInputMetaDataDictionary(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_GetUseInputMetaDataDictionary(self)

    def UseInputMetaDataDictionaryOn(self):
        r"""UseInputMetaDataDictionaryOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_UseInputMetaDataDictionaryOn(self)

    def UseInputMetaDataDictionaryOff(self):
        r"""UseInputMetaDataDictionaryOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_UseInputMetaDataDictionaryOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileWriterIVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF104

        Create a new object of the class itkImageFileWriterIVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileWriterIVF104_swigregister(itkImageFileWriterIVF104)
class itkImageSourceIVF102(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageVF102
        GetOutput(self) -> itkImageVF102
        GetOutput(self, idx) -> itkImageVF102

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_GetOutput(self, *args)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        GraftOutput(self, key, graft)

        Parameters
        ----------
        key: std::string const &
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_GraftOutput(self, *args)

    def GraftNthOutput(self, idx, graft):
        r"""
        GraftNthOutput(self, idx, graft)

        Parameters
        ----------
        idx: unsigned int
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_GraftNthOutput(self, idx, graft)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_MakeOutput(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageSourceIVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageSourceIVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_cast(obj)

# Register itkImageSourceIVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF102_swigregister(itkImageSourceIVF102)
class itkImageSourceIVF103(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageVF103
        GetOutput(self) -> itkImageVF103
        GetOutput(self, idx) -> itkImageVF103

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_GetOutput(self, *args)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        GraftOutput(self, key, graft)

        Parameters
        ----------
        key: std::string const &
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_GraftOutput(self, *args)

    def GraftNthOutput(self, idx, graft):
        r"""
        GraftNthOutput(self, idx, graft)

        Parameters
        ----------
        idx: unsigned int
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_GraftNthOutput(self, idx, graft)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_MakeOutput(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageSourceIVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageSourceIVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_cast(obj)

# Register itkImageSourceIVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF103_swigregister(itkImageSourceIVF103)
class itkImageSourceIVF104(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageVF104
        GetOutput(self) -> itkImageVF104
        GetOutput(self, idx) -> itkImageVF104

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_GetOutput(self, *args)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        GraftOutput(self, key, graft)

        Parameters
        ----------
        key: std::string const &
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_GraftOutput(self, *args)

    def GraftNthOutput(self, idx, graft):
        r"""
        GraftNthOutput(self, idx, graft)

        Parameters
        ----------
        idx: unsigned int
        graft: itkDataObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_GraftNthOutput(self, idx, graft)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_MakeOutput(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageSourceIVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageSourceIVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_cast(obj)

# Register itkImageSourceIVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageSourceIVF104_swigregister(itkImageSourceIVF104)
class itkImageToImageFilterID2IVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageToImageFilterID2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD2
        GetInput(self, idx) -> itkImageD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterID2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_cast(obj)

# Register itkImageToImageFilterID2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF102_swigregister(itkImageToImageFilterID2IVF102)
class itkImageToImageFilterID3IVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageToImageFilterID3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD3
        GetInput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterID3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_cast(obj)

# Register itkImageToImageFilterID3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF103_swigregister(itkImageToImageFilterID3IVF103)
class itkImageToImageFilterID4IVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageToImageFilterID4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD4
        GetInput(self, idx) -> itkImageD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterID4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_cast(obj)

# Register itkImageToImageFilterID4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF104_swigregister(itkImageToImageFilterID4IVF104)
class itkImageToImageFilterIF2IVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageToImageFilterIF2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF2
        GetInput(self, idx) -> itkImageF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIF2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_cast(obj)

# Register itkImageToImageFilterIF2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF102_swigregister(itkImageToImageFilterIF2IVF102)
class itkImageToImageFilterIF3IVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageToImageFilterIF3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF3
        GetInput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIF3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_cast(obj)

# Register itkImageToImageFilterIF3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF103_swigregister(itkImageToImageFilterIF3IVF103)
class itkImageToImageFilterIF4IVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageToImageFilterIF4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF4
        GetInput(self, idx) -> itkImageF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIF4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_cast(obj)

# Register itkImageToImageFilterIF4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF104_swigregister(itkImageToImageFilterIF4IVF104)
class itkImageToImageFilterISS2IVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageToImageFilterISS2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS2
        GetInput(self, idx) -> itkImageSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterISS2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_cast(obj)

# Register itkImageToImageFilterISS2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF102_swigregister(itkImageToImageFilterISS2IVF102)
class itkImageToImageFilterISS3IVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageToImageFilterISS3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS3
        GetInput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterISS3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_cast(obj)

# Register itkImageToImageFilterISS3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF103_swigregister(itkImageToImageFilterISS3IVF103)
class itkImageToImageFilterISS4IVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageToImageFilterISS4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS4
        GetInput(self, idx) -> itkImageSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterISS4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_cast(obj)

# Register itkImageToImageFilterISS4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF104_swigregister(itkImageToImageFilterISS4IVF104)
class itkImageToImageFilterIUC2IVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageToImageFilterIUC2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC2
        GetInput(self, idx) -> itkImageUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUC2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_cast(obj)

# Register itkImageToImageFilterIUC2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF102_swigregister(itkImageToImageFilterIUC2IVF102)
class itkImageToImageFilterIUC3IVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageToImageFilterIUC3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC3
        GetInput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUC3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_cast(obj)

# Register itkImageToImageFilterIUC3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF103_swigregister(itkImageToImageFilterIUC3IVF103)
class itkImageToImageFilterIUC4IVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageToImageFilterIUC4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC4
        GetInput(self, idx) -> itkImageUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUC4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_cast(obj)

# Register itkImageToImageFilterIUC4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF104_swigregister(itkImageToImageFilterIUC4IVF104)
class itkImageToImageFilterIUS2IVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageToImageFilterIUS2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS2
        GetInput(self, idx) -> itkImageUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUS2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_cast(obj)

# Register itkImageToImageFilterIUS2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF102_swigregister(itkImageToImageFilterIUS2IVF102)
class itkImageToImageFilterIUS3IVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageToImageFilterIUS3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS3
        GetInput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUS3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_cast(obj)

# Register itkImageToImageFilterIUS3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF103_swigregister(itkImageToImageFilterIUS3IVF103)
class itkImageToImageFilterIUS4IVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageToImageFilterIUS4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS4
        GetInput(self, idx) -> itkImageUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_GetDirectionTolerance(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUS4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_cast(obj)

# Register itkImageToImageFilterIUS4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF104_swigregister(itkImageToImageFilterIUS4IVF104)

def itkImageVF102_New():
    return itkImageVF102.New()

class itkImageVF102(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkImageVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex2 const &
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex2 const &

        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF10
        GetBufferPointer(self) -> itkVectorF10
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > const *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageVF102 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 > > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF102

        Create a new object of the class itkImageVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageVF102_swigregister(itkImageVF102)

def itkImageVF103_New():
    return itkImageVF103.New()

class itkImageVF103(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF10
        GetBufferPointer(self) -> itkVectorF10
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > const *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageVF103 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 >,3 > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF103

        Create a new object of the class itkImageVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageVF103_swigregister(itkImageVF103)

def itkImageVF104_New():
    return itkImageVF104.New()

class itkImageVF104(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkImageVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex4 const &
        value: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex4 const &

        GetPixel(self, index) -> itkVectorF10

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF10
        GetBufferPointer(self) -> itkVectorF10
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > const *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,10 > > *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageVF104 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,10 > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float,10 >,4 > > const
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF104

        Create a new object of the class itkImageVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageVF104_swigregister(itkImageVF104)

def itkRunLengthTextureFeaturesImageFilterID2IVF102_New():
    return itkRunLengthTextureFeaturesImageFilterID2IVF102.New()

class itkRunLengthTextureFeaturesImageFilterID2IVF102(itkImageToImageFilterID2IVF102):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID2IVF102

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID2IVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID2IVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID2IVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID2IVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2IVF102_swigregister(itkRunLengthTextureFeaturesImageFilterID2IVF102)

def itkRunLengthTextureFeaturesImageFilterID2VIF2_New():
    return itkRunLengthTextureFeaturesImageFilterID2VIF2.New()

class itkRunLengthTextureFeaturesImageFilterID2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID2VIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID2VIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID2VIF2

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID2VIF2 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID2VIF2_swigregister(itkRunLengthTextureFeaturesImageFilterID2VIF2)

def itkRunLengthTextureFeaturesImageFilterID3IVF103_New():
    return itkRunLengthTextureFeaturesImageFilterID3IVF103.New()

class itkRunLengthTextureFeaturesImageFilterID3IVF103(itkImageToImageFilterID3IVF103):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID3IVF103

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID3IVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID3IVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID3IVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID3IVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3IVF103_swigregister(itkRunLengthTextureFeaturesImageFilterID3IVF103)

def itkRunLengthTextureFeaturesImageFilterID3VIF3_New():
    return itkRunLengthTextureFeaturesImageFilterID3VIF3.New()

class itkRunLengthTextureFeaturesImageFilterID3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID3VIF3

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID3VIF3 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID3VIF3_swigregister(itkRunLengthTextureFeaturesImageFilterID3VIF3)

def itkRunLengthTextureFeaturesImageFilterID4IVF104_New():
    return itkRunLengthTextureFeaturesImageFilterID4IVF104.New()

class itkRunLengthTextureFeaturesImageFilterID4IVF104(itkImageToImageFilterID4IVF104):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID4IVF104

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID4IVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID4IVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID4IVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID4IVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4IVF104_swigregister(itkRunLengthTextureFeaturesImageFilterID4IVF104)

def itkRunLengthTextureFeaturesImageFilterID4VIF4_New():
    return itkRunLengthTextureFeaturesImageFilterID4VIF4.New()

class itkRunLengthTextureFeaturesImageFilterID4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4VIF4):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterID4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterID4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterID4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterID4VIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterID4VIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterID4VIF4

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterID4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterID4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterID4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterID4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterID4VIF4 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterID4VIF4_swigregister(itkRunLengthTextureFeaturesImageFilterID4VIF4)

def itkRunLengthTextureFeaturesImageFilterIF2IVF102_New():
    return itkRunLengthTextureFeaturesImageFilterIF2IVF102.New()

class itkRunLengthTextureFeaturesImageFilterIF2IVF102(itkImageToImageFilterIF2IVF102):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF2IVF102

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF2IVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF2IVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF2IVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF2IVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2IVF102_swigregister(itkRunLengthTextureFeaturesImageFilterIF2IVF102)

def itkRunLengthTextureFeaturesImageFilterIF2VIF2_New():
    return itkRunLengthTextureFeaturesImageFilterIF2VIF2.New()

class itkRunLengthTextureFeaturesImageFilterIF2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF2VIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF2VIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF2VIF2

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF2VIF2 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF2VIF2_swigregister(itkRunLengthTextureFeaturesImageFilterIF2VIF2)

def itkRunLengthTextureFeaturesImageFilterIF3IVF103_New():
    return itkRunLengthTextureFeaturesImageFilterIF3IVF103.New()

class itkRunLengthTextureFeaturesImageFilterIF3IVF103(itkImageToImageFilterIF3IVF103):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF3IVF103

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF3IVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF3IVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF3IVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF3IVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3IVF103_swigregister(itkRunLengthTextureFeaturesImageFilterIF3IVF103)

def itkRunLengthTextureFeaturesImageFilterIF3VIF3_New():
    return itkRunLengthTextureFeaturesImageFilterIF3VIF3.New()

class itkRunLengthTextureFeaturesImageFilterIF3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF3VIF3

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF3VIF3 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF3VIF3_swigregister(itkRunLengthTextureFeaturesImageFilterIF3VIF3)

def itkRunLengthTextureFeaturesImageFilterIF4IVF104_New():
    return itkRunLengthTextureFeaturesImageFilterIF4IVF104.New()

class itkRunLengthTextureFeaturesImageFilterIF4IVF104(itkImageToImageFilterIF4IVF104):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF4IVF104

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF4IVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF4IVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF4IVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF4IVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4IVF104_swigregister(itkRunLengthTextureFeaturesImageFilterIF4IVF104)

def itkRunLengthTextureFeaturesImageFilterIF4VIF4_New():
    return itkRunLengthTextureFeaturesImageFilterIF4VIF4.New()

class itkRunLengthTextureFeaturesImageFilterIF4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4VIF4):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIF4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIF4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIF4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> float"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIF4VIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIF4VIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIF4VIF4

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIF4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIF4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIF4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIF4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIF4VIF4 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIF4VIF4_swigregister(itkRunLengthTextureFeaturesImageFilterIF4VIF4)

def itkRunLengthTextureFeaturesImageFilterISS2IVF102_New():
    return itkRunLengthTextureFeaturesImageFilterISS2IVF102.New()

class itkRunLengthTextureFeaturesImageFilterISS2IVF102(itkImageToImageFilterISS2IVF102):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS2IVF102

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS2IVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS2IVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS2IVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS2IVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2IVF102_swigregister(itkRunLengthTextureFeaturesImageFilterISS2IVF102)

def itkRunLengthTextureFeaturesImageFilterISS2VIF2_New():
    return itkRunLengthTextureFeaturesImageFilterISS2VIF2.New()

class itkRunLengthTextureFeaturesImageFilterISS2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2VIF2):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS2VIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS2VIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS2VIF2

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS2VIF2 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS2VIF2_swigregister(itkRunLengthTextureFeaturesImageFilterISS2VIF2)

def itkRunLengthTextureFeaturesImageFilterISS3IVF103_New():
    return itkRunLengthTextureFeaturesImageFilterISS3IVF103.New()

class itkRunLengthTextureFeaturesImageFilterISS3IVF103(itkImageToImageFilterISS3IVF103):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS3IVF103

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS3IVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS3IVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS3IVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS3IVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3IVF103_swigregister(itkRunLengthTextureFeaturesImageFilterISS3IVF103)

def itkRunLengthTextureFeaturesImageFilterISS3VIF3_New():
    return itkRunLengthTextureFeaturesImageFilterISS3VIF3.New()

class itkRunLengthTextureFeaturesImageFilterISS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS3VIF3

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS3VIF3 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS3VIF3_swigregister(itkRunLengthTextureFeaturesImageFilterISS3VIF3)

def itkRunLengthTextureFeaturesImageFilterISS4IVF104_New():
    return itkRunLengthTextureFeaturesImageFilterISS4IVF104.New()

class itkRunLengthTextureFeaturesImageFilterISS4IVF104(itkImageToImageFilterISS4IVF104):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS4IVF104

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS4IVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS4IVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS4IVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS4IVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4IVF104_swigregister(itkRunLengthTextureFeaturesImageFilterISS4IVF104)

def itkRunLengthTextureFeaturesImageFilterISS4VIF4_New():
    return itkRunLengthTextureFeaturesImageFilterISS4VIF4.New()

class itkRunLengthTextureFeaturesImageFilterISS4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4VIF4):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterISS4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterISS4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterISS4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterISS4VIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterISS4VIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterISS4VIF4

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterISS4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterISS4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterISS4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterISS4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterISS4VIF4 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterISS4VIF4_swigregister(itkRunLengthTextureFeaturesImageFilterISS4VIF4)

def itkRunLengthTextureFeaturesImageFilterIUC2IVF102_New():
    return itkRunLengthTextureFeaturesImageFilterIUC2IVF102.New()

class itkRunLengthTextureFeaturesImageFilterIUC2IVF102(itkImageToImageFilterIUC2IVF102):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC2IVF102

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC2IVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC2IVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC2IVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC2IVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2IVF102_swigregister(itkRunLengthTextureFeaturesImageFilterIUC2IVF102)

def itkRunLengthTextureFeaturesImageFilterIUC2VIF2_New():
    return itkRunLengthTextureFeaturesImageFilterIUC2VIF2.New()

class itkRunLengthTextureFeaturesImageFilterIUC2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC2VIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC2VIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC2VIF2

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC2VIF2 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC2VIF2_swigregister(itkRunLengthTextureFeaturesImageFilterIUC2VIF2)

def itkRunLengthTextureFeaturesImageFilterIUC3IVF103_New():
    return itkRunLengthTextureFeaturesImageFilterIUC3IVF103.New()

class itkRunLengthTextureFeaturesImageFilterIUC3IVF103(itkImageToImageFilterIUC3IVF103):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC3IVF103

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC3IVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC3IVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC3IVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC3IVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3IVF103_swigregister(itkRunLengthTextureFeaturesImageFilterIUC3IVF103)

def itkRunLengthTextureFeaturesImageFilterIUC3VIF3_New():
    return itkRunLengthTextureFeaturesImageFilterIUC3VIF3.New()

class itkRunLengthTextureFeaturesImageFilterIUC3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC3VIF3

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC3VIF3 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC3VIF3_swigregister(itkRunLengthTextureFeaturesImageFilterIUC3VIF3)

def itkRunLengthTextureFeaturesImageFilterIUC4IVF104_New():
    return itkRunLengthTextureFeaturesImageFilterIUC4IVF104.New()

class itkRunLengthTextureFeaturesImageFilterIUC4IVF104(itkImageToImageFilterIUC4IVF104):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC4IVF104

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC4IVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC4IVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC4IVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC4IVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4IVF104_swigregister(itkRunLengthTextureFeaturesImageFilterIUC4IVF104)

def itkRunLengthTextureFeaturesImageFilterIUC4VIF4_New():
    return itkRunLengthTextureFeaturesImageFilterIUC4VIF4.New()

class itkRunLengthTextureFeaturesImageFilterIUC4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4VIF4):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUC4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUC4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUC4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUC4VIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUC4VIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUC4VIF4

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUC4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUC4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUC4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUC4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUC4VIF4 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUC4VIF4_swigregister(itkRunLengthTextureFeaturesImageFilterIUC4VIF4)

def itkRunLengthTextureFeaturesImageFilterIUS2IVF102_New():
    return itkRunLengthTextureFeaturesImageFilterIUS2IVF102.New()

class itkRunLengthTextureFeaturesImageFilterIUS2IVF102(itkImageToImageFilterIUS2IVF102):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS2IVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS2IVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS2IVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS2IVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS2IVF102

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS2IVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS2IVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS2IVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS2IVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS2IVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2IVF102_swigregister(itkRunLengthTextureFeaturesImageFilterIUS2IVF102)

def itkRunLengthTextureFeaturesImageFilterIUS2VIF2_New():
    return itkRunLengthTextureFeaturesImageFilterIUS2VIF2.New()

class itkRunLengthTextureFeaturesImageFilterIUS2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS2VIF2_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS2VIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS2VIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS2VIF2

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS2VIF2 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS2VIF2_swigregister(itkRunLengthTextureFeaturesImageFilterIUS2VIF2)

def itkRunLengthTextureFeaturesImageFilterIUS3IVF103_New():
    return itkRunLengthTextureFeaturesImageFilterIUS3IVF103.New()

class itkRunLengthTextureFeaturesImageFilterIUS3IVF103(itkImageToImageFilterIUS3IVF103):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS3IVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS3IVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS3IVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS3IVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS3IVF103

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS3IVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS3IVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS3IVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS3IVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS3IVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3IVF103_swigregister(itkRunLengthTextureFeaturesImageFilterIUS3IVF103)

def itkRunLengthTextureFeaturesImageFilterIUS3VIF3_New():
    return itkRunLengthTextureFeaturesImageFilterIUS3VIF3.New()

class itkRunLengthTextureFeaturesImageFilterIUS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS3VIF3_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS3VIF3

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS3VIF3 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS3VIF3_swigregister(itkRunLengthTextureFeaturesImageFilterIUS3VIF3)

def itkRunLengthTextureFeaturesImageFilterIUS4IVF104_New():
    return itkRunLengthTextureFeaturesImageFilterIUS4IVF104.New()

class itkRunLengthTextureFeaturesImageFilterIUS4IVF104(itkImageToImageFilterIUS4IVF104):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS4IVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS4IVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS4IVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS4IVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS4IVF104

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS4IVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS4IVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS4IVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS4IVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS4IVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4IVF104_swigregister(itkRunLengthTextureFeaturesImageFilterIUS4IVF104)

def itkRunLengthTextureFeaturesImageFilterIUS4VIF4_New():
    return itkRunLengthTextureFeaturesImageFilterIUS4VIF4.New()

class itkRunLengthTextureFeaturesImageFilterIUS4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4VIF4):
    r"""Proxy of C++ itkRunLengthTextureFeaturesImageFilterIUS4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRunLengthTextureFeaturesImageFilterIUS4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRunLengthTextureFeaturesImageFilterIUS4VIF4_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_Clone(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetNeighborhoodRadius(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetMaskImage(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetNumberOfBinsPerAxis(self)

    def GetHistogramValueMinimum(self):
        r"""GetHistogramValueMinimum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetHistogramValueMinimum(self)

    def SetHistogramValueMinimum(self, _arg):
        r"""
        SetHistogramValueMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetHistogramValueMinimum(self, _arg)

    def GetHistogramValueMaximum(self):
        r"""GetHistogramValueMaximum(self) -> unsigned short"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetHistogramValueMaximum(self)

    def SetHistogramValueMaximum(self, _arg):
        r"""
        SetHistogramValueMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetHistogramValueMaximum(self, _arg)

    def GetHistogramDistanceMinimum(self):
        r"""GetHistogramDistanceMinimum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetHistogramDistanceMinimum(self)

    def SetHistogramDistanceMinimum(self, _arg):
        r"""
        SetHistogramDistanceMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetHistogramDistanceMinimum(self, _arg)

    def GetHistogramDistanceMaximum(self):
        r"""GetHistogramDistanceMaximum(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetHistogramDistanceMaximum(self)

    def SetHistogramDistanceMaximum(self, _arg):
        r"""
        SetHistogramDistanceMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetHistogramDistanceMaximum(self, _arg)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_GetInsidePixelValue(self)
    OutputPixelTypeCheck = _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkRunLengthTextureFeaturesImageFilterIUS4VIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRunLengthTextureFeaturesImageFilterIUS4VIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRunLengthTextureFeaturesImageFilterIUS4VIF4

        Create a new object of the class itkRunLengthTextureFeaturesImageFilterIUS4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRunLengthTextureFeaturesImageFilterIUS4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRunLengthTextureFeaturesImageFilterIUS4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRunLengthTextureFeaturesImageFilterIUS4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRunLengthTextureFeaturesImageFilterIUS4VIF4 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkRunLengthTextureFeaturesImageFilterIUS4VIF4_swigregister(itkRunLengthTextureFeaturesImageFilterIUS4VIF4)
class itkVectorF10(itk.itkFixedArrayPython.itkFixedArrayF10):
    r"""Proxy of C++ itkVectorF10 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    @staticmethod
    def GetVectorDimension():
        r"""GetVectorDimension() -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_GetVectorDimension()

    def SetVnlVector(self, arg0):
        r"""
        SetVnlVector(self, arg0)

        Parameters
        ----------
        arg0: vnl_vectorF const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_SetVnlVector(self, arg0)

    def GetVnlVector(self, *args):
        r"""
        GetVnlVector(self) -> vnl_vector_refF
        GetVnlVector(self) -> vnl_vectorF
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_GetVnlVector(self, *args)

    def __iadd__(self, vec):
        r"""
        __iadd__(self, vec) -> itkVectorF10

        Parameters
        ----------
        vec: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___iadd__(self, vec)

    def __isub__(self, vec):
        r"""
        __isub__(self, vec) -> itkVectorF10

        Parameters
        ----------
        vec: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___isub__(self, vec)

    def __neg__(self):
        r"""__neg__(self) -> itkVectorF10"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___neg__(self)

    def __add__(self, vec):
        r"""
        __add__(self, vec) -> itkVectorF10

        Parameters
        ----------
        vec: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___add__(self, vec)

    def __sub__(self, vec):
        r"""
        __sub__(self, vec) -> itkVectorF10

        Parameters
        ----------
        vec: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___sub__(self, vec)

    def __mul__(self, *args):
        r"""
        __mul__(self, other) -> float

        Parameters
        ----------
        other: itkVectorF10 const &

        __mul__(self, value) -> itkVectorF10

        Parameters
        ----------
        value: float const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___mul__(self, *args)

    def __eq__(self, v):
        r"""
        __eq__(self, v) -> bool

        Parameters
        ----------
        v: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___eq__(self, v)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkVectorF10 const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___ne__(self, other)

    def GetNorm(self):
        r"""GetNorm(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_GetNorm(self)

    def GetSquaredNorm(self):
        r"""GetSquaredNorm(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_GetSquaredNorm(self)

    @staticmethod
    def GetNumberOfComponents():
        r"""GetNumberOfComponents() -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_GetNumberOfComponents()

    def Normalize(self):
        r"""Normalize(self) -> double"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_Normalize(self)

    def SetNthComponent(self, c, v):
        r"""
        SetNthComponent(self, c, v)

        Parameters
        ----------
        c: int
        v: float const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_SetNthComponent(self, c, v)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF10
        __init__(self, r) -> itkVectorF10

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF10

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF10

        Parameters
        ----------
        stdArray: std::array< float,10 > const &

        __init__(self, arg0) -> itkVectorF10

        Parameters
        ----------
        arg0: itkVectorF10 const &

        """
        _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_swiginit(self, _itkRunLengthTextureFeaturesImageFilterPython.new_itkVectorF10(*args))
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkVectorF10

    def __getitem__(self, d):
        r"""
        __getitem__(self, d) -> float

        Parameters
        ----------
        d: unsigned long

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___getitem__(self, d)

    def __setitem__(self, d, v):
        r"""
        __setitem__(self, d, v)

        Parameters
        ----------
        d: unsigned long
        v: float

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___setitem__(self, d, v)

    @staticmethod
    def __len__():
        r"""__len__() -> unsigned int"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___len__()

    def __repr__(self):
        r"""__repr__(self) -> std::string"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10___repr__(self)

# Register itkVectorF10 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkVectorF10_swigregister(itkVectorF10)

def itkImageFileReaderIVF102_New():
    return itkImageFileReaderIVF102.New()

class itkImageFileReaderIVF102(itkImageSourceIVF102):
    r"""Proxy of C++ itkImageFileReaderIVF102 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF102_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_UseStreamingOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF102

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF102

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF102

        Create a new object of the class itkImageFileReaderIVF102 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF102.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF102.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF102.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF102 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF102_swigregister(itkImageFileReaderIVF102)

def itkImageFileReaderIVF103_New():
    return itkImageFileReaderIVF103.New()

class itkImageFileReaderIVF103(itkImageSourceIVF103):
    r"""Proxy of C++ itkImageFileReaderIVF103 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF103_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_UseStreamingOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF103

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF103

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF103

        Create a new object of the class itkImageFileReaderIVF103 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF103.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF103.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF103.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF103 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF103_swigregister(itkImageFileReaderIVF103)

def itkImageFileReaderIVF104_New():
    return itkImageFileReaderIVF104.New()

class itkImageFileReaderIVF104(itkImageSourceIVF104):
    r"""Proxy of C++ itkImageFileReaderIVF104 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF104_Pointer"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itk::ImageIOBase *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itk::ImageIOBase *"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itk::ImageIOBase const
        GetImageIO(self) -> itk::ImageIOBase *
        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_UseStreamingOff(self)
    __swig_destroy__ = _itkRunLengthTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF104

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF104

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF104

        Create a new object of the class itkImageFileReaderIVF104 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF104.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF104.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF104.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF104 in _itkRunLengthTextureFeaturesImageFilterPython:
_itkRunLengthTextureFeaturesImageFilterPython.itkImageFileReaderIVF104_swigregister(itkImageFileReaderIVF104)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_writer(*args,  file_name: str=..., image_io=..., io_region=..., number_of_stream_divisions: int=..., use_compression: bool=..., compression_level: int=..., use_input_meta_data_dictionary: bool=...,**kwargs):
    """Functional interface for ImageFileWriter"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'image_io':image_io,'io_region':io_region,'number_of_stream_divisions':number_of_stream_divisions,'use_compression':use_compression,'compression_level':compression_level,'use_input_meta_data_dictionary':use_input_meta_data_dictionary }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageFileWriter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TextureFeatures.ImageFileWriter
    image_file_writer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_writer.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_source(*args, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageSource"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageSource.New(*args, **kwargs)

    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TextureFeatures.ImageSource
    image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def run_length_texture_features_image_filter(*args: itkt.ImageLike,  neighborhood_radius: Sequence[int]=..., mask_image: itkt.Image=..., offsets: Sequence[Sequence[int]]=..., offset: Sequence[int]=..., number_of_bins_per_axis: int=..., histogram_value_minimum: int=..., histogram_value_maximum: int=..., histogram_distance_minimum: float=..., histogram_distance_maximum: float=..., inside_pixel_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RunLengthTextureFeaturesImageFilter"""
    import itk

    kwarg_typehints = { 'neighborhood_radius':neighborhood_radius,'mask_image':mask_image,'offsets':offsets,'offset':offset,'number_of_bins_per_axis':number_of_bins_per_axis,'histogram_value_minimum':histogram_value_minimum,'histogram_value_maximum':histogram_value_maximum,'histogram_distance_minimum':histogram_distance_minimum,'histogram_distance_maximum':histogram_distance_maximum,'inside_pixel_value':inside_pixel_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RunLengthTextureFeaturesImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def run_length_texture_features_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TextureFeatures.RunLengthTextureFeaturesImageFilter
    run_length_texture_features_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    run_length_texture_features_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_reader(*args,  file_name_input=..., file_name: str=..., image_io=..., use_streaming: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageFileReader"""
    import itk

    kwarg_typehints = { 'file_name_input':file_name_input,'file_name':file_name,'image_io':image_io,'use_streaming':use_streaming }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageFileReader.New(*args, **kwargs)

    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TextureFeatures.ImageFileReader
    image_file_reader.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_reader.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TextureFeatures.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__



