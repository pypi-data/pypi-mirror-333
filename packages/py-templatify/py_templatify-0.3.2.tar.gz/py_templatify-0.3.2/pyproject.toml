[project]
name = "py-templatify"
version = "0.3.2"
description = "Minimalist Python template generation with type-safe annotations. Perfect for chat bots and LLM prompts."
license = "MIT"
readme = "README.md"
authors = [
    { name = "Galtozzy", email = "galtozzy+git@gmail.com" },
]
requires-python = ">=3.13,<4"
dependencies = [
    "typing-extensions>=4.12.2 ; python_full_version < '3.13'",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[project.urls]
Homepage = "https://github.com/EzyGang/py-templatify"
Repository = "https://github.com/EzyGang/py-templatify"

[tool.taskipy.tasks]
format-and-lint = "task ruff && task mypy-lint"
ruff = "ruff format ./src/ ./tests/ && ruff check ./src/ ./tests/ --fix --unsafe-fixes"
tests = "pytest tests/ -vvv -s"
ruff-lint = "ruff check ./src"
mypy-lint = "mypy --install-types --non-interactive ./src/"

[tool.ruff]
line-length = 120
extend-exclude = [
    "site-packages",
    "*.pyi",
]
target-version = "py312"

[tool.ruff.lint]
fixable = [
    "ALL",
]
unfixable = []
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
    "UP",
]
ignore = []

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.isort]
split-on-trailing-comma = false
lines-after-imports = 2
known-first-party = [
    "py_templatify",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = false

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
exclude = [
    "*.pyi",
]

[tool.mypy]
strict = true
pretty = true
exclude = [
    "test_",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--cov=src/py_templatify",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
python_files = "test*.py"
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__ config docker etc"
testpaths = [
    "tests",
]

[tool.coverage.run]
omit = []
concurrency = [
    "thread",
]

[tool.coverage.report]
omit = []
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "@abstract",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "__all__",
    "if TYPE_CHECKING:",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "coverage>=7.6.10",
    "mypy>=1.14.1",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "ruff>=0.9.2",
    "taskipy>=1.14.1",
    "pytest-mock>=3.14.0",
]
