# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Worker CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
env:
  CODECOV_VERSION: 'v5.3.1'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install uv
      run: pip install uv

    - name: Install project and dev dependencies
      run: |
        uv venv
        uv pip install .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 src tests  --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 src tests  --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV
    - name: Run tests with coverage
      run: |
        uv run coverage run -m pytest --basetemp=test_tmp_dir -cov --junitxml=junit.xml -o junit_family=legacy
        uv run coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        fail_ci_if_error: true
        files: ./coverage.xml
        version: latest
        slug: michalsi/lister
    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python-