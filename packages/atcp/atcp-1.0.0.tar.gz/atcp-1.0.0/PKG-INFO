Metadata-Version: 2.2
Name: atcp
Version: 1.0.0
Summary: An ATCP Protocol
License: MIT License
        
        Copyright (c) 2025 wer310
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/wer310/atcp
Project-URL: Issues, https://github.com/wer310/atcp/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# ATCP
The trick of this protocol is that its connection address has a path (atcp://example.com[:1614]/[...]) there are also several types of packages:
1. The PING server/client responds with PONG if the connection can be continued or CLOSE if it needs to be closed. It is sent every 10 seconds.
2. `PONG` - I've already told you.
3. `CLOSE` - also.
4. `MESSAGE <message>` - the message itself.
5. `PATH <The PATH STARTING FROM / >` is sent when the client connects.
6. `CONN <code>` is sent by the server after sending the PATH by the client (0 - successfully connected, 1 - connection error and connection closure) and by the opposite side when the other side is notified (0 - ok, -1 - error).
