[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=1.7" ]

[tool.poetry]
name = "openfisca-extension_template"
version = "2.0.7"
description = "An OpenFisca extension that adds some variables to an already-existing tax and benefit system."
license = "AGPL-3.0-only"
authors = [ "OpenFisca Team <contact@openfisca.org>" ]
maintainers = [ "OpenFisca Team <contact@openfisca.org>" ]
readme = "README.md"
homepage = "https://openfisca.org"
repository = "https://github.com/openfisca/extension-template"
documentation = "https://openfisca.org/doc"
keywords = [ "microsimulation", "tax", "benefit", "rac", "rules-as-code" ]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Information Analysis",
]
packages = [ { include = "openfisca_extension_template", from = "src" } ]
include = [ { path = "tests/*", format = [ "sdist", "wheel" ] } ]

[tool.poetry.dependencies]
python = "~3.9 || ~3.10 || ~3.11 || ~3.12 || ~3.13"
openfisca-country_template = ">=8"
codespell = { version = "^2.3.0", optional = true }
isort = { version = "^5.13.2", optional = true }
mdformat-footnote = { version = "^0.1.1", optional = true }
mdformat-frontmatter = { version = "^2.0.8", optional = true }
mdformat-gfm = { version = "^0.3.6", optional = true }
mdformat-gfm-alerts = { version = "^1.0.1", optional = true }
pyproject-fmt = { version = "^2.4.3", optional = true }
ruff = { version = "^0.6.9", optional = true }
ruff-lsp = { version = "^0.0.57", optional = true }
shellcheck-py = { version = "^0.10.0.1", optional = true }
shfmt-py = { version = "^3.7.0.1", optional = true }
twine = { version = "^5.1.1", optional = true }
yamllint = { version = "^1.35.1", optional = true }

[tool.poetry.extras]
dev = [
  "codespell",
  "isort",
  "mdformat-footnote",
  "mdformat-frontmatter",
  "mdformat-gfm",
  "mdformat-gfm-alerts",
  "pyproject-fmt",
  "ruff",
  "ruff-lsp",
  "shellcheck-py",
  "shfmt-py",
  "yamllint",
]
ci = [ "twine" ]

[tool.ruff]
target-version = "py39"
format.docstring-code-line-length = 72
format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
  "ANN",
  "COM812",
  "D101",
  "D104",
  "ISC001",
  "N801",
  "N805",
  "S101",
  "S310",
  "S603",
]
lint.per-file-ignores."[!s][!r][!c]*/**" = [ "INP001" ]
lint.pydocstyle.convention = "google"

[tool.isort]
case_sensitive = true
combine_as_imports = true
force_alphabetical_sort_within_sections = false
group_by_package = true
honor_noqa = true
include_trailing_comma = true
known_first_party = [ "openfisca_extension_template" ]
known_openfisca = [ "openfisca_core", "openfisca_country_template" ]
known_typing = [ "*collections.abc*", "*typing*", "*typing_extensions*" ]
known_types = [ "*types*" ]
multi_line_output = 3
profile = "black"
py_version = 39
sections = [
  "FUTURE",
  "TYPING",
  "TYPES",
  "STDLIB",
  "THIRDPARTY",
  "OPENFISCA",
  "FIRSTPARTY",
  "LOCALFOLDER",
]

[tool.codespell]
ignore-words-list = [ "THIRDPARTY" ]

[tool.pytest.ini_options]
addopts = "--exitfirst --showlocals --doctest-modules --disable-warnings --import-mode importlib"
testpaths = [ "openfisca_extension_template/tests" ]
python_files = "**/*.py"

[tool.tox]
requires = [ "tox>=4.20" ]
env_list = [ "py39", "py310", "py311", "py312", "py313", "dist" ]

[tool.tox.env_run_base]
commands = [
  [
    "openfisca",
    "test",
    "{envsitepackagesdir}/tests",
    "--country-package=openfisca_country_template",
    "--extensions=openfisca_extension_template",
  ],
]

[tool.tox.env.dist]
basepython = [ "py39" ]
commands = [ [ "twine", "check", "dist/*" ] ]
commands_pre = [ [ "poetry", "build" ] ]
deps = [ "poetry", "twine" ]
