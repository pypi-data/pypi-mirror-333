[project]
name = "aiteamwork"
version = "0.22.3"
description = "A framework to build complex AI agents and workflows. Designed to be simple, modular, scalable, testable and debuggable!"
authors = [
    { name = "Jo√£o Victor", email = "<aiteamwork@joaovictor.com>"}
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/joaovictorlouro/aiteamwork"
repository = "https://github.com/joaovictorlouro/aiteamwork"
documentation = "https://github.com/joaovictorlouro/aiteamwork"
"Bug Tracker" = "https://github.com/joaovictorlouro/aiteamwork/issues"

keywords = ["ai", "workflow", "agent", "framework", "aiteamwork"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Flake8",
    "Framework :: Jupyter",
    "Framework :: Pydantic",
    "Framework :: Pytest",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
include = ["LICENSE"]
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.10.5",
    "aiohttp>=3.11.11"
]

[tool.poetry]
packages = [
    {include = "aiteamwork"},
    {include = "aiteamwork/py.typed"},
]

[tool.poetry.group.dev.dependencies]
pytest = { version = "8.3.5" }
mypy = { version = "1.15.0" }
black = { version = "25.1.0", extras = ["jupyter"] }
go-task-bin = { version = "3.42.1" }
flake8 = { version = "7.1.2" }
ipython = { version = "9.0.2" }
ipykernel = { version = "6.29.5" }
jupyter = { version = "1.1.1" }
isort = { version = "6.0.1" }
python-dotenv = { version = "1.0.1" }
openai = { version = "1.65.5" }
types-PyYAML = { version = "6.0.12.20241230" }
pytest-asyncio = { version = "0.25.3" }

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.venv
    | \.conda
)/
'''

[tool.flake8]
max-line-length = 120
exclude = '.venv/,.conda/'

[tool.isort]
py_version=312
profile = "black"
line_length = 120
extend_skip_glob = ['.venv/*', '.conda/*']
