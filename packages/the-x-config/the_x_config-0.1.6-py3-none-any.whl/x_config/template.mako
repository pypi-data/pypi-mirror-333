# autogenerated by X-Config, specifically for annotations according to PEP-484:
# https://peps.python.org/pep-0484/#stub-files


from enum import Enum
from typing import Type
from pydantic import BaseModel


class Environment(Enum):
% for env in env_choices:
    ${env.name.upper()} = '${env.value}'
% endfor


class ConstVars(BaseModel):
% for key, type, value in constants:
    ${key}: ${type} = ${value}
% endfor


class EnvVars(BaseModel):
% if env_vars_model:
% for key, type in env_vars_model.__annotations__.items():
    ${key}: ${type.__name__}
% endfor
% else:
    pass
% endif


class SecretVars(BaseModel):
% if secret_vars_model:
% for key, type in secret_vars_model.__annotations__.items():
    ${key}: ${type.__name__}
% endfor
% else:
    pass
% endif


class Config:
    x_const: ConstVars
    x_env: EnvVars
    x_secret: SecretVars
    current_environment: Environment
    environment_choices: Type[Environment]


config: Config