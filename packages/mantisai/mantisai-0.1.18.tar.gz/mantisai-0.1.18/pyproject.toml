[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mantisai"
version = "0.1.18"
description = "A Python package for transcribing audio files, summarizing text, and extracting information using Gemini AI and Pydantic."
requires-python = ">=3.9,<4.0"
authors = [
    { name = "Paul Elliot", email = "paul@paulelliot.co" }
]
readme = "README.md"
license = { text = "Apache 2.0" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "google-generativeai>=0.8.0,<0.9.0",
    "requests>=2.28.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "yt_dlp>=2023.10.0",
    "tenacity>=8.0.0,<9.0.0",
    "grpcio==1.60.1",  # Pin specific version to avoid warnings
    "rich>=13.0.0,<14.0.0",  # For CLI progress bars and formatting
]

[project.optional-dependencies]
dev = [
    "flake8>=6.0.0,<7.0.0",
    "black>=23.0.0,<24.0.0",
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "sphinx>=7.0.0,<8.0.0",
    "sphinx_rtd_theme>=1.0.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.0.0,<2.0.0",
    "SpeechRecognition>=3.0.0,<4.0.0",
]

[project.scripts]
mantis = "mantis.cli:main"

[tool.hatch.build]
# Hatch settings for building your packages (if needed)

[tool.hatch.build.targets.wheel]
packages = ["mantis"]  # Tell Hatch to include the mantis directory

[tool.hatch.version]
path = "mantis/__init__.py"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
markers = [
    "local_only: marks tests that should only run locally (not in CI)",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.isort]
profile = "black"
line_length = 120
