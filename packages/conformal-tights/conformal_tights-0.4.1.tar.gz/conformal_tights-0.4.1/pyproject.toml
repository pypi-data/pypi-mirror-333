[build-system]  # https://docs.astral.sh/uv/concepts/projects/config/#build-systems
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]  # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "conformal-tights"
version = "0.4.1"
description = "A Python package for Coherent Conformal Prediction."
readme = "README.md"
authors = [
  { name = "Laurent Sorber", email = "laurent@superlinear.eu" },
]
requires-python = ">=3.10,<4.0"
dependencies = [
  "numpy (>=1.26.0)",
  "pandas (>=2.1.1)",
  "scikit-learn (>=1.3.1)",
  "scipy (>=1.11.2,!=1.15.0.*,!=1.15.1,!=1.15.2)",  # Exclude certain versions because of https://github.com/scipy/scipy/issues/22655.
  "u8darts (>=0.28.0)",
  "xgboost (>=2.1.0)",
]

[project.urls]  # https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://github.com/superlinear-ai/conformal-tights"
source = "https://github.com/superlinear-ai/conformal-tights"
changelog = "https://github.com/superlinear-ai/conformal-tights/blob/main/CHANGELOG.md"
releasenotes = "https://github.com/superlinear-ai/conformal-tights/releases"
documentation = "https://github.com/superlinear-ai/conformal-tights"
issues = "https://github.com/superlinear-ai/conformal-tights/issues"

[dependency-groups]  # https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies
dev = [
  "commitizen (>=4.4.1)",
  "coverage[toml] (>=7.6.12)",
  "ipykernel (>=6.29.5)",
  "ipython (>=8.18.0)",
  "ipywidgets (>=8.1.5)",
  "lightgbm (>=4.3.0)",
  "mypy (>=1.15.0)",
  "nbconvert (>=7.16.6)",
  "pdoc (>=15.0.1)",
  "poethepoet (>=0.33.0)",
  "pre-commit (>=4.1.0)",
  "pytest (>=8.3.5)",
  "pytest-mock (>=3.14.0)",
  "pytest-xdist (>=3.6.1)",
  "ruff (>=0.9.10)",
  "typeguard (>=4.4.2)",
]

[tool.commitizen]  # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump: v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "uv"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning", "ignore::sklearn.exceptions.SkipTestWarning"]
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://docs.astral.sh/ruff/settings/
fix = true
line-length = 100
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FBT", "FLY", "FURB", "G", "I", "ICN", "INP", "INT", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "SLF", "SLOT", "T10", "T20", "TCH", "TID", "TRY", "UP", "W", "YTT"]
ignore = ["D203", "D213", "E501", "N803", "N806", "PLC2401", "RET504", "RUF002", "RUF003", "S101", "S307"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.executor]  # https://github.com/nat-n/poethepoet
type = "simple"

[tool.poe.tasks]

  [tool.poe.tasks.readme]
  help = "Generate this package's README"
  cmd = """
    jupyter nbconvert notebooks/README.ipynb
      --to markdown
      --TagRemovePreprocessor.enabled=True
      --TagRemovePreprocessor.remove_cell_tags remove_cell
      --TagRemovePreprocessor.remove_all_outputs_tags remove_output
      --TagRemovePreprocessor.remove_input_tags remove_input
  """

  [tool.poe.tasks.docs]
  help = "Generate this package's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      conformal_tights
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: numpy)"
    name = "docformat"
    options = ["--docformat"]
    default = "numpy"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lint]
  help = "Lint this package"
    cmd = """
      pre-commit run
        --all-files
        --color always
      """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"
