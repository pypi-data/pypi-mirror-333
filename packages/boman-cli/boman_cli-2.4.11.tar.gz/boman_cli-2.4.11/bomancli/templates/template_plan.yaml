---
env:
  contexts:
    - name: "Boman Authenticated Scan"
      urls:
        - "https://demo.testfire.net/"
      authentication:
        method: "form"
        parameters: # May include any required for scripts. All of the parameters support vars except for the port
          loginPageUrl: "https://demo.testfire.net/login.jsp"
          loginRequestUrl: "https://demo.testfire.net/doLogin"
          loginRequestBody: "uid={%username%}&passw={%password%}&btnSubmit=Login"
        verification:
          method: "both" # String, one of 'response', 'request', 'both', 'poll'
          loggedOutRegex: ".*Sign In.*" # String, regex pattern for determining if logged
      sessionManagement:
        method: ""
        parameters:
          script: ""
          scriptEngine: ""
      users: # List of one or more users available to use for authentication
        - name: "demoadmin" # String, the name to be used by the jobs
          credentials: # List of user credentials - may include any required for scripts
            username: "admin" # String, the username to use when authenticating, vars supported
            password: "admin"
      includePaths: []
      excludePaths: []
      technology:
        exclude:
          - "C"
          - "ASP"
          - "IBM DB2"
          - "PHP"
          - "CouchDB"
          - "XML"
          - "Microsoft SQL Server"
          - "JSP/Servlet"
          - "Firebird"
          - "MongoDB"
          - "HypersonicSQL"
          - "SAP MaxDB"
          - "Ruby"
          - "SCM"
          - "WS"
          - "Microsoft Access"
          - "Sybase"
          - "Python"
  parameters:
    failOnError: true
    failOnWarning: false
    progressToStdout: true
  vars: {}
jobs:
  - parameters:
      scanOnlyInScope: true
      enableTags: false
      disableAllRules: false
    rules: []
    name: "passiveScan-config"
    type: "passiveScan-config"
  - parameters:
      context: "Demo testfire"
      user: "demoadmin"
      url: "https://demo.testfire.net"
      maxDuration: 1
      maxDepth: 2
      maxChildren: 0
    name: "spider"
    type: "spider"
    tests:
      - onFail: "INFO"
        statistic: "automation.spider.urls.added"
        site: ""
        operator: ">="
        value: 100
        name: "At least 100 URLs found"
        type: "stats"
      - name: "spider logged in" # Name of the test, optional
        type: stats # Specifies that the test is of type 'stats'
        statistic: "stats.auth.success" # Name of an integer / long statistic
        operator: ">=" # One of '==', '!=', '>=', '>', '<', '<='
        value: 2 # Value to compare statistic against
        onFail: "info"
      - name: "spider failed" # Name of the test, optional
        type: stats # Specifies that the test is of type 'stats'
        statistic: "stats.auth.failure" # Name of an integer / long statisti
        operator: ">=" # One of '==', '!=', '>=', '>', '<', '<='
        value: 2 # Value to compare statistic against
        onFail: "info"
  - parameters: {}
    name: "passiveScan-wait"
    type: "passiveScan-wait"
  - parameters:
      context: "Demo testfire"
      user: "demoadmin"
      policy: ""
      maxRuleDurationInMins: 0
      maxScanDurationInMins: 5
      maxAlertsPerRule: 0
    policyDefinition:
      defaultStrength: "medium"
      defaultThreshold: "medium"
      rules: []
    tests:
      - name: "spider logged in" # Name of the test, optional
        type: stats # Specifies that the test is of type 'stats'
        statistic: "stats.auth.success" # Name of an integer / long statistic
        operator: ">=" # One of '==', '!=', '>=', '>', '<', '<='
        value: 2 # Value to compare statistic against
        onFail: "info"
      - name: "spider failed" # Name of the test, optional
        type: stats # Specifies that the test is of type 'stats'
        statistic: "stats.auth.failure" # Name of an integer / long statisti
        operator: ">=" # One of '==', '!=', '>=', '>', '<', '<='
        value: 2 # Value to compare statistic against
        onFail: "info"
    name: "activeScan"
    type: "activeScan"
  - parameters:
      template: "traditional-json"
      reportDir: ""
      reportFile: ""
      reportTitle: "Boman_Scanning_Report"
      reportDescription: ""
      displayReport: false
    risks:
      - "info"
      - "low"
      - "medium"
      - "high"
    confidences:
      - "falsepositive"
      - "low"
      - "medium"
      - "high"
      - "confirmed"
    sites: []
    name: "report"
    type: "report"
