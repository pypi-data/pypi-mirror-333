[tox]
# Generative environment list to test all supported Python versions
envlist = py3{11,12},black,pep8,pylint
minversion = 4.0.0

[testenv]
usedevelop = True
package = wheel
wheel_build_env = .pkg

setenv =
    PYTHONWARNINGS=default::DeprecationWarning
    PIP_EXTRA_INDEX_URL={env:PIP_EXTRA_INDEX_URL:https://git.astron.nl/api/v4/projects/395/packages/pypi/simple}
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/tests/requirements.txt
commands =
    {envpython} --version
    {envpython} -m pytest

[testenv:coverage]
commands =
    {envpython} --version
    {envpython} -m pytest --cov-report term --cov-report xml --cov-report html --cov=lofar_stingray

# Use generative name and command prefixes to reuse the same virtualenv
# for all linting jobs.
[testenv:{pep8,black,pylint,format}]
usedevelop = False
envdir = {toxworkdir}/linting
commands =
    pep8: {envpython} -m flake8 --version
    pep8: {envpython} -m flake8 lofar_stingray tests integration
    black: {envpython} -m black --version
    black: {envpython} -m black --check --diff lofar_stingray tests integration
    pylint: {envpython} -m pylint --version
    pylint: {envpython} -m pylint lofar_stingray tests integration
    format: {envpython} -m autopep8 -v -aa --in-place --recursive lofar_stingray
    format: {envpython} -m autopep8 -v -aa --in-place --recursive tests
    format: {envpython} -m autopep8 -v -aa --in-place --recursive integration
    format: {envpython} -m black -v lofar_stingray tests integration

[testenv:integration]
# Do no install the lofar station client package, force packaged version install
skip_install = true
# Intentionally break import paths if not installed from package
changedir={toxinidir}/integration
# Allow bash for wheel file substitution
allowlist_externals =
    bash
commands =
    # We need the bash substitutions here
    bash -ec 'pip install --force-reinstall {toxinidir}/dist/*.whl'
    {envpython} -m pytest -v --log-level=DEBUG ./

[testenv:docs]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/docs/requirements.txt
changedir = {toxinidir}
commands =
    {envpython} docs/cleanup.py
    sphinx-build -b html docs/source docs/build/html

[testenv:build]
usedevelop = False
deps = build
commands = {envpython} -m build
