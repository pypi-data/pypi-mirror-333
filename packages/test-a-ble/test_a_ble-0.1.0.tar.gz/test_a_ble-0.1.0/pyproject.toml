[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 120

[tool.flake8]
# Check that this is aligned with your other tools like Black
max-line-length = 120
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__"
]
# Use extend-ignore to add to already ignored checks which are anti-patterns like W503.
extend-ignore = [
    # PEP 8 recommends to treat : in slices as a binary operator with the lowest priority, and to leave an equal
    # amount of space on either side, except if a parameter is omitted (e.g. ham[1 + 1 :]).
    # This behaviour may raise E203 whitespace before ':' warnings in style guide enforcement tools like Flake8.
    # Since E203 is not PEP 8 compliant, we tell Flake8 to ignore this warning.
    # https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#slices
    "E203",
    # Black adds newlines after docstrings if the next line is a function def, and then D202 causes an error
    "D202"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_default_fixture_loop_scope = "function"
# Exclude specific classes from collection to avoid PytestCollectionWarning
python_classes = "Test[A-Z][a-zA-Z0-9]*(?<!Context|Status|Exception|Failure|Skip)"
norecursedirs = ["examples","test_discovery_test_package"]

[tool.bandit]
exclude_dirs = [".tox"]
skips = ["B101", "B404", "B607"]

[tool.tox]
min_version = "4.0"
env_list = ["py312", "py313"]
isolated_build = true
skip_missing_interpreters = false
requires = ["virtualenv>=20.0.0"]

[tool.tox.env.default]
deps = [".[lint,test]"]
commands = [
    "black --check .",
    "isort --check .",
    "flake8 .",
    "pytest {posargs:tests}",
]

[tool.tox.env.lint]
deps = [".[lint]"]
commands = [
    "black --check .",
    "isort --check .",
    "flake8 .",
]

[tool.tox.env.format]
deps = [".[lint]"]
commands = [
    "black .",
    "isort .",
]

[tool.tox.env.py312]
base_python = ["python3.12"]

[tool.tox.env.py313]
base_python = ["python3.13"]
