[build-system]
requires = ["setuptools>=69.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "promptpal"
version = "2.0.5"
description = "Python based tool for improved LLM interactions using the Gemini API."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["llm", "ai", "gemini", "prompt-engineering"]
authors = [
    {name = "Matt Jenior", email = "mattjenior@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "google-genai>=1.2.0",
    "ipywidgets>=8.0.0",
    "pillow>=10.2.0", # Add explicit Pillow dependency
    "pyyaml>=6.0.1", # Add explicit PyYAML dependency
    "pytest-mock>=3.14.0",
    "jsonschema>=4.21.1", # Add explicit jsonschema dependency
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.9.5",
    "build>=1.0.3",
    "twine>=4.0.2",
]

[project.urls]
Homepage = "https://github.com/mattjenior/promptpal"
Documentation = "https://github.com/mattjenior/promptpal#readme"
Repository = "https://github.com/mattjenior/promptpal.git"
Issues = "https://github.com/mattjenior/promptpal/issues"
Changelog = "https://github.com/mattjenior/promptpal/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["promptpal", "promptpal.roles"]

[tool.setuptools.package-data]
promptpal = ["roles/roles.yaml", "roles/role_schema.yaml"]

[tool.pytest.ini_options]
minversion = "2.0.5"
addopts = "-ra -q --cov=promptpal --cov-report=term-missing"
testpaths = [
    "tests",
]
markers = [
    "integration: marks tests as integration tests that require external services",
]

[tool.coverage.run]
source = ["promptpal"]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "extras/*.ipynb",  # Exclude all notebooks in extras directory
]

# Update line length to 120
line-length = 120
indent-width = 4

# Assume Python 3.11
# target-version = "2.0.5"

[tool.ruff.lint]
# Enable recommended rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = []

# Add per-file-ignores for Jupyter notebooks
per-file-ignores = { "*.ipynb" = ["E501", "E402", "W291", "F401", "F403", "F405", "B018"] }  # Common notebook issues

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in docstrings.
docstring-code-line-length = 100

