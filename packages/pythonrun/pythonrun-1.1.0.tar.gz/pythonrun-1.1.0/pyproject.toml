[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pythonrun"
# 同时保留固定版本号和dynamic配置，固定版本号用于PyPI上传
version = "1.1.0"
# dynamic = ["version"]  # 本地开发时使用
description = "自动导入和安装Python模块的工具"
readme = "README.md"
requires-python = ">=3.6"
license = {text = "MIT"}
authors = [
    {name = "StevenLi-phoenix", email = "example@example.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8", 
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["import", "package management", "dependency", "automation"]
dependencies = [
    "requests>=2.25.0",
]

[project.urls]
"Homepage" = "https://github.com/StevenLi-phoenix/pythonrun"
"Bug Tracker" = "https://github.com/StevenLi-phoenix/pythonrun/issues"
"Source" = "https://github.com/StevenLi-phoenix/pythonrun"

[project.scripts]
pythonrun = "pythonrun.main:main"

# 恢复setuptools_scm配置，用于本地开发
[tool.setuptools_scm]
write_to = "pythonrun/_version.py"
# 禁用本地版本标识符，避免PyPI拒绝上传
local_scheme = "no-local-version"

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38', 'py39', 'py310']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py" 