Metadata-Version: 2.2
Name: gwtrigfind
Version: 0.8.3
Summary: Utility to find files archived by GW event trigger generators
Author-email: Duncan Macleod <duncan.macleod@ligo.org>
License: GPL-3.0-or-later
Project-URL: Bug Tracker, https://git.ligo.org/detchar/tools/gwtrigfind/-/issues
Project-URL: Documentation, https://gwtrigfind.readthedocs.io/
Project-URL: Source Code, https://git.ligo.org/detchar/tools/gwtrigfind.git
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: gpstime
Requires-Dist: ligo-segments
Provides-Extra: test
Requires-Dist: pytest>=3.9.1; extra == "test"
Requires-Dist: pytest-cov>=2.4.0; extra == "test"
Provides-Extra: docs
Requires-Dist: numpydoc; extra == "docs"
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-automodapi; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"
Requires-Dist: sphinx_tabs; extra == "docs"

# GWTrigFind

A utility to find GW trigger files produced by event trigger generators and archived on the LIGO Data Grid.

[![PyPI version](https://badge.fury.io/py/gwtrigfind.svg)](http://badge.fury.io/py/gwtrigfind)
[![Documentation Status](https://readthedocs.org/projects/gwtrigfind/badge/?version=stable)](https://gwtrigfind.readthedocs.io/en/stable/?badge=stable)
[![Build status](https://git.ligo.org/detchar/tools/gwtrigfind/badges/main/pipeline.svg)](https://git.ligo.org/detchar/tools/gwtrigfind/-/pipelines)
![Code coverage](https://git.ligo.org/detchar/tools/gwtrigfind/badges/main/coverage.svg)

## Quickstart for python

To discover trigger files for a given channel:

```python
>>> from gwtrigfind import find_trigger_files
>>> cache = find_trigger_files(channel, etg, gpsstart, gpsend)
```

The resulting cache can then be read easily into a table using [`gwpy`](//gwpy.github.io/):

```python
>>> from gwpy.table import EventTable
>>> t = EventTable.read(cache, format='ligolw', tablename='sngl_burst')
```

The format argument depends on the etg you use, but is likely to be one of `'hdf5'`, `'ligolw'`, or `'root'`.

## Quickstart for command-line

The same query can be performed from the command line by passing each of the functional arguments above as arguments to the `gwtrigfind` executable script:

```bash
gwtrigfind <channel> <etg> <gpsstart> <gpsend>
```
