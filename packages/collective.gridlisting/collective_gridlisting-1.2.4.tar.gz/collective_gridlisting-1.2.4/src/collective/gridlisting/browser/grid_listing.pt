<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      lang="en"
      metal:use-macro="context/@@main_template/macros/master"
      xml:lang="en"
      i18n:domain="plone"
>

  <body>

    <metal:content-core fill-slot="content-core">
      <!--! we use the widget value from 'view.w' to get the default values
            from the registry automatically
      -->
      <metal:block use-macro="context/@@listing_view/macros/content-core"
                   tal:define="
                     row_css_class python:view.w['IGridListing.row_css_class'].value;
                     column_css_class python:view.w['IGridListing.column_css_class'].value;
                     column_content_css_class python:view.w['IGridListing.column_content_css_class'].value;
                     column_content_text_css_class python:view.w['IGridListing.column_content_text_css_class'].value;
                     column_content_image_css_class python:view.w['IGridListing.column_content_image_css_class'].value;
                     item_title_tag_val python:view.w['IGridListing.item_title_tag'].value;
                     item_title_tag python: item_title_tag_val[0] if item_title_tag_val else 'h3';
                     enable_masonry python:'selected' in view.w['IGridListing.enable_masonry'].value;
                     masonry_options python:view.w['IGridListing.masonry_options'].value;
                     crop_preview python:view.get_default('crop_preview');
                     show_more_link python:view.get_default('show_more_link');
                     more_link_text python:view.get_default('more_link_text');
                   "
      >
        <div class="row ${row_css_class} ${python:'pat-masonry' if enable_masonry else ''}"
             metal:fill-slot="entries"
             data-pat-masonry="item-selector: article; ${masonry_options|string:}"
             tal:define="
               portal context/@@plone_portal_state/portal;
               image_scale portal/@@image_scale;
             "
        >
          <tal:repeat metal:define-macro="entries"
                      repeat="item python:batch"
          >
            <tal:block tal:define="
                         obj python:item.getObject();
                         item_url python:item.getURL();
                         item_id python:item.getId();
                         item_title python:item.Title();
                         item_title python:item_title or item_id;
                         item_description python:item.Description();
                         item_type python:item.PortalType();
                         item_modified python:item.ModificationDate();
                         item_created python:item.CreationDate();
                         item_wf_state python:item.review_state();
                         item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                         item_creator python:item.Creator();
                         item_link python:item_type in view.use_view_action and item_url+'/view' or item_url;
                         item_is_event python:view.is_event(obj);
                         item_has_image python:item.getIcon;
                         item_type_class python:('contenttype-' + view.normalizeString(item_type)) if showicons else '';
                       ">
              <metal:block define-slot="entry">

                <article class="${column_css_class}">
                  <div class="${column_content_css_class}"
                       metal:define-macro="listitem"
                  >

                    <div class="${column_content_text_css_class}">

                      <div class="mb-1">
                        <tal:block replace="structure string:&lt;${item_title_tag}&gt;" />
                        <a class="${item_type_class} ${item_wf_state_class} url"
                           href="${item_link}"
                           title="${item_type}"
                           tal:omit-tag="python:bool(show_more_link)"
                        >${item_title}</a>
                        <tal:block replace="structure string:&lt;/${item_title_tag}&gt;" />
                      </div>

                      <metal:block metal:define-macro="document_byline">
                        <div class="mb-1 document-byline">

                          <tal:event condition="python:item_is_event">
                            <tal:date tal:replace="structure python:view.formatted_date(obj)" />
                            <span tal:condition="python:obj.location"
                                  i18n:translate="label_event_byline_location"
                            >
                                                        &mdash;
                              <span class="location"
                                    tal:content="python:obj.location"
                                    i18n:name="location"
                              >Oslo</span>
                            </span>
                                                    &mdash;
                          </tal:event>

                          <tal:byline condition="python:view.show_about">
                            <tal:name tal:define="
                                        author python:view.pas_member.info(item_creator);
                                        creator_short_form python:author.get('username');
                                        creator_long_form string:?author=$${python:author.username};
                                        creator_is_openid python:'/' in creator_short_form;
                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];
                                      "
                                      tal:condition="python:item_creator"
                            >
                              <span i18n:translate="label_by_author">
                                                            by
                                <a tal:content="python: author.get('name_or_id')"
                                   tal:omit-tag="python: not author"
                                   tal:attributes="
                                     href string:${view/navigation_root_url}/author/${item_creator};
                                   "
                                   i18n:name="author"
                                >
                                                                Bob Dobalina
                                </a>
                              </span>
                            </tal:name>

                            <tal:modified condition="python:item_type != 'Event'">
                                                        &mdash;
                              <tal:mod i18n:translate="box_last_modified">last modified
                              </tal:mod>
                              <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
                                                            August 16, 2001 at 23:35:59
                              </span>
                            </tal:modified>

                            <metal:description define-slot="description_slot">
                              <tal:comment replace="nothing">
                                                            Place custom listing info for custom types here
                              </tal:comment>
                            </metal:description>

                          </tal:byline>
                        </div>
                      </metal:block>

                      <p class="me-3"
                         tal:condition="python:item_description"
                         tal:content="python:item_description"
                      >
                                            description
                      </p>

                      <p class="me-3"
                         tal:condition="show_more_link"
                      >
                        <a href="${item_link}">${more_link_text}</a>
                      </p>

                    </div>
                    <div class="${column_content_image_css_class}"
                         tal:condition="python:item_has_image and thumb_scale_summary"
                    >
                      <a href="${item_link}">
                        <img tal:replace="structure python:image_scale.tag(item, 'image', scale=thumb_scale_summary, css_class=img_class, loading='lazy', mode='contain' if crop_preview else 'cover')" />
                      </a>
                    </div>
                  </div>

                </article>

              </metal:block>
            </tal:block>
          </tal:repeat>
        </div>

      </metal:block>

    </metal:content-core>

  </body>

</html>
