Metadata-Version: 2.4
Name: ops-tracing
Version: 0.9.1
Summary: The tracing facility for the Ops framework.
Project-URL: Repository, https://github.com/canonical/operator
Project-URL: Issues, https://github.com/canonical/operator/issues
Project-URL: Documentation, https://ops.readthedocs.io
Project-URL: Changelog, https://github.com/canonical/operator/blob/main/CHANGES.md
Author-email: "The Charm Tech team at Canonical Ltd." <charm-tech@lists.launchpad.net>
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: OpenTelemetry
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Requires-Dist: opentelemetry-sdk~=1.30
Requires-Dist: otlp-json>=0.9.7
Requires-Dist: pydantic
Description-Content-Type: text/markdown

# ops-tracing

**First-party OpenTelemetry integration for the [ops](https://pypi.org/project/ops/) framework.**
This package adds tracing capabilities to ops, enabling you to observe the performance of your applications.

---

## Overview

- Seamless integration with [ops](https://pypi.org/project/ops/)
- Built on OpenTelemetry
- Enables tracing of your charm code

Please add `ops[tracing]` to your charm's dependencies, rather than this package directly.

---

## Documentation

Comprehensive docs for the ops framework, including tracing features, are available at:
[ops on PyPI](https://pypi.org/project/ops/)

You’ll find setup instructions, usage examples, and best practices for leveraging the tracing functionality.

---

## Community and Support

- **Matrix Chat**: [Ops Library Development](https://matrix.to/#/#charmhub-ops:ubuntu.com)
- **Forum**: [Charmhub - Discuss Python operator development](https://discourse.charmhub.io/)
- **Issue Tracker**: See [GitHub issues](https://github.com/canonical/ops/issues)
- **Further Links**: See the [ops PyPI page](https://pypi.org/project/ops/)

Feedback, contributions, and bug reports are always welcome. Please follow the guidelines in the main `ops` repository if you’d like to contribute.

---

## License

This project is licensed under the same license as `ops`.
Refer to the `ops` repository for full details.

---

Happy tracing!
