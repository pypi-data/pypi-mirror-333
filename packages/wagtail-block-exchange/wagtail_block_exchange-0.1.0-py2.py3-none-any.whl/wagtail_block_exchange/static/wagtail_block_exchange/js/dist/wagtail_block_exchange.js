(()=>{"use strict";function e(e,o,t){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:-1,a=new FormData;return a.append("clipboard_id",e),a.append("page_id",o),n&&a.append("field_name",n),a.append("position",r),fetch("/admin/block-exchange/paste/",{method:"POST",headers:{"X-CSRFToken":t},body:a}).then((function(e){if(!e.ok)throw new Error("Fetch failed with status ".concat(e.status,": ").concat(e.statusText));return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Error pasting block:",e),e}))}function o(e){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;void 0!==window.wagtail&&void 0!==window.wagtail.notify&&"function"==typeof window.wagtail.notify.success?t&&n?window.wagtail.notify[o](e,{button:{text:t,url:n}}):window.wagtail.notify[o](e):function(e,o,t,n){var r=document.querySelector(".w-messages");r||((r=document.createElement("div")).className="w-messages",r.style.cssText="\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      z-index: 9999;\n      width: 300px;\n    ",document.body.appendChild(r));var a=document.createElement("div");a.className="w-messages__message w-messages__message--".concat(o),a.style.cssText="\n    margin-bottom: 10px;\n    padding: 15px;\n    border-radius: 3px;\n    background-color: ".concat(function(e){switch(e){case"success":return"#43b1b0";case"error":return"#cd3238";case"warning":return"#e9b04d";default:return"#666666"}}(o),";\n    color: white;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n    display: flex;\n    flex-direction: column;\n    animation: slide-in 0.2s ease-out;\n  ");var c=document.createElement("div");if(c.className="w-messages__message-content",c.textContent=e,c.style.cssText="\n    flex: 1;\n    margin-bottom: ".concat(t?"10px":"0",";\n  "),a.appendChild(c),t&&n){var i=document.createElement("a");i.className="w-messages__message-action",i.href=n,i.textContent=t,i.style.cssText="\n      display: inline-block;\n      padding: 5px 10px;\n      background-color: rgba(255,255,255,0.2);\n      border-radius: 3px;\n      color: white;\n      text-decoration: none;\n      font-weight: bold;\n      align-self: flex-start;\n    ",i.addEventListener("mouseover",(function(){i.style.backgroundColor="rgba(255,255,255,0.3)"})),i.addEventListener("mouseout",(function(){i.style.backgroundColor="rgba(255,255,255,0.2)"})),a.appendChild(i)}var l=document.createElement("button");l.className="w-messages__message-close",l.innerHTML="×",l.style.cssText="\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    background: none;\n    border: none;\n    color: white;\n    font-size: 18px;\n    cursor: pointer;\n    opacity: 0.7;\n  ",l.addEventListener("mouseover",(function(){l.style.opacity="1"})),l.addEventListener("mouseout",(function(){l.style.opacity="0.7"})),l.addEventListener("click",(function(){a.style.opacity="0",setTimeout((function(){a.remove()}),200)})),a.appendChild(l),r.appendChild(a),setTimeout((function(){a.style.opacity="0",setTimeout((function(){a.remove()}),200)}),5e3)}(e,o,t,n)}var t=function(e){o(e,"success")},n=function(e){o(e,"error")},r=function(e){o(e,"warning")},a=function(e){o(e,"info")};function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function i(e,o){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=function(e,o){if(e){if("string"==typeof e)return l(e,o);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?l(e,o):void 0}}(e))||o&&e&&"number"==typeof e.length){t&&(e=t);var n=0,r=function(){};return{s:r,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,i=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return c=e.done,e},e:function(e){i=!0,a=e},f:function(){try{c||null==t.return||t.return()}finally{if(i)throw a}}}}function l(e,o){(null==o||o>e.length)&&(o=e.length);for(var t=0,n=Array(o);t<o;t++)n[t]=e[t];return n}function s(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,d(n.key),n)}}function d(e){var o=function(e){if("object"!=c(e)||!e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var t=o.call(e,"string");if("object"!=c(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(o)?o:o+""}var u=new(function(){return o=function e(){!function(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}(this,e),this.initialized=!1,this.debug=!1},l=[{key:"initialize",value:function(){console.log("🔍 Block Exchange: Initializing block exchange functionality");try{this.initAddBlockButtons(),this.setupMutationObserver(),this.setupStreamfieldObserver(),this.checkForPendingPasteOperation(),this.initialized=!0,console.log("🔍 Block Exchange: Initialization complete")}catch(e){console.error("🔍 Block Exchange: Error in initialization:",e)}}},{key:"checkForPendingPasteOperation",value:function(){try{var e=new URL(window.location.href);if(e.searchParams.has("clipboard_paste_pending")){if(console.log("🔍 Block Exchange: Detected pending paste operation"),null!==document.querySelector(".w-status__indicator--dirty")||null!==document.querySelector(".status-tag--draft")){console.log("🔍 Block Exchange: Unsaved changes detected with pending paste"),r("This page has unsaved changes. Please save your changes before pasting any blocks to avoid data loss.","warning");var o=document.querySelector('.action-save-draft, button[name="action-draft"]');o&&(o.style.animation="pulse 1s infinite",o.style.boxShadow="0 0 10px rgba(255, 165, 0, 0.8)",setTimeout((function(){o.style.animation="",o.style.boxShadow=""}),5e3))}e.searchParams.delete("clipboard_paste_pending"),window.history.replaceState({},document.title,e.toString())}}catch(e){console.error("🔍 Block Exchange: Error checking for pending paste:",e)}}},{key:"setupStreamfieldObserver",value:function(){var e=this;try{console.log("🔍 Block Exchange: Setting up streamfield container observer"),new MutationObserver((function(o){try{o.forEach((function(o){if(o.addedNodes&&o.addedNodes.length){var t,n=i(o.addedNodes);try{for(n.s();!(t=n.n()).done;){var r=t.value;if(1===r.nodeType){r.hasAttribute("data-streamfield-stream-container")&&(console.log("🔍 Block Exchange: Found new streamfield container",r),e.observeStreamfieldContainer(r));var a=r.querySelectorAll("[data-streamfield-stream-container]");a.length&&(console.log("🔍 Block Exchange: Found ".concat(a.length," streamfield containers in new node")),a.forEach((function(o){return e.observeStreamfieldContainer(o)})))}}}catch(e){n.e(e)}finally{n.f()}}}));var t=document.querySelectorAll("[data-streamfield-stream-container]");t.length&&(console.log("🔍 Block Exchange: Found ".concat(t.length," existing streamfield containers")),t.forEach((function(o){return e.observeStreamfieldContainer(o)})))}catch(e){console.error("🔍 Block Exchange: Error in bodyObserver callback:",e)}})).observe(document.body,{childList:!0,subtree:!0});var o=document.querySelectorAll("[data-streamfield-stream-container]");o.length&&(console.log("🔍 Block Exchange: Found ".concat(o.length," existing streamfield containers during initial setup")),o.forEach((function(o){return e.observeStreamfieldContainer(o)}))),console.log("🔍 Block Exchange: Streamfield container observer set up")}catch(e){console.error("🔍 Block Exchange: Error setting up streamfield observer:",e)}}},{key:"observeStreamfieldContainer",value:function(e){var o=this;try{if(e.hasAttribute("data-block-exchange-observed"))return void console.log("🔍 Block Exchange: Streamfield container already observed, skipping");console.log("🔍 Block Exchange: Setting up observer for streamfield container:",e),e.setAttribute("data-block-exchange-observed","true"),new MutationObserver((function(e){try{e.forEach((function(e){if(e.addedNodes&&e.addedNodes.length){var t,n=i(e.addedNodes);try{var r=function(){var e=t.value;if(1===e.nodeType){var n=e.classList&&(e.classList.contains("tippy-box")||e.hasAttribute("data-tippy-root")||e.classList.contains("tippy-content")),r=e.querySelector&&(e.querySelector(".w-combobox, .w-combobox-container, .block-type, .block-help")||e.innerHTML.includes("Insert content")||e.innerHTML.includes("block chooser")||e.innerHTML.includes("w-combobox__menu"));console.log("🔍 Block Exchange: New node in streamfield container:",{tagName:e.tagName,id:e.id,className:e.className,isTippy:n,hasBlockChooser:r}),(n||r)&&(console.log("🔍 Block Exchange: Found tippy or block chooser element in streamfield container!",e),e.hasAttribute("data-block-exchange-processed")||(console.log("🔍 Block Exchange: Enhancing newly detected tippy/block chooser"),setTimeout((function(){try{o.enhanceBlockDialog(e);var t=e.querySelectorAll(".w-dialog, .w-streamfield-add-dialog, .choose-block, .w-combobox-container");t.length>0&&(console.log("🔍 Block Exchange: Found ".concat(t.length," inner dialogs to enhance")),t.forEach((function(e){e.hasAttribute("data-block-exchange-processed")||o.enhanceBlockDialog(e)})))}catch(e){console.error("🔍 Block Exchange: Error enhancing tippy/block chooser:",e)}}),50)))}};for(n.s();!(t=n.n()).done;)r()}catch(e){n.e(e)}finally{n.f()}}}))}catch(e){console.error("🔍 Block Exchange: Error in containerObserver callback:",e)}})).observe(e,{childList:!0,subtree:!0}),console.log("🔍 Block Exchange: Streamfield container observer started for:",e)}catch(e){console.error("🔍 Block Exchange: Error observing streamfield container:",e)}}},{key:"initAddBlockButtons",value:function(){var e=this;try{var o=["button.c-sf-add-button",'button[title="Insert a block"]',".c-sf-add-button",".c-sf-container__add-button","button.w-streamfield-add","[data-streamfield-block-add]",".c-sf-add-panel"].join(", ");console.log("🔍 Block Exchange: Looking for buttons with selectors:",o);var t=document.querySelectorAll(o);console.log("🔍 Block Exchange: Found ".concat(t.length," add block buttons")),t.forEach((function(o,t){try{if(console.log("🔍 Block Exchange: Button ".concat(t," details:"),{tagName:o.tagName,id:o.id,className:o.className,title:o.getAttribute("title"),innerHTML:o.innerHTML.substring(0,50)+"..."}),o.hasAttribute("data-block-exchange-processed"))return void console.log("🔍 Block Exchange: Button ".concat(t," already processed, skipping"));o.setAttribute("data-block-exchange-processed","true"),o.setAttribute("data-debug-block-exchange","monitored"),o.addEventListener("click",(function(o){try{console.log("🔍 Block Exchange: Add block button clicked!",o.target),console.log("🔍 Block Exchange: Button details:",{tagName:e.tagName,id:e.id,className:e.className,title:e.getAttribute("title")}),e.debug&&alert("Block Exchange: Button clicked!"),console.log("🔍 Block Exchange: Waiting for dialog to appear..."),setTimeout((function(){return e.findAndEnhanceBlockDialog()}),100),setTimeout((function(){return e.findAndEnhanceBlockDialog()}),500),setTimeout((function(){return e.findAndEnhanceBlockDialog()}),1e3)}catch(o){console.error("🔍 Block Exchange: Error in click handler:",o)}})),console.log("🔍 Block Exchange: Added click handler to button ".concat(t))}catch(e){console.error("🔍 Block Exchange: Error processing button ".concat(t,":"),e)}})),document.addEventListener("wagtail:blocks-chooser-ready",(function(o){console.log("🔍 Block Exchange: Detected wagtail:blocks-chooser-ready event!",o);var t=o.detail&&o.detail.chooser;if(t){console.log("🔍 Block Exchange: Got chooser from event",t);var n=t.element||t.popup||document.querySelector(".tippy-box");n&&(console.log("🔍 Block Exchange: Found dialog element from event",n),e.enhanceBlockDialog(n))}e.findAndEnhanceBlockDialog()}))}catch(e){console.error("🔍 Block Exchange: Error in initAddBlockButtons:",e)}}},{key:"findAndEnhanceBlockDialog",value:function(){var e=this;try{console.log("🔍 Block Exchange: Looking for block dialog");var o=document.querySelectorAll([".tippy-box",".tippy-content","[data-tippy-root]",'[data-state="visible"]',".w-dialog",".w-streamfield-add-dialog",".choose-block",".w-combobox-container",'[aria-labelledby="wagtail-chooser-title"]'].join(", "));console.log("🔍 Block Exchange: Found ".concat(o.length," possible dialog elements"));var t=!1;return o.forEach((function(o,n){try{if(console.log("🔍 Block Exchange: Checking element ".concat(n,":"),{tagName:o.tagName,id:o.id,className:o.className,visible:null!==o.offsetParent}),o.hasAttribute("data-block-exchange-processed"))return void console.log("🔍 Block Exchange: Element ".concat(n," already processed, skipping"));o.setAttribute("data-block-exchange-processed","true"),o.querySelector(".w-combobox, .w-combobox-container, .block-type, .block-help")||o.querySelector('[aria-labelledby="downshift"]')||o.innerHTML.includes('aria-labelledby="downshift')||o.innerHTML.includes('class="w-combobox')||o.innerHTML.includes("Insert content")||o.innerHTML.includes("block chooser")||o.innerHTML.includes("w-combobox__menu")?(console.log("🔍 Block Exchange: Found block dialog in element ".concat(n)),e.enhanceBlockDialog(o),t=!0):console.log("🔍 Block Exchange: Element ".concat(n," is not a block dialog"))}catch(e){console.error("🔍 Block Exchange: Error processing element ".concat(n,":"),e)}})),t||console.log("🔍 Block Exchange: No block dialog found in this pass"),t}catch(e){return console.error("🔍 Block Exchange: Error in findAndEnhanceBlockDialog:",e),!1}}},{key:"enhanceBlockDialog",value:function(e){try{if(e.hasAttribute("data-block-exchange-processed"))return;e.setAttribute("data-block-exchange-processed","true");var o=-1;try{var t=e.closest("[data-streamfield-stream-container]");if(t){for(var n=t.querySelectorAll(".c-sf-add-button"),r=Array.from(n),a=0;a<r.length;a++)if(r[a].classList.contains("insert-action-running")){o=a;break}if(-1===o)for(var c=0;c<r.length;c++){var l=r[c];if(l.classList.contains("active")||l.classList.contains("focused")||l===document.activeElement){o=c;break}}if(-1===o){var s=e.dataset.position||e.getAttribute("data-position")||t.dataset.currentPosition||t.getAttribute("data-current-position");s&&(o=parseInt(s,10))}}}catch(e){console.error("Block Exchange: Error determining insert position:",e)}e.dataset.insertPosition=o,e.querySelectorAll(".clipboard-section").forEach((function(e){e.remove()}));var d,u=i(e.querySelectorAll("div"));try{for(u.s();!(d=u.n()).done;){var g=d.value;if(g!==e){var p=window.getComputedStyle(g).backgroundColor;p&&(p.includes("rgb(0, 125, 126)")||p.includes("#007d7e")||p.includes("rgb(0, 89, 90)")||p.includes("#00595a"))&&g.remove()}}}catch(e){u.e(e)}finally{u.f()}var h=e.querySelector(".w-combobox-container");if(h)this.addClipboardSection(h,o);else{var f=e.querySelector(".w-combobox__menu-container, .w-combobox__menu");if(f)this.addClipboardSection(f,o);else{var b=e.querySelector(".w-dialog__content, .tippy-content");b&&this.addClipboardSection(b,o)}}}catch(e){console.error("Block Exchange: Error in enhanceBlockDialog:",e)}}},{key:"addClipboardSection",value:function(e){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;try{console.log("🔍 Block Exchange: Adding clipboard section to container at position",o,e);var t=document.createElement("div");t.className="clipboard-section",t.dataset.insertPosition=o,t.style.cssText="\n                margin-top: 20px;\n                padding-top: 10px;\n                border-top: 1px solid rgba(0,0,0,0.1);\n            ";var n=document.createElement("h4");n.textContent="Clipboard Items",n.style.cssText="\n                margin: 0 0 10px 0;\n                padding: 0 10px;\n                font-size: 16px;\n                font-weight: 600;\n                color: #007d7e;\n            ",t.appendChild(n);var r=document.createElement("div");r.className="clipboard-loader",r.style.cssText="padding: 10px; text-align: center;",r.textContent="Loading clipboard items...",t.appendChild(r);try{e.appendChild(t),console.log("🔍 Block Exchange: Clipboard section added successfully"),this.loadClipboardItems(t,o)}catch(n){if(console.error("🔍 Block Exchange: Failed to add clipboard section",n),e.parentElement)try{e.parentElement.appendChild(t),console.log("🔍 Block Exchange: Added clipboard section to parent instead"),this.loadClipboardItems(t,o)}catch(e){console.error("🔍 Block Exchange: Failed to add to parent as well",e)}}}catch(e){console.error("🔍 Block Exchange: Error in addClipboardSection:",e)}}},{key:"loadClipboardItems",value:function(e){var o=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;try{console.log("🔍 Block Exchange: Loading clipboard items for position",t);var n=null!==e.closest(".tippy-content")||null!==e.closest(".tippy-box")||null!==e.closest(".w-dialog");if((null!==document.querySelector(".w-status__indicator--dirty")||null!==document.querySelector(".status-tag--draft")||null!==document.querySelector('[data-side-panel-toggle="comments"].w-status__indicator--dirty'))&&!n){e.innerHTML="";var r=document.createElement("div");return r.className="clipboard-warning",r.style.cssText="\n          background-color: #fff3cd;\n          color: #856404;\n          padding: 10px;\n          border-radius: 3px;\n          margin: 10px;\n          font-size: 14px;\n        ",r.textContent="Please save your changes before pasting a block from the clipboard. Pasting with unsaved changes can cause unpredictable results.",void e.appendChild(r)}fetch("/admin/block-exchange/clipboard/list/").then((function(e){if(!e.ok)throw new Error("Fetch failed with status ".concat(e.status,": ").concat(e.statusText));return e.json()})).then((function(e){return e&&e.items&&Array.isArray(e.items)?e.items:e&&Array.isArray(e)?e:[]})).catch((function(e){throw console.error("Error fetching clipboard items:",e),e})).then((function(n){console.log("🔍 Block Exchange: Raw clipboard data received:",n),console.log("🔍 Block Exchange: Data type:",c(n)),console.log("🔍 Block Exchange: Data has items property:",n&&void 0!==n.items);var r=[];if(n&&n.items&&Array.isArray(n.items))r=n.items;else if(n&&Array.isArray(n))r=n;else if(n&&"object"===c(n)){console.log("🔍 Block Exchange: Attempting to extract object values as items");var a=Object.values(n);a.length>0&&"object"===c(a[0])&&(r=a)}console.log("🔍 Block Exchange: Processed items:",r),Array.isArray(r)||(console.error("🔍 Block Exchange: Items is not an array, creating empty array instead"),r=[]),e.innerHTML="";var i=document.createElement("h4");if(i.textContent="Clipboard Items",i.style.cssText="\n              margin: 0 0 10px 0;\n              padding: 0 10px;\n              font-size: 16px;\n              font-weight: 600;\n              color: #007d7e;\n            ",e.appendChild(i),!r||0===r.length){var l=document.createElement("div");return l.style.cssText="padding: 10px; text-align: center; color: #666;",l.textContent="No items in clipboard",void e.appendChild(l)}var s=document.createElement("div");s.style.cssText="\n              display: grid;\n              grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n              grid-gap: 10px;\n              padding: 0 10px;\n            ",e.appendChild(s),r.forEach((function(e){if(e&&"object"===c(e)){var n=document.createElement("div");n.className="clipboard-item",n.style.cssText="\n                background-color: #fff;\n                border: 1px solid #e6e6e6;\n                border-radius: 3px;\n                padding: 10px;\n                cursor: pointer;\n              ",n.addEventListener("mouseover",(function(){n.style.boxShadow="0 2px 4px rgba(0,0,0,0.1)",n.style.borderColor="#007d7e"})),n.addEventListener("mouseout",(function(){n.style.boxShadow="none",n.style.borderColor="#e6e6e6"}));var r=document.createElement("div");r.style.cssText="\n                font-weight: bold;\n                margin-bottom: 5px;\n              ";var a="";if(e.label&&!e.label.includes("Block from page"))a=e.label;else{var i=e.block_type_display||e.block_type||"Unknown",l=e.source_page_title||"Page",d=e.source_page||"?";a="".concat(i," block from page ").concat(l," (").concat(d,")")}r.textContent=a,n.appendChild(r);var u=document.createElement("div");u.style.cssText="\n                font-size: 12px;\n                color: #666;\n                margin-bottom: 5px;\n              ",u.textContent=e.block_type_display||e.block_type||"Unknown type",n.appendChild(u),n.addEventListener("click",(function(){console.log("🔍 Block Exchange: Item clicked with position",t,e),o.insertClipboardItem(e,t)})),s.appendChild(n)}else console.warn("🔍 Block Exchange: Invalid item, skipping:",e)})),console.log("🔍 Block Exchange: Loaded and rendered clipboard items")})).catch((function(o){console.error("🔍 Block Exchange: Error loading clipboard items",o),e.innerHTML='\n            <div style="padding: 10px; color: #721c24; background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 3px;">\n              Error loading clipboard items: '.concat(o.message,"\n            </div>\n          ")}))}catch(o){console.error("🔍 Block Exchange: Error in loadClipboardItems:",o),e&&(e.innerHTML='\n          <div style="padding: 10px; color: #721c24; background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 3px;">\n            Error loading clipboard items: '.concat(o.message,"\n          </div>\n        "))}}},{key:"insertClipboardItem",value:function(e){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;try{console.log("🔍 Block Exchange: Inserting clipboard item at position",o,e);var t=window.location.pathname.match(/\/admin\/pages\/(\d+)\/edit\/?/);if(!t)return console.error("🔍 Block Exchange: Could not determine page ID"),void n("Could not determine page ID");var c=t[1];console.log("🔍 Block Exchange: Page ID",c);var i=document.querySelector('input[name="csrfmiddlewaretoken"]').value;if(!i)return console.error("🔍 Block Exchange: No CSRF token found"),void n("No CSRF token found");if(document.querySelectorAll("[data-tippy-root]").forEach((function(e){e.remove()})),null!==document.querySelector(".w-status__indicator--dirty")||null!==document.querySelector(".status-tag--draft")){console.log("🔍 Block Exchange: Unsaved changes detected, blocking paste operation"),r("Please save your changes before pasting a block. Pasting with unsaved changes can cause conflicts.");var l=document.querySelector('button[data-action="submit"]');return void(l&&(l.style.animation="pulse 1s infinite",setTimeout((function(){l.style.animation=""}),3e3)))}a("Inserting block..."),this.performPasteOperation(e,c,i,o)}catch(e){console.error("🔍 Block Exchange: Error in insertClipboardItem:",e),n("Error inserting block: "+e.message)}}},{key:"performPasteOperation",value:function(o,a,c){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;null!==document.querySelector(".w-status__indicator--dirty")||null!==document.querySelector(".status-tag--draft")||null!==document.querySelector('[data-side-panel-toggle="comments"].w-status__indicator--dirty')?r("Please save your changes before pasting blocks. Pasting with unsaved changes can cause conflicts."):e(o.id,a,c,null,i).then((function(e){e.success?(t("Block inserted successfully"),window.location.reload()):n(e.error||"Error inserting block")})).catch((function(e){n("Error inserting block: "+e.message)}))}},{key:"setupMutationObserver",value:function(){var e=this;try{console.log("🔍 Block Exchange: Setting up mutation observer"),new MutationObserver((function(o){try{var t,n=!1,r=!1,a=i(o);try{for(a.s();!(t=a.n()).done;){var c=t.value;if(c.addedNodes&&c.addedNodes.length){var l,s=i(c.addedNodes);try{for(s.s();!(l=s.n()).done;){var d=l.value;if(1===d.nodeType){var u=d.classList&&(d.classList.contains("c-sf-add-button")||d.hasAttribute("title")&&"Insert a block"===d.getAttribute("title")),g=d.querySelector&&d.querySelector('button.c-sf-add-button, button[title="Insert a block"]'),p=d.classList&&(d.classList.contains("tippy-box")||d.hasAttribute("data-tippy-root")),h=d.querySelector&&d.querySelector(".tippy-box, [data-tippy-root]");(u||g)&&(console.log("🔍 Block Exchange: Mutation observer detected new button"),n=!0),(p||h)&&(console.log("🔍 Block Exchange: Mutation observer detected new dialog/tippy"),r=!0)}}}catch(e){s.e(e)}finally{s.f()}}}}catch(e){a.e(e)}finally{a.f()}n&&(console.log("🔍 Block Exchange: Detected new add buttons, reinitializing"),setTimeout((function(){return e.initAddBlockButtons()}),100)),r&&(console.log("🔍 Block Exchange: Detected new dialog elements, looking for block chooser"),setTimeout((function(){return e.findAndEnhanceBlockDialog()}),100))}catch(e){console.error("🔍 Block Exchange: Error in mutation observer callback:",e)}})).observe(document.body,{childList:!0,subtree:!0}),console.log("🔍 Block Exchange: Mutation observer set up successfully")}catch(e){console.error("🔍 Block Exchange: Error setting up mutation observer:",e)}}},{key:"toggleDebug",value:function(){return this.debug=!this.debug,console.log("🔍 Block Exchange: Debug mode",this.debug?"enabled":"disabled"),this.debug}},{key:"findStreamfields",value:function(){var e=document.querySelectorAll("[data-streamfield-stream-container]");return console.log("🔍 Block Exchange: Found streamfield containers:",e),e}},{key:"logButtons",value:function(){var e=document.querySelectorAll('button.c-sf-add-button, button[title="Insert a block"]');return console.log("🔍 Block Exchange: All add buttons:",e),e}}],l&&s(o.prototype,l),Object.defineProperty(o,"prototype",{writable:!1}),o;var o,l}());function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function p(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var o=function(e){if("object"!=g(e)||!e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var t=o.call(e,"string");if("object"!=g(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==g(o)?o:o+""}"undefined"!=typeof window&&(window.debugBlockExchange={logButtons:function(){return u.logButtons()},checkDialog:function(){return u.findAndEnhanceBlockDialog()},toggleDebug:function(){return u.toggleDebug()},findStreamfields:function(){return u.findStreamfields()}}),document.addEventListener("DOMContentLoaded",(function(){console.log("🔍 Block Exchange: Script loaded - ENHANCED MODULE VERSION"),window.addEventListener("error",(function(e){console.error("🔍 Block Exchange: Global error caught:",e.message,e.filename,e.lineno),e.message&&e.message.includes("Access to storage is not allowed")&&(console.warn("🔍 Block Exchange: Storage access error suppressed"),e.preventDefault(),e.stopPropagation())})),setTimeout((function(){try{console.log("🔍 Block Exchange: Delayed initialization starting"),u.initialize()}catch(e){console.error("🔍 Block Exchange: Error in delayed initialization:",e)}}),1e3)}));var f=new(function(){return o=function e(){!function(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}(this,e),this.initialized=!1},r=[{key:"initialize",value:function(){this.isClipboardPage()&&(console.log("🔍 Block Exchange: Initializing clipboard page"),this.setupDeleteButtons(),this.setupPasteButtons(),this.initialized=!0)}},{key:"isClipboardPage",value:function(){try{var e=window.location.pathname.includes("/admin/block-exchange/clipboard/");return console.log("🔍 Block Exchange: Is clipboard page?",e),e}catch(e){return console.error("🔍 Block Exchange: Error checking if clipboard page:",e),!1}}},{key:"setupDeleteButtons",value:function(){var e=this,o=document.querySelectorAll(".delete-clipboard-item-button");console.log("🔍 Block Exchange: Found ".concat(o.length," delete buttons")),o.forEach((function(o){o.addEventListener("click",e.handleDeleteButtonClick.bind(e))}))}},{key:"setupPasteButtons",value:function(){var e=this,o=document.querySelectorAll(".paste-block-button");console.log("🔍 Block Exchange: Found ".concat(o.length," paste buttons")),o.forEach((function(o){o.addEventListener("click",e.handlePasteButtonClick.bind(e))}))}},{key:"handleDeleteButtonClick",value:function(e){e.preventDefault();var o=e.currentTarget,r=o.getAttribute("data-clipboard-id");if(r){if(console.log("🔍 Block Exchange: Delete button clicked for item",r),confirm("Are you sure you want to delete this clipboard item?")){var a=document.querySelector('input[name="csrfmiddlewaretoken"]').value;o.disabled=!0,o.textContent="Deleting...",function(e,o){return fetch("/admin/block-exchange/clipboard/clear/".concat(e,"/"),{method:"POST",headers:{"X-CSRFToken":o}}).then((function(e){if(!e.ok)throw new Error("Delete failed with status ".concat(e.status,": ").concat(e.statusText));return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Error deleting clipboard item:",e),e}))}(r,a).then((function(e){if(e.success){t("Clipboard item deleted");var a=document.querySelector('.clipboard-item[data-clipboard-id="'.concat(r,'"]'));if(a&&a.remove(),0===document.querySelectorAll(".clipboard-item").length){var c=document.querySelector(".clipboard-list");c&&(c.innerHTML="\n                                <div class=\"clipboard-empty\">\n                                    <p>You haven't copied any blocks to your clipboard yet.</p>\n                                    <p>To copy a block, edit a page and click the 'Copy to Clipboard' button in the block menu.</p>\n                                </div>\n                            ")}}else n("Failed to delete clipboard item: "+(e.error||"Unknown error")),o.disabled=!1,o.textContent="Remove"})).catch((function(e){n("Error deleting clipboard item: "+e.message),o.disabled=!1,o.textContent="Remove"}))}}else n("Missing clipboard item ID")}},{key:"handlePasteButtonClick",value:function(e){e.preventDefault();var o=e.currentTarget.getAttribute("data-clipboard-id");o?(console.log("🔍 Block Exchange: Paste button clicked for item",o),this.openPageChooserForPaste(o)):n("Missing clipboard item ID")}},{key:"openPageChooserForPaste",value:function(e){if(window.ModalWorkflow)window.ModalWorkflow({url:window.chooserUrls.pageChooser,onload:{choose:function(o){this.pasteBlockToChosenPage(e,o.id)}.bind(this)}});else{var o=prompt("Enter the ID of the page to paste to:");o&&this.pasteBlockToChosenPage(e,o)}}},{key:"pasteBlockToChosenPage",value:function(o,r){console.log("🔍 Block Exchange: Pasting clipboard item to page",o,r);var c=document.querySelector("input[name='csrfmiddlewaretoken']").value;a("Pasting block to page..."),e(o,r,c).then((function(e){if(e.success){t("Block pasted successfully");var o="/admin/pages/".concat(r,"/edit/?clipboard_paste_pending=true");t("Block pasted successfully","success","Edit Page",o),confirm("Block pasted successfully. Would you like to edit the page now?")&&(window.location.href=o)}else n("Failed to paste block: "+(e.error||"Unknown error"))})).catch((function(e){n("Error: "+e.message)}))}}],r&&p(o.prototype,r),Object.defineProperty(o,"prototype",{writable:!1}),o;var o,r}());document.addEventListener("DOMContentLoaded",(function(){f.initialize()}))})();