{"version":3,"file":"lib_index_js.3a7d072c03cb9d4034c5.js","mappings":"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","sources":["webpack://jupyterlab-in-platform-support/./src/components/GetSupportFormComponent.tsx","webpack://jupyterlab-in-platform-support/./src/index.ts","webpack://jupyterlab-in-platform-support/./src/style/IconsStyle.ts","webpack://jupyterlab-in-platform-support/./src/utils.ts","webpack://jupyterlab-in-platform-support/./src/widgets/AboutWidget.tsx","webpack://jupyterlab-in-platform-support/./src/widgets/ChatlasWidget.tsx","webpack://jupyterlab-in-platform-support/./src/widgets/GetSupportFormWidget.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    DialogContent,\n    DialogTitle,\n    CssBaseline,\n    TextField,\n    Grid,\n    DialogContentText\n} from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\n\n// const FORM_ENDPOINT = \"\"; // TODO - fill on the later step\n\ninterface IUserInfo {\n    username: string;\n}\n\ninterface IUserProps {\n    userInfo: IUserInfo;\n}\n\nconst GetSupportFormComponent: React.FC<IUserProps> = (IUserProps): JSX.Element => {\n    const [window, setWindowState] = useState(true)\n    const [subject, setSubject] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n\n    const _handleSubmit = (event: any) => {\n        event.stopPropagation();\n        console.log(`Username => ${IUserProps.userInfo.username}`)\n        console.log(`Subject => ${subject}`)\n        console.log(`Description => ${description}`)\n        setWindowState(false)\n    };\n\n    // const _onClick = (event: any): void => {\n    //     event.stopPropagation();\n    //     setWindowState(false)\n    //     console.log(`Window State Click => ${window}`)\n    // }\n\n    const _onClose = (event: any): void => {\n        event.stopPropagation();\n        setWindowState(false)\n        console.log(`Window State Close => ${window}`)\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Dialog\n                open={window}\n                //onClick={_onClick}\n                onClose={_onClose}\n                maxWidth='sm'\n                fullWidth\n                scroll='paper'\n                onBackdropClick={_onClose}\n            >\n                <DialogTitle>\n                    Contact Support\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText >\n                        We would love to hear from you. Please, fill up the form. We will get in touch as soon as we can.\n                    </DialogContentText>\n                    <Grid\n                        container\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"stretch\"\n                        spacing={2}\n                        sx={{ mt: 2 }}\n                    >\n                        <form onSubmit={_handleSubmit}>\n                            <Grid\n                                item\n                                container\n                                direction=\"column\"\n                                justifyContent=\"center\"\n                                alignItems=\"stretch\"\n                                spacing={2}\n                                sx={{ margin: 'auto', padding: 'auto' }}\n                            >\n                                <Grid item sx={{ pr: '16px' }}>\n                                    <TextField\n                                        id=\"name-input\"\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        type=\"text\"\n                                        variant='outlined'\n                                        value={IUserProps.userInfo.username}\n                                        fullWidth\n                                        disabled\n                                    />\n                                </Grid>\n                                <Grid item sx={{ pr: '16px' }}>\n                                    <TextField\n                                        id=\"subject-input\"\n                                        name=\"subject\"\n                                        label=\"Subject\"\n                                        type=\"text\"\n                                        variant='outlined'\n                                        value={subject}\n                                        placeholder=\"Short description of the issue/suggestion/comment/recommendation.\"\n                                        onChange={event => setSubject(event.target.value)}\n                                        fullWidth\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item sx={{ pr: '16px' }}>\n                                    <TextField\n                                        id=\"description-input\"\n                                        name=\"description\"\n                                        label=\"Description\"\n                                        type=\"text\"\n                                        variant='outlined'\n                                        value={description}\n                                        placeholder=\"Long description of the issue/suggestion/comment/recommendation.\"\n                                        onChange={event => setDescription(event.target.value)}\n                                        multiline\n                                        maxRows={5}\n                                        rows={5}\n                                        fullWidth\n                                        required\n                                    />\n                                </Grid>\n                                <Grid\n                                    container\n                                    justifyContent=\"flex-end\"\n                                    alignItems=\"center\"\n                                    spacing={2}\n                                    sx={{ mt: 2 }}\n                                >\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={_handleSubmit} autoFocus >Submit</Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={_onClose}>Close</Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </form>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    )\n};\n\nexport default GetSupportFormComponent;","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { Dialog, MainAreaWidget, showDialog } from '@jupyterlab/apputils';\nimport { ILauncher } from \"@jupyterlab/launcher\";\nimport { Menu, Widget } from '@lumino/widgets';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ChatlasWidget } from './widgets/ChatlasWidget';\nimport { GetSupportFormWidget } from './widgets/GetSupportFormWidget';\nimport { aboutVoiceAtlasDialog } from './widgets/AboutWidget';\nimport { loadSettings } from './utils';\nimport { getHelpIcon } from './style/IconsStyle';\n\n// import { requestAPI } from './handler';\n\nconst PLUGIN_ID = 'jupyterlab-in-platform-support:plugin'\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  description: 'A JupyterLab extension.',\n  autoStart: true,\n  requires: [IMainMenu, ISettingRegistry, ILauncher],\n  activate\n};\n\nlet atlasId = '';\nlet chatlasURL = \"https://bot.voiceatlas.com/v1/chatlas.js\"\n\n/**\n * Initialization data for the jupyterlab-in-platform-support extension.\n */\nasync function activate(app: JupyterFrontEnd, mainMenu: IMainMenu, settings: ISettingRegistry, launcher: ILauncher): Promise<void> {\n  console.log('JupyterLab extension jupyterlab-in-platform-support is activated!');\n  const openChatlas = 'jupyterlab-in-platform-support:openChatlas';\n  const getSupport = 'jupyterlab-in-platform-support:getSupport';\n  const aboutVoiceAtlas = 'jupyterlab-in-platform-support:aboutVoiceAtlas';\n\n  console.log('Loading settings');\n  await Promise.all([settings.load(PLUGIN_ID)])\n    .then(([setting]) => {\n      console.log('Settings loaded');\n\n      let loadedSettings = loadSettings(setting);\n      atlasId = loadedSettings.atlasId\n      chatlasURL = loadedSettings.chatlasURL\n      console.log(`Atlas ID = ${atlasId}`)\n      console.log(`Chatlas URL = ${chatlasURL}`)\n    }).catch((reason) => {\n      console.error(\n        `Something went wrong when getting the current atlas id.\\n${reason}`\n      );\n    });\n\n  // Promise.all([app.restored, settings.load(PLUGIN_ID)])\n  //   .then(async ([, setting]) => {\n  //     let loadedSettings = loadSettings(setting);\n  //     atlasId = loadedSettings.atlasId\n  //     chatlasURL = loadedSettings.chatlasURL\n  //     console.log(`Atlas ID = ${atlasId}`)\n  //     console.log(`Chatlas URL = ${chatlasURL}`)\n  //   }).catch((reason) => {\n  //     console.error(\n  //       `Something went wrong when changing the settings.\\n${reason}`\n  //     );\n  //   });\n\n  const menu = new Menu({ commands: app.commands });\n  menu.title.label = 'OSS Support'\n\n  app.commands.addCommand(openChatlas, {\n    label: 'Support Chat',\n    caption: 'Support Chat',\n    icon: (args) => (args[\"isPalette\"] ? undefined : getHelpIcon),\n    execute: async () => {\n      const content = new ChatlasWidget(atlasId, chatlasURL)\n      content.title.label = 'Chatlas for JupyterLab';\n      const widget = new MainAreaWidget<ChatlasWidget>({ content })\n      app.shell.add(widget, 'main');\n    }\n  });\n\n  app.commands.addCommand(getSupport, {\n    label: 'Support Form',\n    caption: 'Support Form',\n    execute: async () => {\n      const currentUser = PageConfig.getOption('serverRoot').split('/')[2] || \"\"\n      const content = new GetSupportFormWidget({ username: currentUser })\n      content.title.label = 'Contact Support';\n      Widget.attach(content, document.body)\n    }\n  });\n\n  app.commands.addCommand(aboutVoiceAtlas, {\n    label: 'About OSS Support',\n    caption: 'About OSS Support',\n    execute: async () => {\n      const { aboutBody, aboutTitle } = aboutVoiceAtlasDialog();\n      const result = await showDialog({\n        title: aboutTitle,\n        body: aboutBody,\n        buttons: [\n          Dialog.createButton({\n            label: 'Dismiss',\n            className: 'jp-About-button jp-mod-reject jp-mod-styled'\n          })\n        ]\n      });\n\n      if (result.button.accept) {\n        return;\n      }\n    }\n  })\n\n  menu.addItem({ command: openChatlas });\n  menu.addItem({ command: getSupport });\n  menu.addItem({ type: 'separator' });\n  menu.addItem({ command: aboutVoiceAtlas });\n\n  mainMenu.addMenu(menu);\n\n  if (launcher) {\n    console.log('There is launcher')\n    launcher.add({\n      command: openChatlas,\n      category: \"SMCE Services\",\n      args: { isLauncher: true }\n    });\n  } else {\n    console.log('There is launcher')\n  }\n}\n\nexport default plugin;\n","import { LabIcon } from '@jupyterlab/ui-components';\n\nimport getHelpIconSVG from '../../style/icons8-get-help.svg'\nimport ossLogoSVG from '../../style/OSS_Logo_Draft.svg'\nimport ossOriginalSVG from '../../style/OSS_original.svg'\n\n\nexport const getHelpIcon = new LabIcon({ name: 'getHelp', svgstr: getHelpIconSVG })\nexport const ossLogo = new LabIcon({ name: 'ossLogo', svgstr: ossLogoSVG })\nexport const ossOriginal = new LabIcon({ name: 'ossOriginal', svgstr: ossOriginalSVG })\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\n// import { Dialog, showDialog } from '@jupyterlab/apputils';\n// import { INotification } from \"jupyterlab_toastify\";\n// import isEmpty from 'lodash.isempty';\n\n// import { EditSettingsWidget } from \"./widgets/EditSettingsWidget\"\n\ninterface Settings {\n    atlasId: string;\n    chatlasURL: string;\n}\n\nexport function loadSettings(setting: ISettingRegistry.ISettings): Settings {\n    // Read the settings and convert to the correct type\n    let atlasId = setting.get('atlasId-ips').composite as string || \"\";\n    let chatlasURL = setting.get('chatlasURL-ips').composite as string || \"\";\n    return { atlasId, chatlasURL };\n}\n\nexport async function saveAtlasId(setting: ISettingRegistry.ISettings, atlasId: string): Promise<string> {\n    // Read the settings and convert to the correct type\n    await setting.set('atlasId-ips', atlasId);\n    return atlasId;\n}\n\nexport async function saveChatlasURL(setting: ISettingRegistry.ISettings, chatlasURL: string): Promise<string> {\n    // Read the settings and convert to the correct type\n    await setting.set('chatlasURL-ips', chatlasURL);\n    return chatlasURL;\n}","import * as React from 'react';\n\n// import { ossOriginal } from '../style/IconsStyle';\nimport logoOriginalPNG from '../../style/OSS_original.png'\n\ninterface IAboutDialog {\n    aboutBody: JSX.Element;\n    aboutTitle: JSX.Element\n}\n\nexport function aboutVoiceAtlasDialog(): IAboutDialog {\n    const versionInfo = (\n        <span className=\"jp-About-version-info\">\n            <span className=\"jp-About-version\">v1.0</span>\n        </span>\n    );\n    const aboutTitle = (\n        <span className=\"jp-About-header\">\n            <div className=\"jp-About-header-info\">\n                <img src={logoOriginalPNG} height=\"auto\" width=\"196px\" />\n                {versionInfo}\n            </div>\n        </span>\n    );\n\n    const externalLinks = (\n        <span className=\"jp-About-externalLinks\">\n            <a\n                href='https://navteca.com'\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"jp-Button-flat\"\n            >\n                {\"About Navteca\"}\n            </a>\n            <br />\n            <a\n                href='https://voiceatlas.com'\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"jp-Button-flat\"\n            >\n                {\"About Voice Atlas\"}\n            </a>\n            <br />\n            <a\n                href='https://opensciencestudio.com'\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"jp-Button-flat\"\n            >\n                {\"About Open Science Studio\"}\n            </a>\n        </span>\n    );\n    const copyright = (\n        <span className=\"jp-About-copyright\">\n            {'© 2024 Voice Atlas by Navteca LLC'}\n            <br />\n            {'© 2024 Open Science Studio by Navteca LLC'}\n        </span>\n    );\n    const aboutBody = (\n        <div className=\"jp-About-body\">\n            OSS support is an extension that has been built for the Open Science Studio platform (OSS).\n            <br />\n            OSS support is powered by NLP provided by Voice Atlas a Navteca AI product.\n            {externalLinks}\n            {copyright}\n        </div>\n    );\n\n    return { aboutBody, aboutTitle }\n}\n","import { Widget } from '@lumino/widgets';\n\nexport class ChatlasWidget extends Widget {\n    constructor(atlasId: string, chatlasURL: string) {\n        const script = document.createElement('script')\n        const cssVA = \".container-va { position: absolute; bottom: 0; left: 0; right: 0; top: 0; }\"\n        let head = document.head || document.getElementsByTagName('head')[0]\n        const style = document.createElement('style');\n\n        head.appendChild(style);\n        style.appendChild(document.createTextNode(cssVA));\n\n        script.setAttribute(\"src\", chatlasURL)\n        script.setAttribute(\"async\", \"\")\n        document.body.appendChild(script)\n\n        const container = document.createElement(\"div\")\n        container.setAttribute(\"class\", \"container-va\")\n        container.setAttribute(\"style\", \"width:100%;\")\n        const chatlas = document.createElement('app-chatlas')\n        chatlas.setAttribute(\"atlas-id\", atlasId)\n        chatlas.setAttribute(\"full-screen\", \"true\")\n        chatlas.setAttribute(\"voice-enabled\", \"true\")\n        container.appendChild(chatlas)\n        super({ node: container })\n    }\n}\n","import { ReactWidget } from \"@jupyterlab/apputils\";\nimport React from 'react';\nimport GetSupportFormComponent from '../components/GetSupportFormComponent'\n\ninterface IUserInfo {\n    username: string;\n}\n\nexport class GetSupportFormWidget extends ReactWidget {\n    userInfo: IUserInfo;\n\n    constructor(userInfo: IUserInfo) {\n        super()\n        this.userInfo = userInfo\n    }\n\n    render(): JSX.Element {\n        return <GetSupportFormComponent userInfo={this.userInfo} />\n    }\n}\n\n"],"names":[],"sourceRoot":""}