Metadata-Version: 2.2
Name: dodata
Version: 0.7.2
Summary: Software Development Kit - SDK for DoData
Author-email: DoPlayDo <contact@doplaydo.com>
License: The MIT License (MIT)
        
        Copyright (c) 2023 DoPlayDo
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: dodata_core==0.5.1
Requires-Dist: klayout<0.29.12,>=0.28.15
Requires-Dist: pandas
Requires-Dist: pillow
Requires-Dist: httpx[http2]
Requires-Dist: psycopg2-binary
Requires-Dist: pydantic<3,>=2
Requires-Dist: pydantic-settings
Requires-Dist: sqlmodel>=0.0.14
Requires-Dist: tqdm
Provides-Extra: demos
Requires-Dist: gdsfactory~=9.0.3; extra == "demos"
Requires-Dist: jupyterlab; extra == "demos"
Requires-Dist: plotly<6; extra == "demos"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: towncrier; extra == "dev"
Requires-Dist: tbump; extra == "dev"
Requires-Dist: pytest_regressions; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Provides-Extra: docs
Requires-Dist: jupyter-book<1.1,>=0.15.1; extra == "docs"
Requires-Dist: jupytext; extra == "docs"
Requires-Dist: matplotlib; extra == "docs"
Provides-Extra: maintainer
Requires-Dist: eralchemy2; extra == "maintainer"
Requires-Dist: types-cachetools; extra == "maintainer"
Requires-Dist: types-requests; extra == "maintainer"
Requires-Dist: types-requests; extra == "maintainer"
Requires-Dist: types-setuptools; extra == "maintainer"
Requires-Dist: types-docutils; extra == "maintainer"
Requires-Dist: types-Pygments; extra == "maintainer"
Requires-Dist: pylsp-mypy; extra == "maintainer"
Requires-Dist: python-lsp-server[all]; extra == "maintainer"
Requires-Dist: python-lsp-ruff; extra == "maintainer"

# DoData python library 0.7.2

In chip design, handling various data types efficiently is crucial:

- **Simulations**
- **Layouts**
- **Verification results** (DRC, LVS, etc.)
- **Measurements**
- **Yield and qualification data**

![data-wave](https://i.imgur.com/A6l1g3D.png)

DoData provides a **cutting-edge data storage solution** designed specifically for the complexities of chip design. Our platform seamlessly integrates into your existing workflow, offering a **scalable, efficient, and organized** way to store, manage, and analyze all your critical data.

By using DoData, you can enhance efficiency, improve collaboration, and streamline your design process.

âš  **Notice:** This tool requires an active **GDSFactory+** subscription.
To learn more, visit **[GDSFactory.com](https://GDSFactory.com)**.


![data-types](https://i.imgur.com/DVDGNFm.png)

![device-die-wafer](https://i.imgur.com/v8wlnFr.png)

## Installation

We only support Python 3.11 or 3.12, and recommend [VSCode](https://code.visualstudio.com/) IDE and UV. You can install UV on a terminal with the following commands:

```bash
# On macOS and Linux.
curl -LsSf https://astral.sh/uv/install.sh | sh
```

```bash
# On Windows.
powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
```

Then you can install dodata with:

```
uv pip install "dodata[demos]" --upgrade
```

## Setup

Ensure you create a .env file in your working directory with the following contents:

```
dodata_url = 'https://your.dodata.url.here'
dodata_user = 'dodata_user'
dodata_password = 'dodata_web_password'
dodata_db = 'your.dodata.database.url.here'
dodata_db_user = "db_username_here"
dodata_db_password = "db_password_here"
dodata_db_name = "dodata"
data_db_port = 5432
debug = False
```

The .env file should be in the same directory where you run the notebooks or in a parent directory.

## Run notebooks

To run the notebooks, you can use either VSCode or JupyterLab:

- VSCode: Ensure you select the same Conda Python interpreter where the packages were installed.
- JupyterLab: Launch JupyterLab by running jupyter-lab from the same terminal used for the installation.

Run the notebooks in the following order:

- `1_generate_layout`: Generates the GDS layout and a CSV device manifest, including device coordinates, settings, and analysis.
- `2_generate_measurement_data`: Generates CSV measurement data.
- `3_upload_measurements`: Uploads wafer definitions, measurement data and trigger analysis.
- `4_download_data`: Downloads analysis using specific queries.
- `5_delete`: Deletes data as needed.
