[project]
name = "fast-craftsmanship"
version = "0.2.3"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "expression>=5.6.0",
    "hypothesis>=6.127.1",
    "pydantic>=2.10.6",
    "pygithub>=2.6.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "questionary>=2.0.1",
    "tiktoken>=0.9.0",
    "typer>=0.15.1",
    "rich-click>=1.8.3",
    "pyyaml>=6.0.1",
]

[dependency-groups]
dev = [
    "fast-craftsmanship",
    "ruff>=0.9.8",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.7",
    "mkdocstrings>=0.29.0",
    "mkdocstrings-python>=1.16.5",
]

[project.scripts]
fcship = "fcship.cli:main"

[tool.setuptools.packages.find]
include = ["fcship*"]
exclude = ["api*", "tests*"]

[tool.uv.sources]
fast-craftsmanship = { workspace = true }

[tool.ruff]
target-version = "0.2.3"
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
    "PL",   # pylint
    "RET",  # return
    "SIM",  # sim
    "ARG",  # argument
    "N",    # noqa
    "ERA",  # ruff-specific rules
    "TRY",  # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "ERA001",  # commented out code
    "ARG001",  # unused function arguments
    "ARG005",  # unused lambda arguments
    "TRY003",  # long exception messages
    "TRY002",  # custom exception classes
    "TRY300",  # else block in try/except
    "TRY400",  # logging.error with exceptions
    "TRY401",  # redundant exception in logging
    "TRY201",  # raise without specifying exception 
    "TRY203",  # exception handler re-raises
    "B904",    # raise from in except
    "B008",    # function calls in argument defaults
    "F811",    # redefinition of unused name
    "F821",    # undefined names in tests
    "F823",    # local variable reference before assignment
    "F841",    # unused variables
    "B007",    # unused loop variables
    "N802",    # function name should be lowercase
    "N818",    # exception name should end with Error
    "N999",    # invalid module name
    "RUF001",  # ambiguous unicode characters
    "RUF013",  # PEP 484 Optional syntax
    "RUF022",  # unsorted __all__
    "RUF005",  # list concatenation style
    "PLR0911",  # too many return statements
    "PLR0912",  # too many branches
    "PLR0913",  # too many arguments
    "PLR0915",  # too many statements
    "PLR2004",  # magic values in comparisons
    "PLE1205",  # too many args for logging format string
    "RET504",   # unnecessary assignment before return
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused import
"tests/*" = ["PLR2004"]   # magic numbers in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["fcship"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 6

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
addopts = "-v"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
ignore = ["fcship/templates"]

[tool.coverage.run]
omit = ["fcship/templates/*"]
