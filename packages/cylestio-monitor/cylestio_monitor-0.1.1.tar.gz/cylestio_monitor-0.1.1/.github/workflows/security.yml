name: Security Checks

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  security-checks:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for some security scanners

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[security,test,dev]"
          pip install pytest-github-actions-annotate-failures
          pip install detect-secrets
          pip install pysa
          pip install pip-audit
          pip install ruff

      # Basic Security Checks
      - name: Run Bandit
        run: bandit -c pyproject.toml -r src/ -ll -v

      - name: Run Safety Check
        run: safety check --json > safety-report.json

      - name: Run pip-audit
        run: pip-audit --desc --format json > pip-audit-report.json

      - name: Run Ruff security checks
        run: python -m ruff check . --select S,B --output-format=github
        continue-on-error: true

      # Advanced SAST
      - name: Run PySA (Python Static Analyzer)
        run: pysa analyze src/ || echo "PySA analysis failed, but continuing workflow"
        continue-on-error: true

      - name: Run detect-secrets
        run: detect-secrets scan > secrets-scan.json

      # Explicitly disable Snyk
      - name: Run Snyk
        run: echo "Snyk has been disabled in favor of open-source security tools"
        continue-on-error: true

      # Software Composition Analysis (SCA)
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'cylestio-monitor'
          path: '.'
          format: 'JSON'
          out: 'reports'
        continue-on-error: true

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: low
          vulnerability-check: true
          license-check: true
          config-file: '.github/dependency-review-config.yml'

  codeql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-extended,security-and-quality
          config-file: .github/codeql/codeql-config.yml
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
          upload: true

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        continue-on-error: true
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  security-report:
    needs: [security-checks, dependency-review, codeql, secret-scan]
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true  # Continue even if no artifacts are found

      - name: Generate Security Report
        run: |
          echo "# Security Scan Results" > security-report.md
          echo "## SAST Results" >> security-report.md
          echo "## Dependency Check Results" >> security-report.md
          cat reports/dependency-check-report.json >> security-report.md || echo "No dependency check results found" >> security-report.md
          echo "## Safety Check Results" >> security-report.md
          cat safety-report.json >> security-report.md || echo "No safety results found" >> security-report.md
        continue-on-error: true  # Continue even if files are not found

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
        continue-on-error: true  # Continue even if upload fails

env:
  TOKEN: ${{ secrets.MY_SECRET }}
  MY_VAR: value 