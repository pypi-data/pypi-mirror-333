[project]
name = "pytoyoda"
description = "Python client for Toyota Connected Services."
license = "MIT"
keywords = [
    "Toyota",
    "Car",
    "MYT",
]
dynamic = ["classifiers", "dependencies"]
readme = "README.md"
authors = [{name = "Simon Grud Hansen", email = "simongrud@gmail.com"}]
requires-python = '>=3.9,<4.0'
version = "2.4.0"

[project.urls]
homepage = "https://github.com/pytoyoda/pytoyoda"
repository = "https://github.com/pytoyoda/pytoyoda"
"Bug Tracker" = "https://github.com/pytoyoda/pytoyoda/issues"
"Release Notes" = "https://github.com/pytoyoda/pytoyoda/releases"

[tool.poetry]
packages = [
    { include = "pytoyoda" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-poetry = '>=2.0,<3.0'

[tool.poetry.dependencies]
langcodes = "^3.1"
httpx = ">=0.18.1"
arrow = "^1.1"
importlib-metadata = "^8.0.0"
pyjwt = "^2.8.0"
pydantic = "^2.10.4"
hishel = "^0.1.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.0"
pre-commit-hooks = "^5.0.0"
ruff = "^0.9.0"
codespell = "^2.0.0"
docformatter = "^1.7.5"
pytest = "^8.0.0"
pytest-pretty = "^1.2.0"
pytest-asyncio = "^0.25.0"
pytest-httpx = "^0.35.0"

[tool.ruff.lint]
select = [
    # Ruff specific
    "RUF",
    # Pylint
    "PL",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # Pycodestyle
    "E",
    "W",
    "D",
    # flake8-2020
    "YTT",
    # flake8-async
    "ASYNC",
    # flake8-bugbear
    "B",
    # flake8-unused-arguments
    "ARG",
    # flake8-commas
    "COM",
    # Isort
    "I"
]
extend-ignore = ["PLR2004", "D203", "D213", "COM812"]

[tool.ruff.format]
docstring-code-format = true

[tool.poetry-dynamic-versioning]
enable = false

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
