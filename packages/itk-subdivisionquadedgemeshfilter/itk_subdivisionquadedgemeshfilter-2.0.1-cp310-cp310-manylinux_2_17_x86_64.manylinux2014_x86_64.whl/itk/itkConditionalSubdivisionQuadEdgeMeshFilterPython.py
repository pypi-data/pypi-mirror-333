# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConditionalSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkConditionalSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkQuadEdgeMeshSubdivisionCriterionPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkQuadEdgeMeshBasePython
import itk.itkMapContainerPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleEdgeD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleEdgeD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleEdgeD4)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Clone(self)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SameTypeCheckContainer
    

    def SetSubdivisionCriterion(self, criterion):
        r"""
        SetSubdivisionCriterion(self, criterion)

        Parameters
        ----------
        criterion: itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD4 *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SetSubdivisionCriterion(self, criterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def conditional_subdivision_quad_edge_mesh_filter(*args: itkt.Mesh,  subdivision_criterion=..., output: itkt.QuadEdgeMesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for ConditionalSubdivisionQuadEdgeMeshFilter"""
    import itk

    kwarg_typehints = { 'subdivision_criterion':subdivision_criterion,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ConditionalSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def conditional_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.SubdivisionQuadEdgeMeshFilter.ConditionalSubdivisionQuadEdgeMeshFilter
    conditional_subdivision_quad_edge_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    conditional_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__



