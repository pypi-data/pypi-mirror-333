# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkMapContainerPython

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LinearTriangleD4)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4LoopTriangleD4)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4ModifiedButterflyTriangleD4)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_Clone(self)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SameTypeCheck
    

    def SetResolutionLevels(self, _arg):
        r"""
        SetResolutionLevels(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SetResolutionLevels(self, _arg)

    def GetResolutionLevels(self):
        r"""GetResolutionLevels(self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_GetResolutionLevels(self)

    def SetCellsToBeSubdivided(self, arg0):
        r"""
        SetCellsToBeSubdivided(self, arg0)

        Parameters
        ----------
        arg0: std::list< unsigned long long,std::allocator< unsigned long long > > const &

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_SetCellsToBeSubdivided(self, arg0)

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> std::list< unsigned long long,std::allocator< unsigned long long > > const &"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_GetCellsToBeSubdivided(self)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4SquareThreeTriangleD4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def iterative_triangle_cell_subdivision_quad_edge_mesh_filter(*args: itkt.Mesh,  resolution_levels: int=..., cells_to_be_subdivided=..., output: itkt.QuadEdgeMesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for IterativeTriangleCellSubdivisionQuadEdgeMeshFilter"""
    import itk

    kwarg_typehints = { 'resolution_levels':resolution_levels,'cells_to_be_subdivided':cells_to_be_subdivided,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def iterative_triangle_cell_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.SubdivisionQuadEdgeMeshFilter.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__



