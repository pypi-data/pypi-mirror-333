# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCellAreaTriangleCellSubdivisionCriterionPython
else:
    import _itkCellAreaTriangleCellSubdivisionCriterionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkMapContainerPython
import itk.itkQuadEdgeMeshSubdivisionCriterionPython

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD4):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD4)

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4.New()

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD4):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD4)

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_New():
    return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4.New()

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD4):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD4)

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_New():
    return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4.New()

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD4):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_Clone(self)

    def GetMaximumArea(self):
        r"""GetMaximumArea(self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_GetMaximumArea(self)

    def SetMaximumArea(self, _arg):
        r"""
        SetMaximumArea(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_SetMaximumArea(self, _arg)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD4)

