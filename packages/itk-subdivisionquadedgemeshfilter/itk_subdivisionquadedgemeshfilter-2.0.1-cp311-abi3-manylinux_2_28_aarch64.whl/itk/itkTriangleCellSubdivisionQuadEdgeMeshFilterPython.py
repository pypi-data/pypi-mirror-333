# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkArrayPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkSubdivisionQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
class itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2(itk.itkSubdivisionQuadEdgeMeshFilterPython.itkSubdivisionQuadEdgeMeshFilterQEMD2):
    r"""Proxy of C++ itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> listUL"""
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_GetCellsToBeSubdivided(self)

    def SetCellsToBeSubdivided(self, cellIdList):
        r"""
        SetCellsToBeSubdivided(self, cellIdList)

        Parameters
        ----------
        cellIdList: std::list< unsigned long,std::allocator< unsigned long > > const &

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_SetCellsToBeSubdivided(self, cellIdList)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_cast(obj)

# Register itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2 in _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_swigregister(itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2)
class itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3(itk.itkSubdivisionQuadEdgeMeshFilterPython.itkSubdivisionQuadEdgeMeshFilterQEMD3):
    r"""Proxy of C++ itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> listUL"""
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_GetCellsToBeSubdivided(self)

    def SetCellsToBeSubdivided(self, cellIdList):
        r"""
        SetCellsToBeSubdivided(self, cellIdList)

        Parameters
        ----------
        cellIdList: std::list< unsigned long,std::allocator< unsigned long > > const &

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_SetCellsToBeSubdivided(self, cellIdList)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_cast(obj)

# Register itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3 in _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_swigregister(itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3)
class itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4(itk.itkSubdivisionQuadEdgeMeshFilterPython.itkSubdivisionQuadEdgeMeshFilterQEMD4):
    r"""Proxy of C++ itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetCellsToBeSubdivided(self):
        r"""GetCellsToBeSubdivided(self) -> listUL"""
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_GetCellsToBeSubdivided(self)

    def SetCellsToBeSubdivided(self, cellIdList):
        r"""
        SetCellsToBeSubdivided(self, cellIdList)

        Parameters
        ----------
        cellIdList: std::list< unsigned long,std::allocator< unsigned long > > const &

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_SetCellsToBeSubdivided(self, cellIdList)

    def AddSubdividedCellId(self, cellId):
        r"""
        AddSubdividedCellId(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_AddSubdividedCellId(self, cellId)
    __swig_destroy__ = _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_cast(obj)

# Register itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4 in _itkTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_swigregister(itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4)

