# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkTriangleCellSubdivisionQuadEdgeMeshFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkArrayPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkSubdivisionQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshBasePython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython

def itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_New():
    return itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2.New()

class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2(itk.itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2):
    r"""Proxy of C++ itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_Clone(self)
    __swig_destroy__ = _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2

        Create a new object of the class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2 in _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2_swigregister(itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2)

def itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_New():
    return itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3.New()

class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3(itk.itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3):
    r"""Proxy of C++ itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_Clone(self)
    __swig_destroy__ = _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3

        Create a new object of the class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3 in _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3_swigregister(itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3)

def itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_New():
    return itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4.New()

class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4(itk.itkTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4):
    r"""Proxy of C++ itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_Pointer"""
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_Clone(self)
    __swig_destroy__ = _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4

        Create a new object of the class itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4 in _itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4_swigregister(itkModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilterQEMD4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def modified_butterfly_triangle_cell_subdivision_quad_edge_mesh_filter(*args: itkt.Mesh,  cells_to_be_subdivided=..., output: itkt.QuadEdgeMesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for ModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilter"""
    import itk

    kwarg_typehints = { 'cells_to_be_subdivided':cells_to_be_subdivided,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def modified_butterfly_triangle_cell_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.SubdivisionQuadEdgeMeshFilter.ModifiedButterflyTriangleCellSubdivisionQuadEdgeMeshFilter
    modified_butterfly_triangle_cell_subdivision_quad_edge_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    modified_butterfly_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__



