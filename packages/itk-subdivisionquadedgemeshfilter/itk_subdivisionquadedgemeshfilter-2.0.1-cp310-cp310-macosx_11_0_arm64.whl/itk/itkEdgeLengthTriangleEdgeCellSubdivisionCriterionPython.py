# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SubdivisionQuadEdgeMeshFilterPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython
else:
    import _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkQuadEdgeMeshSubdivisionCriterionPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkQuadEdgeMeshBasePython
import itk.itkMapContainerPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkArrayPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkQuadEdgeMeshLineCellPython

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD2)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD3)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD4):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLinearTriangleEdgeD4)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD2)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD3)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD4):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionLoopTriangleEdgeD4)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD2)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD3)

def itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_New():
    return itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4.New()

class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD4):
    r"""Proxy of C++ itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_Pointer"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_Clone(self)

    def GetMaximumLength(self):
        r"""GetMaximumLength(self) -> float"""
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_GetMaximumLength(self)

    def SetMaximumLength(self, _arg):
        r"""
        SetMaximumLength(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_SetMaximumLength(self, _arg)
    __swig_destroy__ = _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.delete_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4

        Create a new object of the class itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4 in _itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython:
_itkEdgeLengthTriangleEdgeCellSubdivisionCriterionPython.itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4_swigregister(itkEdgeLengthTriangleEdgeCellSubdivisionCriterionModifiedButterflyTriangleEdgeD4)

