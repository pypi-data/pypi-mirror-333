# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MeshToPolyDataPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshToPolyDataFilterPython
else:
    import _itkMeshToPolyDataFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkPointSetPython
import itk.itkArrayPython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkMeshBasePython
import itk.itkMapContainerPython
import itk.itkBoundingBoxPython
import itk.itkPolyDataPython

def itkMeshToPolyDataFilterMD2_New():
    return itkMeshToPolyDataFilterMD2.New()

class itkMeshToPolyDataFilterMD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD2
        GetInput(self, idx) -> itkMeshD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD2

        Create a new object of the class itkMeshToPolyDataFilterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMD2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_swigregister(itkMeshToPolyDataFilterMD2)

def itkMeshToPolyDataFilterMD3_New():
    return itkMeshToPolyDataFilterMD3.New()

class itkMeshToPolyDataFilterMD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD3
        GetInput(self, idx) -> itkMeshD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD3

        Create a new object of the class itkMeshToPolyDataFilterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMD3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_swigregister(itkMeshToPolyDataFilterMD3)

def itkMeshToPolyDataFilterMD4_New():
    return itkMeshToPolyDataFilterMD4.New()

class itkMeshToPolyDataFilterMD4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMD4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMD4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD4
        GetInput(self, idx) -> itkMeshD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD4

        Create a new object of the class itkMeshToPolyDataFilterMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMD4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD4_swigregister(itkMeshToPolyDataFilterMD4)

def itkMeshToPolyDataFilterMF2_New():
    return itkMeshToPolyDataFilterMF2.New()

class itkMeshToPolyDataFilterMF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF2
        GetInput(self, idx) -> itkMeshF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF2

        Create a new object of the class itkMeshToPolyDataFilterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMF2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_swigregister(itkMeshToPolyDataFilterMF2)

def itkMeshToPolyDataFilterMF3_New():
    return itkMeshToPolyDataFilterMF3.New()

class itkMeshToPolyDataFilterMF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF3
        GetInput(self, idx) -> itkMeshF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF3

        Create a new object of the class itkMeshToPolyDataFilterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMF3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_swigregister(itkMeshToPolyDataFilterMF3)

def itkMeshToPolyDataFilterMF4_New():
    return itkMeshToPolyDataFilterMF4.New()

class itkMeshToPolyDataFilterMF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMF4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMF4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF4
        GetInput(self, idx) -> itkMeshF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF4

        Create a new object of the class itkMeshToPolyDataFilterMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMF4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF4_swigregister(itkMeshToPolyDataFilterMF4)

def itkMeshToPolyDataFilterMSS2_New():
    return itkMeshToPolyDataFilterMSS2.New()

class itkMeshToPolyDataFilterMSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS2
        GetInput(self, idx) -> itkMeshSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS2

        Create a new object of the class itkMeshToPolyDataFilterMSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMSS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_swigregister(itkMeshToPolyDataFilterMSS2)

def itkMeshToPolyDataFilterMSS3_New():
    return itkMeshToPolyDataFilterMSS3.New()

class itkMeshToPolyDataFilterMSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS3
        GetInput(self, idx) -> itkMeshSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS3

        Create a new object of the class itkMeshToPolyDataFilterMSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMSS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_swigregister(itkMeshToPolyDataFilterMSS3)

def itkMeshToPolyDataFilterMSS4_New():
    return itkMeshToPolyDataFilterMSS4.New()

class itkMeshToPolyDataFilterMSS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMSS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMSS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS4
        GetInput(self, idx) -> itkMeshSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS4

        Create a new object of the class itkMeshToPolyDataFilterMSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMSS4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS4_swigregister(itkMeshToPolyDataFilterMSS4)

def itkMeshToPolyDataFilterMUC2_New():
    return itkMeshToPolyDataFilterMUC2.New()

class itkMeshToPolyDataFilterMUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC2
        GetInput(self, idx) -> itkMeshUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC2

        Create a new object of the class itkMeshToPolyDataFilterMUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUC2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_swigregister(itkMeshToPolyDataFilterMUC2)

def itkMeshToPolyDataFilterMUC3_New():
    return itkMeshToPolyDataFilterMUC3.New()

class itkMeshToPolyDataFilterMUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC3
        GetInput(self, idx) -> itkMeshUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC3

        Create a new object of the class itkMeshToPolyDataFilterMUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUC3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_swigregister(itkMeshToPolyDataFilterMUC3)

def itkMeshToPolyDataFilterMUC4_New():
    return itkMeshToPolyDataFilterMUC4.New()

class itkMeshToPolyDataFilterMUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUC4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUC4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC4
        GetInput(self, idx) -> itkMeshUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC4

        Create a new object of the class itkMeshToPolyDataFilterMUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUC4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC4_swigregister(itkMeshToPolyDataFilterMUC4)

def itkMeshToPolyDataFilterMUS2_New():
    return itkMeshToPolyDataFilterMUS2.New()

class itkMeshToPolyDataFilterMUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS2
        GetInput(self, idx) -> itkMeshUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS2

        Create a new object of the class itkMeshToPolyDataFilterMUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_swigregister(itkMeshToPolyDataFilterMUS2)

def itkMeshToPolyDataFilterMUS3_New():
    return itkMeshToPolyDataFilterMUS3.New()

class itkMeshToPolyDataFilterMUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS3
        GetInput(self, idx) -> itkMeshUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS3

        Create a new object of the class itkMeshToPolyDataFilterMUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_swigregister(itkMeshToPolyDataFilterMUS3)

def itkMeshToPolyDataFilterMUS4_New():
    return itkMeshToPolyDataFilterMUS4.New()

class itkMeshToPolyDataFilterMUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterMUS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterMUS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS4
        GetInput(self, idx) -> itkMeshUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterMUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS4

        Create a new object of the class itkMeshToPolyDataFilterMUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUS4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS4_swigregister(itkMeshToPolyDataFilterMUS4)

def itkMeshToPolyDataFilterPSD2_New():
    return itkMeshToPolyDataFilterPSD2.New()

class itkMeshToPolyDataFilterPSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetD2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetD2
        GetInput(self, idx) -> itkPointSetD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD2

        Create a new object of the class itkMeshToPolyDataFilterPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSD2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_swigregister(itkMeshToPolyDataFilterPSD2)

def itkMeshToPolyDataFilterPSD3_New():
    return itkMeshToPolyDataFilterPSD3.New()

class itkMeshToPolyDataFilterPSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetD3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetD3
        GetInput(self, idx) -> itkPointSetD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD3

        Create a new object of the class itkMeshToPolyDataFilterPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSD3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_swigregister(itkMeshToPolyDataFilterPSD3)

def itkMeshToPolyDataFilterPSD4_New():
    return itkMeshToPolyDataFilterPSD4.New()

class itkMeshToPolyDataFilterPSD4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSD4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSD4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetD4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetD4
        GetInput(self, idx) -> itkPointSetD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataD
        GetOutput(self) -> itkPolyDataD
        GetOutput(self, idx) -> itkPolyDataD

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD4

        Create a new object of the class itkMeshToPolyDataFilterPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSD4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD4_swigregister(itkMeshToPolyDataFilterPSD4)

def itkMeshToPolyDataFilterPSF2_New():
    return itkMeshToPolyDataFilterPSF2.New()

class itkMeshToPolyDataFilterPSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetF2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetF2
        GetInput(self, idx) -> itkPointSetF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF2

        Create a new object of the class itkMeshToPolyDataFilterPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSF2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_swigregister(itkMeshToPolyDataFilterPSF2)

def itkMeshToPolyDataFilterPSF3_New():
    return itkMeshToPolyDataFilterPSF3.New()

class itkMeshToPolyDataFilterPSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetF3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetF3
        GetInput(self, idx) -> itkPointSetF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF3

        Create a new object of the class itkMeshToPolyDataFilterPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSF3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_swigregister(itkMeshToPolyDataFilterPSF3)

def itkMeshToPolyDataFilterPSF4_New():
    return itkMeshToPolyDataFilterPSF4.New()

class itkMeshToPolyDataFilterPSF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSF4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSF4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetF4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetF4
        GetInput(self, idx) -> itkPointSetF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataF
        GetOutput(self) -> itkPolyDataF
        GetOutput(self, idx) -> itkPolyDataF

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF4

        Create a new object of the class itkMeshToPolyDataFilterPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSF4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF4_swigregister(itkMeshToPolyDataFilterPSF4)

def itkMeshToPolyDataFilterPSSS2_New():
    return itkMeshToPolyDataFilterPSSS2.New()

class itkMeshToPolyDataFilterPSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetSS2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetSS2
        GetInput(self, idx) -> itkPointSetSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS2

        Create a new object of the class itkMeshToPolyDataFilterPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSSS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_swigregister(itkMeshToPolyDataFilterPSSS2)

def itkMeshToPolyDataFilterPSSS3_New():
    return itkMeshToPolyDataFilterPSSS3.New()

class itkMeshToPolyDataFilterPSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetSS3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetSS3
        GetInput(self, idx) -> itkPointSetSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS3

        Create a new object of the class itkMeshToPolyDataFilterPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSSS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_swigregister(itkMeshToPolyDataFilterPSSS3)

def itkMeshToPolyDataFilterPSSS4_New():
    return itkMeshToPolyDataFilterPSSS4.New()

class itkMeshToPolyDataFilterPSSS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSSS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSSS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetSS4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetSS4
        GetInput(self, idx) -> itkPointSetSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self) -> itkPolyDataSS
        GetOutput(self, idx) -> itkPolyDataSS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS4

        Create a new object of the class itkMeshToPolyDataFilterPSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSSS4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS4_swigregister(itkMeshToPolyDataFilterPSSS4)

def itkMeshToPolyDataFilterPSUC2_New():
    return itkMeshToPolyDataFilterPSUC2.New()

class itkMeshToPolyDataFilterPSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUC2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUC2
        GetInput(self, idx) -> itkPointSetUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC2

        Create a new object of the class itkMeshToPolyDataFilterPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUC2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_swigregister(itkMeshToPolyDataFilterPSUC2)

def itkMeshToPolyDataFilterPSUC3_New():
    return itkMeshToPolyDataFilterPSUC3.New()

class itkMeshToPolyDataFilterPSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUC3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUC3
        GetInput(self, idx) -> itkPointSetUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC3

        Create a new object of the class itkMeshToPolyDataFilterPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUC3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_swigregister(itkMeshToPolyDataFilterPSUC3)

def itkMeshToPolyDataFilterPSUC4_New():
    return itkMeshToPolyDataFilterPSUC4.New()

class itkMeshToPolyDataFilterPSUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUC4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUC4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUC4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUC4
        GetInput(self, idx) -> itkPointSetUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self) -> itkPolyDataUC
        GetOutput(self, idx) -> itkPolyDataUC

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC4

        Create a new object of the class itkMeshToPolyDataFilterPSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUC4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC4_swigregister(itkMeshToPolyDataFilterPSUC4)

def itkMeshToPolyDataFilterPSUS2_New():
    return itkMeshToPolyDataFilterPSUS2.New()

class itkMeshToPolyDataFilterPSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUS2 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUS2
        GetInput(self, idx) -> itkPointSetUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS2

        Create a new object of the class itkMeshToPolyDataFilterPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_swigregister(itkMeshToPolyDataFilterPSUS2)

def itkMeshToPolyDataFilterPSUS3_New():
    return itkMeshToPolyDataFilterPSUS3.New()

class itkMeshToPolyDataFilterPSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUS3 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUS3
        GetInput(self, idx) -> itkPointSetUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS3

        Create a new object of the class itkMeshToPolyDataFilterPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_swigregister(itkMeshToPolyDataFilterPSUS3)

def itkMeshToPolyDataFilterPSUS4_New():
    return itkMeshToPolyDataFilterPSUS4.New()

class itkMeshToPolyDataFilterPSUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshToPolyDataFilterPSUS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshToPolyDataFilterPSUS4_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkPointSetUS4 const *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkPointSetUS4
        GetInput(self, idx) -> itkPointSetUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_GetInput(self, *args)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self) -> itkPolyDataUS
        GetOutput(self, idx) -> itkPolyDataUS

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_GetOutput(self, *args)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshToPolyDataFilterPSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS4

        Create a new object of the class itkMeshToPolyDataFilterPSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUS4 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS4_swigregister(itkMeshToPolyDataFilterPSUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def mesh_to_poly_data_filter(*args, **kwargs):
    """Functional interface for MeshToPolyDataFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshToPolyDataFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_to_poly_data_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.MeshToPolyData.MeshToPolyDataFilter
    mesh_to_poly_data_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_to_poly_data_filter.__doc__ = filter_object.__doc__



