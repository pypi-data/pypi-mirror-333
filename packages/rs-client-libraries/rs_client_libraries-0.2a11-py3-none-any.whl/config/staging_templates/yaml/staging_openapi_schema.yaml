# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.0
info:
  title: RS Staging API
  version: 1.0.0
paths:
  /processes:
    get:
      summary: Get a list of processes
      responses:
        '200':
          description: Returns list of all available processes from config.
          content:
            application/json:
              schema:
                $ref: './processList.yaml'
  /processes/{process_id}:
    get:
      summary: Get information on a specific process
      parameters:
        - name: process_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a description of a specific process
          content:
            application/json:
              schema:
                $ref: './process.yaml'
  /processes/{process_id}/execution:
    post:
      summary: Get information on a specific process
      parameters:
        - name: process_id
          in: path
          required: true
          schema:
            type: string
      # Here both the request and the response need to be validates according to yaml schemas
      requestBody:
        description: Check the body from the request used to execute the process
        required: true
        content:
          application/json:
            schema:
              $ref: './execute.yaml'
      responses:
        '200':
          description:  Result of synchronous execution
          content:
            application/json:
              schema:
                $ref: './statusInfo.yaml'
        '201':
          description: Started asynchronous execution. Created job.
          content:
            application/json:
              schema:
                $ref: './statusInfo.yaml'
  /jobs:
    get:
      summary: Returns the status of all jobs.
      responses:
        '200':
          description: Returns the status of all jobs.
          content:
            application/json:
              schema:
                $ref: './jobList.yaml'
  /jobs/{job-id}:
    get:
      summary: Returns the status of a job.
      parameters:
        - name: job-id
          in: path
          description: local identifier of a job
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The status of a job.
          content:
            application/json:
              schema:
                $ref: 'statusInfo.yaml'
    delete:
      summary: Deletes a specific job.
      parameters:
        - name: job-id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the job to be deleted.
      responses:
        '200':
          description: Deletes a specific job.
          content:
            application/json:
              schema:
                $ref: './statusInfo.yaml'
  /jobs/{job-id}/results:
    get:
      summary: Returns the results of a given job
      parameters:
        - name: job-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the status of all jobs.
          content:
            application/json:
              schema:
                $ref: './results.yaml'
