[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "duffy"
version = "3.4.0rc3"
description = "CentOS CI provisioner"
authors = ["Nils Philippsen <nils@redhat.com>", "Vipul Siddharth <siddharthvipul1@gmail.com>", "Akashdeep Dhar <akashdeep@redhat.com>", "Ben Capper <bcapper@redhat.com>"]
license = "MIT"
maintainers = ["Nils Philippsen <nils@redhat.com>", "Vipul Siddharth <siddharthvipul1@gmail.com>", "Akashdeep Dhar <akashdeep@redhat.com>", "Ben Capper <bcapper@redhat.com>"]
readme = "README.md"
homepage = "https://github.com/CentOS/duffy"
repository = "https://github.com/CentOS/duffy"
documentation = "https://github.com/CentOS/duffy/wiki"
keywords = ["baremetal", "ci", "vm", "opennebula", "centos"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Ansible",
    "Framework :: AsyncIO",
    "Framework :: Celery",
    "Framework :: FastAPI",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Operating System",
]

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.0.3"
PyYAML = "^6"
SQLAlchemy = {version = "^2.0.5", extras=["asyncio"], optional = true}
alembic = {version = "^1.7.5", optional = true}
bcrypt = {version = "^3.2 || ^4", optional = true}
fastapi = {version = "^0.93 || ^0.94 || ^0.95 || ^0.96 || ^0.97 || ^0.98 || ^0.99 || ^0.100.0 || ^0.101.0 || ^0.102.0 || ^0.103.0 || ^0.104.0 || ^0.105.0 || ^0.106.0 || ^0.107.0 || ^0.108.0 || ^0.109.0 || ^0.110.0 || ^0.111.0 || ^0.112.0 || ^0.113.0 || ^0.114.0 || ^0.115.0", optional = true}
uvicorn = {version = "^0.15 || ^0.16 || ^0.17 || ^0.18 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23.0 || ^0.24.0 || ^0.25.0 || ^0.26.0 || ^0.27.0 || ^0.28.0 || ^0.29.0 || ^0.30.0 || ^0.31.0 || ^0.32.0 || ^0.33.0 || ^0.34.0", optional = true}
Jinja2 = {version = "^3.0.3", optional = true}
ansible-runner = [
    { version = "~2.1.1 || ~2.2 || ~2.3", python = "~3.8", optional = true },
    { version = "^2.4", python = ">=3.9,<4", optional = true },
]
asyncpg = {version = "^0.25 || ^0.26 || ^0.27 || ^0.28 || ^0.29.0 || ^0.30.0", optional = true}
celery = {version = "^5.2.1", extras = ["redis"], optional = true}
httpx = {version = "^0.18.2 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23 || ^0.24 || ^0.25.0 || ^0.26.0 || ^0.27.0 || ^0.28.0", optional = true}
ipython = {version = "^7.29 || ^8 || ^9.0.0", optional = true}
jmespath = {version = ">=0.10,<1 || ^1", optional = true}
pottery = {version = "^3", optional = true}
psycopg2 = {version = "^2.9.2", optional = true}
aiodns = {version = "^3.0.0", optional = true}
pydantic = "^2.0.3"
aiosqlite = {version = "^0.17 || ^0.18 || ^0.19 || ^0.20.0 || ^0.21.0", optional = true}
pyxdg = "^0.27 || ^0.28"
typing-extensions = "^4.6.1"
greenlet = {version = "^2 || ^3", optional = true, allow-prereleases = true}

[tool.poetry.dev-dependencies]
Jinja2 = "^3.0.3"
ansible = [
    { version = "^5.2 || ^6", python = "~3.8" },
    { version = "^7.0.0 || ^8.0.0", python = "~3.9" },
    { version = "^9.0.0 || ^10.0.0", python = "~3.10" },
    { version = "^11.0.0", python = ">=3.11,<4" },
]
ansible-core = [
    { version = "~2.12.1 || ~2.13", python="~3.8" },
    { version = "~2.14 || ~2.15", python="~3.9" },
    { version = "~2.16 || ~2.17", python="~3.10" },
    { version = "^2.18", python=">=3.11,<4" },
]
ansible-runner = [
    { version = "~2.1.1 || ~2.2 || ~2.3", python = "~3.8", optional = true },
    { version = "^2.4", python = ">=3.9,<4", optional = true },
]
httpx = "^0.18.2 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23 || ^0.24 || ^0.25.0 || ^0.26.0 || ^0.27.0 || ^0.28.0"
jmespath = "^0.10 || ^1"
poetry = "^1.2.0"
pottery = "^3"
pytest = ">=6.2.5"
pytest-asyncio = "^0.17 || ^0.18 || ^0.19 || ^0.20 || ^0.21 || ^0.23.0 || ^0.24.0 || ^0.25.0"
pytest-cov = "^3 || ^4 || ^5.0.0 || ^6.0.0"
tox = "^3.24.4 || ^4.0.0"
psycopg = "^3.0.16"
pytest-postgresql = "^4.1.1 || ^5.0.0 || ^6.0.0 || ^7.0.0"
ruff = "^0.7.3 || ^0.8.0 || ^0.9.0"
toml = "^0.10.2"

[tool.poetry.extras]
# the `serve` command
app = [
    "SQLAlchemy", "alembic", "bcrypt", "fastapi", "uvicorn",
    "aiodns", "ansible-runner", "Jinja2", "jmespath", "pottery", "celery",
]
# the `admin ...` commands
admin = ["SQLAlchemy", "bcrypt", "fastapi"]
# the `setup-db` and `migration` commands
database = ["SQLAlchemy", "alembic", "bcrypt"]
# the `dev-shell` command
dev-shell = ["ipython", "SQLAlchemy", "alembic", "bcrypt"]
# the `serve` and `dev-shell` commands, if you use SQLite
sqlite = ["aiosqlite"]
# the `serve`, `worker` and `dev-shell` commands, if you use PostgreSQL
postgresql = ["psycopg2", "asyncpg"]
# the `worker` command
tasks = ["aiodns", "ansible-runner", "Jinja2", "jmespath", "pottery", "celery"]
# the `serve-legacy` command
legacy = ["httpx", "Jinja2"]
# the `client ...` commands
client = ["httpx"]

[tool.poetry.scripts]
duffy = "duffy.cli:cli"

[tool.pytest.ini_options]
addopts = "--cov-config .coveragerc --cov=duffy --cov-report term --cov-report xml --cov-report html"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
log_format = "%(levelname)s: %(asctime)s %(short_request_id_optional)s(%(filename)s:%(lineno)s %(message)s)"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
allowed-confusables = ["â€™"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]
