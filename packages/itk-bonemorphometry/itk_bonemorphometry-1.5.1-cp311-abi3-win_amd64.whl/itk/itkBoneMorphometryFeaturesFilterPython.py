# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _BoneMorphometryPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoneMorphometryFeaturesFilterPython
else:
    import _itkBoneMorphometryFeaturesFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkBoneMorphometryFeaturesFilterID3_New():
    return itkBoneMorphometryFeaturesFilterID3.New()

class itkBoneMorphometryFeaturesFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesFilterID3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesFilterID3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetThreshold(self)

    def GetBVTV(self):
        r"""GetBVTV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetBVTV(self)

    def GetBVTVOutput(self):
        r"""GetBVTVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetBVTVOutput(self)

    def GetTbN(self):
        r"""GetTbN(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbN(self)

    def GetTbNOutput(self):
        r"""GetTbNOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbNOutput(self)

    def GetTbTh(self):
        r"""GetTbTh(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbTh(self)

    def GetTbThOutput(self):
        r"""GetTbThOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbThOutput(self)

    def GetTbSp(self):
        r"""GetTbSp(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbSp(self)

    def GetTbSpOutput(self):
        r"""GetTbSpOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetTbSpOutput(self)

    def GetBSBV(self):
        r"""GetBSBV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetBSBV(self)

    def GetBSBVOutput(self):
        r"""GetBSBVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_GetBSBVOutput(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesFilterPython.delete_itkBoneMorphometryFeaturesFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesFilterID3

        Create a new object of the class itkBoneMorphometryFeaturesFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesFilterID3 in _itkBoneMorphometryFeaturesFilterPython:
_itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterID3_swigregister(itkBoneMorphometryFeaturesFilterID3)

def itkBoneMorphometryFeaturesFilterIF3_New():
    return itkBoneMorphometryFeaturesFilterIF3.New()

class itkBoneMorphometryFeaturesFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesFilterIF3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesFilterIF3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetThreshold(self)

    def GetBVTV(self):
        r"""GetBVTV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetBVTV(self)

    def GetBVTVOutput(self):
        r"""GetBVTVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetBVTVOutput(self)

    def GetTbN(self):
        r"""GetTbN(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbN(self)

    def GetTbNOutput(self):
        r"""GetTbNOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbNOutput(self)

    def GetTbTh(self):
        r"""GetTbTh(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbTh(self)

    def GetTbThOutput(self):
        r"""GetTbThOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbThOutput(self)

    def GetTbSp(self):
        r"""GetTbSp(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbSp(self)

    def GetTbSpOutput(self):
        r"""GetTbSpOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetTbSpOutput(self)

    def GetBSBV(self):
        r"""GetBSBV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetBSBV(self)

    def GetBSBVOutput(self):
        r"""GetBSBVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_GetBSBVOutput(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesFilterPython.delete_itkBoneMorphometryFeaturesFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesFilterIF3

        Create a new object of the class itkBoneMorphometryFeaturesFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesFilterIF3 in _itkBoneMorphometryFeaturesFilterPython:
_itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIF3_swigregister(itkBoneMorphometryFeaturesFilterIF3)

def itkBoneMorphometryFeaturesFilterISS3_New():
    return itkBoneMorphometryFeaturesFilterISS3.New()

class itkBoneMorphometryFeaturesFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesFilterISS3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesFilterISS3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetThreshold(self)

    def GetBVTV(self):
        r"""GetBVTV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetBVTV(self)

    def GetBVTVOutput(self):
        r"""GetBVTVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetBVTVOutput(self)

    def GetTbN(self):
        r"""GetTbN(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbN(self)

    def GetTbNOutput(self):
        r"""GetTbNOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbNOutput(self)

    def GetTbTh(self):
        r"""GetTbTh(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbTh(self)

    def GetTbThOutput(self):
        r"""GetTbThOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbThOutput(self)

    def GetTbSp(self):
        r"""GetTbSp(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbSp(self)

    def GetTbSpOutput(self):
        r"""GetTbSpOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetTbSpOutput(self)

    def GetBSBV(self):
        r"""GetBSBV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetBSBV(self)

    def GetBSBVOutput(self):
        r"""GetBSBVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_GetBSBVOutput(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesFilterPython.delete_itkBoneMorphometryFeaturesFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesFilterISS3

        Create a new object of the class itkBoneMorphometryFeaturesFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesFilterISS3 in _itkBoneMorphometryFeaturesFilterPython:
_itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterISS3_swigregister(itkBoneMorphometryFeaturesFilterISS3)

def itkBoneMorphometryFeaturesFilterIUC3_New():
    return itkBoneMorphometryFeaturesFilterIUC3.New()

class itkBoneMorphometryFeaturesFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesFilterIUC3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesFilterIUC3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetThreshold(self)

    def GetBVTV(self):
        r"""GetBVTV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetBVTV(self)

    def GetBVTVOutput(self):
        r"""GetBVTVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetBVTVOutput(self)

    def GetTbN(self):
        r"""GetTbN(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbN(self)

    def GetTbNOutput(self):
        r"""GetTbNOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbNOutput(self)

    def GetTbTh(self):
        r"""GetTbTh(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbTh(self)

    def GetTbThOutput(self):
        r"""GetTbThOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbThOutput(self)

    def GetTbSp(self):
        r"""GetTbSp(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbSp(self)

    def GetTbSpOutput(self):
        r"""GetTbSpOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetTbSpOutput(self)

    def GetBSBV(self):
        r"""GetBSBV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetBSBV(self)

    def GetBSBVOutput(self):
        r"""GetBSBVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_GetBSBVOutput(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesFilterPython.delete_itkBoneMorphometryFeaturesFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesFilterIUC3

        Create a new object of the class itkBoneMorphometryFeaturesFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesFilterIUC3 in _itkBoneMorphometryFeaturesFilterPython:
_itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUC3_swigregister(itkBoneMorphometryFeaturesFilterIUC3)

def itkBoneMorphometryFeaturesFilterIUS3_New():
    return itkBoneMorphometryFeaturesFilterIUS3.New()

class itkBoneMorphometryFeaturesFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesFilterIUS3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesFilterIUS3_Pointer"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetThreshold(self)

    def GetBVTV(self):
        r"""GetBVTV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetBVTV(self)

    def GetBVTVOutput(self):
        r"""GetBVTVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetBVTVOutput(self)

    def GetTbN(self):
        r"""GetTbN(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbN(self)

    def GetTbNOutput(self):
        r"""GetTbNOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbNOutput(self)

    def GetTbTh(self):
        r"""GetTbTh(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbTh(self)

    def GetTbThOutput(self):
        r"""GetTbThOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbThOutput(self)

    def GetTbSp(self):
        r"""GetTbSp(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbSp(self)

    def GetTbSpOutput(self):
        r"""GetTbSpOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetTbSpOutput(self)

    def GetBSBV(self):
        r"""GetBSBV(self) -> double"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetBSBV(self)

    def GetBSBVOutput(self):
        r"""GetBSBVOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_GetBSBVOutput(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesFilterPython.delete_itkBoneMorphometryFeaturesFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesFilterIUS3

        Create a new object of the class itkBoneMorphometryFeaturesFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesFilterIUS3 in _itkBoneMorphometryFeaturesFilterPython:
_itkBoneMorphometryFeaturesFilterPython.itkBoneMorphometryFeaturesFilterIUS3_swigregister(itkBoneMorphometryFeaturesFilterIUS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def bone_morphometry_features_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., threshold: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BoneMorphometryFeaturesFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'threshold':threshold }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BoneMorphometryFeaturesFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def bone_morphometry_features_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.BoneMorphometryFeaturesFilter
    bone_morphometry_features_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    bone_morphometry_features_filter.__doc__ = filter_object.__doc__



