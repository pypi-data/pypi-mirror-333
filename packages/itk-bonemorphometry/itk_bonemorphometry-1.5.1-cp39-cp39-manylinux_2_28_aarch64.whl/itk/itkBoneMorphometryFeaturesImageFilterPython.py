# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _BoneMorphometryPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoneMorphometryFeaturesImageFilterPython
else:
    import _itkBoneMorphometryFeaturesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkImageToImageFilterCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkBoneCommonPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkBoneMorphometryFeaturesImageFilterID3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterID3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterID3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterID3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterID3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterID3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterID3VIF3)

def itkBoneMorphometryFeaturesImageFilterIF3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIF3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIF3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIF3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIF3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIF3VIF3)

def itkBoneMorphometryFeaturesImageFilterISS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterISS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterISS3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterISS3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterISS3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterISS3VIF3)

def itkBoneMorphometryFeaturesImageFilterIUC3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUC3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3VIF3)

def itkBoneMorphometryFeaturesImageFilterIUS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3VIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3VIF3)
class itkImageToImageFilterID3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD3
        GetInput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetDirectionTolerance(self)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterID3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterID3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_cast(obj)

# Register itkImageToImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_swigregister(itkImageToImageFilterID3IVF53)
class itkImageToImageFilterIF3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF3
        GetInput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetDirectionTolerance(self)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIF3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIF3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_cast(obj)

# Register itkImageToImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_swigregister(itkImageToImageFilterIF3IVF53)
class itkImageToImageFilterISS3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS3
        GetInput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetDirectionTolerance(self)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterISS3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterISS3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_cast(obj)

# Register itkImageToImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_swigregister(itkImageToImageFilterISS3IVF53)
class itkImageToImageFilterIUC3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC3
        GetInput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetDirectionTolerance(self)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUC3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUC3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_cast(obj)

# Register itkImageToImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_swigregister(itkImageToImageFilterIUC3IVF53)
class itkImageToImageFilterIUS3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS3
        GetInput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetInput(self, *args)

    def PushBackInput(self, input):
        r"""
        PushBackInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushBackInput(self, input)

    def PopBackInput(self):
        r"""PopBackInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopBackInput(self)

    def PushFrontInput(self, input):
        r"""
        PushFrontInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushFrontInput(self, input)

    def PopFrontInput(self):
        r"""PopFrontInput(self)"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopFrontInput(self)

    def SetCoordinateTolerance(self, _arg):
        r"""
        SetCoordinateTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetCoordinateTolerance(self, _arg)

    def GetCoordinateTolerance(self):
        r"""GetCoordinateTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetCoordinateTolerance(self)

    def SetDirectionTolerance(self, _arg):
        r"""
        SetDirectionTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetDirectionTolerance(self, _arg)

    def GetDirectionTolerance(self):
        r"""GetDirectionTolerance(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetDirectionTolerance(self)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUS3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageFilterIUS3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_cast(obj)

# Register itkImageToImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_swigregister(itkImageToImageFilterIUS3IVF53)

def itkBoneMorphometryFeaturesImageFilterID3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterID3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterID3IVF53(itkImageToImageFilterID3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterID3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterID3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterID3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterID3IVF53)

def itkBoneMorphometryFeaturesImageFilterIF3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIF3IVF53(itkImageToImageFilterIF3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIF3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIF3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIF3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIF3IVF53)

def itkBoneMorphometryFeaturesImageFilterISS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterISS3IVF53(itkImageToImageFilterISS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterISS3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterISS3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterISS3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterISS3IVF53)

def itkBoneMorphometryFeaturesImageFilterIUC3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUC3IVF53(itkImageToImageFilterIUC3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3IVF53)

def itkBoneMorphometryFeaturesImageFilterIUS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUS3IVF53(itkImageToImageFilterIUS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53_Pointer"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetMaskImage(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetThreshold(self)

    def SetNeighborhoodRadius(self, _arg):
        r"""
        SetNeighborhoodRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetNeighborhoodRadius(self, _arg)

    def GetNeighborhoodRadius(self):
        r"""GetNeighborhoodRadius(self) -> itkSize3"""
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetNeighborhoodRadius(self)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3IVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3IVF53)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def bone_morphometry_features_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., threshold: float=..., neighborhood_radius: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BoneMorphometryFeaturesImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'threshold':threshold,'neighborhood_radius':neighborhood_radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BoneMorphometryFeaturesImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def bone_morphometry_features_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.BoneMorphometryFeaturesImageFilter
    bone_morphometry_features_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    bone_morphometry_features_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__



