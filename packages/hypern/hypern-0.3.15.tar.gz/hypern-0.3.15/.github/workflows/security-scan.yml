name: Security Scan

on:
  push:
    branches: [ main, stag ]
  pull_request:
    branches: [ main, stag ]
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Export requirements
        run: |
          python -m pip install --upgrade pip
          pip install poetry poetry-plugin-export
          poetry lock
          poetry export --without-hashes --format=requirements.txt > requirements.txt
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
          
      # Bandit - Scan for security vulnerabilities in Python code
      - name: Run Bandit
        run: |
          bandit -r ./hypern -f json -o bandit-results.json --exit-zero
          
      # Safety - Check dependencies for security vulnerabilities
      - name: Run Safety CLI to check for vulnerabilities
        uses: pyupio/safety-action@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
          args: --detailed-output

      # OWASP Dependency-Check
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Hypern'
          path: '.'
          format: 'JSON'
          
      # SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      # GitGuardian - Scan for secrets
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.34.0
        with:
          fetch-depth: 0
        env:
          GITHUB_PUSH_BEFORE: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      # Upload scan results as artifacts
      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            bandit-results.json
            safety-results.json
            dependency-check-report.json
            
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical