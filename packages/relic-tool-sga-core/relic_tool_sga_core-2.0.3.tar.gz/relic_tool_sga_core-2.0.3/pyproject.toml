[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.2"]

[project]
authors = [{name = "Marcus Kertesz"}]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]
dependencies = [
  "relic-tool-core >= 2.3.0",
  "fs >= 2.4.16"
]
description = "Core files shared by versioned SGA files."
dynamic = ["version"]
name = "relic-tool-sga-core"
requires-python = ">=3.9"

[project.entry-points]
"relic.cli" = {sga = "relic.sga.core.cli:RelicSgaCli"}

[project.entry-points."fs.opener"]
sga = "relic.sga.core.essencefs.opener:EssenceFsOpener"

[project.entry-points."relic.cli.sga"]
info = "relic.sga.core.cli:RelicSgaInfoCli"
list = "relic.sga.core.cli:RelicSgaListCli"
tree = "relic.sga.core.cli:RelicSgaTreeCli"
unpack = "relic.sga.core.cli:RelicSgaUnpackCli"
version = "relic.sga.core.cli:RelicSgaVersionCli"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
"Bug Tracker" = "https://github.com/MAK-Relic-Tool/Issue-Tracker/issues"
Homepage = "https://github.com/MAK-Relic-Tool/Relic-Tool-SGA-Core"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
extra_checks = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["serialization_tools.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pkg_resources.*"]

[[tool.mypy.overrides]]
ignore_errors = true
ignore_missing_imports = true
module = ["tests.*"]

[[tool.mypy.overrides]]
ignore_errors = true
ignore_missing_imports = true
module = ["docs.*"]

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
template_dir = "templates"

[tool.semantic_release.changelog.environment]
autoescape = true
block_end_string = "%}"
block_start_string = "{%"
comment_end_string = "#}"
comment_start_string = "{#"
extensions = []
keep_trailing_newline = false
lstrip_blocks = false
newline_sequence = "\n"
trim_blocks = false
variable_end_string = "}}"
variable_start_string = "{{"

[tool.semantic_release.commit_author]
default = "semantic-release <semantic-release>"
env = "GIT_COMMIT_AUTHOR"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
default_bump_level = 0
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release.remote]
ignore_token_for_push = false
name = "origin"
type = "github"

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "relic.sga.core.__version__"}

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]
