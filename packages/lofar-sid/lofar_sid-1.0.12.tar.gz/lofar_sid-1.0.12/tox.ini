[tox]
# Generative environment list to test all supported Python versions
min_version = 4.3.3
requires =
    tox-ignore-env-name-mismatch >= 0.2.0

[testenv]
usedevelop = True
package = wheel
wheel_build_env = .pkg

setenv =
    PYTHONWARNINGS=default::DeprecationWarning
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/tests/requirements.txt

commands_pre =
    {envpython} --version
    {envpython} -m grpc_tools.protoc -Ilofar_sid/interface=proto --python_out=. --pyi_out=. --grpc_python_out=. proto/stationcontrol/observation.proto proto/stationcontrol/antennafield.proto proto/opah/grafana-apiv3.proto proto/stationcontrol/statistics.proto


commands =
    {envpython} --version
    {envpython} -m pytest tests/{posargs}

[testenv:coverage]
commands =
    {envpython} --version
    {envpython} -m pytest --cov-report term --cov-report xml --cov-report html --cov=lofar_sid tests/{posargs}

# Use generative name and command prefixes to reuse the same virtualenv
# for all linting jobs.
[testenv:{pep8,black,pylint,format}]
usedevelop = False
package = editable
envdir = {toxworkdir}/linting
commands =
    pep8: {envpython} -m flake8 --version
    pep8: {envpython} -m flake8  --exclude=lofar_sid/interface lofar_sid tests
    black: {envpython} -m black --version  
    black: {envpython} -m black --check --diff lofar_sid tests  --exclude '.*pb2.*\.py|_version\.py' 
    pylint: {envpython} -m pylint --version
    pylint: {envpython} -m pylint  --prefer-stub=true lofar_sid tests 
    format: {envpython} -m autopep8 -v -aa --in-place --recursive lofar_sid
    format: {envpython} -m autopep8 -v -aa --in-place --recursive tests
    format: {envpython} -m black -v lofar_sid tests

[testenv:docs]
; unset LC_ALL / LANGUAGE from testenv, would fail sphinx otherwise
setenv =
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/docs/requirements.txt
changedir = {toxinidir}
commands =
    {envpython} docs/cleanup.py
    sphinx-build -b html docs/source docs/build/html

[testenv:build]
usedevelop = False
deps = build
commands = {envpython} -m build
