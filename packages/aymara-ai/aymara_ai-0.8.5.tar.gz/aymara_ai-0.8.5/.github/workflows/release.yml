name: Create Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Set up Python
        run: uv python install

      - name: Read version from pyproject.toml
        id: get_version
        run: |
          echo "VERSION=v$(uv run --with toml - <<EOF
          import toml
          print(toml.load('pyproject.toml')['project']['version'])
          EOF
          )" >> $GITHUB_OUTPUT

      - name: Check if release already exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view ${{ steps.get_version.outputs.VERSION }} &> /dev/null; then
            echo "Error: Release ${{ steps.get_version.outputs.VERSION }} already exists!"
            exit 1
          fi

      - name: Build project
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.get_version.outputs.VERSION }} \
            --title "${{ steps.get_version.outputs.VERSION }}" \
            --generate-notes
