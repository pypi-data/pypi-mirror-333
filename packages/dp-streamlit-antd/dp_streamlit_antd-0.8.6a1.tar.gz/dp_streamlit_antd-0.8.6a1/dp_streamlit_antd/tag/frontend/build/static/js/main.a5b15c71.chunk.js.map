{"version":3,"sources":["STTag.tsx","index.tsx"],"names":["STTag","state","tags","props","args","tag_list","inputVisible","inputValue","editInputIndex","editInputValue","inputRef","editInputRef","new_tag_name","removable_start_idx","log_tag_threshold","render","handleInputConfirm","indexOf","setState","Streamlit","setComponentValue","handleEditInputChange","e","target","value","handleEditInputConfirm","newTags","tagInputStyle","width","verticalAlign","size","wrap","map","tag","index","ref","style","onChange","onBlur","onPressEnter","isLongTag","length","tagElem","closable","userSelect","onClose","removedTag","filter","handleClose","onDoubleClick","preventDefault","slice","title","type","borderStyle","onClick","PlusOutlined","setTimeout","setFrameHeight","this","ajustHeight","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"sQAqBMA,E,4MACJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,KAAKC,SACtBC,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,GAChBC,SAAU,KACVC,aAAc,M,EAEhBC,aAAe,EAAKT,MAAMC,KAAKQ,a,EAC/BC,oBAA8B,EAAKV,MAAMC,KAAKS,oB,EAC9CC,kBAA4B,EAAKX,MAAMC,KAAKU,kB,EAgBrCC,OAAS,WAEd,IAaMC,EAAqB,WACrB,EAAKf,MAAMM,aAAkE,IAApD,EAAKN,MAAMC,KAAKe,QAAQ,EAAKhB,MAAMM,aAC9D,EAAKW,SAAS,CAAChB,KAAK,GAAD,mBAAM,EAAKD,MAAMC,MAAjB,CAAuB,EAAKD,MAAMM,eAAc,WAAOY,IAAUC,kBAAkB,EAAKnB,MAAMC,KAAM,IAEzH,EAAKgB,SAAS,CAACZ,cAAc,EAAOC,WAAY,IACjD,EAEKc,EAAwB,SAACC,GAC7B,EAAKJ,SAAS,CAACT,eAAgBa,EAAEC,OAAOC,OACzC,EAEKC,EAAyB,WAC7B,IAAMC,EAAO,YAAO,EAAKzB,MAAMC,MAC/BwB,EAAQ,EAAKzB,MAAMO,gBAAkB,EAAKP,MAAMQ,eAChD,EAAKS,SAAS,CAAChB,KAAMwB,EAASlB,gBAAiB,EAAGC,eAAgB,KAAK,WAAOU,IAAUC,kBAAkB,EAAKnB,MAAMC,KAAM,GAC5H,EAEKyB,EAAqC,CACzCC,MAAO,GACPC,cAAe,OAQjB,OACE,eAAC,IAAD,CAAOC,KAAM,CAAC,EAAG,GAAIC,MAAI,EAAzB,UACE,cAAC,IAAD,CAAOD,KAAM,CAAC,EAAG,GAAIC,MAAI,EAAzB,SACG,EAAK9B,MAAMC,KAAK8B,KAAI,SAACC,EAAaC,GACjC,GAAI,EAAKjC,MAAMO,iBAAmB0B,EAChC,OACE,cAAC,IAAD,CACEC,IAAK,EAAKlC,MAAMU,aAEhBmB,KAAK,QACLM,MAAOT,EACPH,MAAO,EAAKvB,MAAMQ,eAClB4B,SAAUhB,EACViB,OAAQb,EACRc,aAAcd,GANTQ,GAUX,IAAMO,EAAYP,EAAIQ,OAAS,EAAK3B,kBAC9B4B,EACJ,cAAC,IAAD,CAEEC,SAAUT,GAAS,EAAKrB,oBACxBuB,MAAO,CAAEQ,WAAY,QACrBC,QAAS,kBAhED,SAACC,GACnB,IAAMpB,EAAU,EAAKzB,MAAMC,KAAK6C,QAAO,SAACd,GAAD,OAAcA,IAAQa,CAAtB,IACvC,EAAK5B,SAAS,CAAChB,KAAMwB,IAAU,WAAOP,IAAUC,kBAAkB,EAAKnB,MAAMC,KAAM,GACpF,CA6D0B8C,CAAYf,EAAlB,EAJX,SAME,sBACEgB,cAAe,SAAC3B,GACA,IAAVY,IACF,EAAKhB,SAAS,CAACV,eAAgB0B,EAAOzB,eAAgBwB,IACtDX,EAAE4B,iBAEL,EANH,SAQGV,EAAS,UAAMP,EAAIkB,MAAM,EAAG,EAAKrC,mBAAxB,OAAkDmB,KAbzDA,GAiBT,OAAOO,EACL,cAAC,IAAD,CAASY,MAAOnB,EAAhB,SACGS,GADuBT,GAI1BS,CAEH,MAEF,EAAKzC,MAAMK,aACV,cAAC,IAAD,CACE6B,IAAK,EAAKlC,MAAMS,SAChB2C,KAAK,OACLvB,KAAK,QACLM,MAAOT,EACPH,MAAO,EAAKvB,MAAMM,WAClB8B,SArFkB,SAACf,GACzB,EAAKJ,SAAS,CAACX,WAAYe,EAAEC,OAAOC,OACrC,EAoFOc,OAAQtB,EACRuB,aAAcvB,IAGhB,eAAC,IAAD,CAAKoB,MAhE+B,CAExCkB,YAAa,UA8DiBC,QA9Fd,WAChB,EAAKrC,SAAS,CAACZ,cAAc,GAC9B,EA4FK,UACE,cAACkD,EAAA,EAAD,IAAiB,EAAK5C,kBAK/B,E,iDAzHD,WACE6C,YAAW,WACPtC,IAAUuC,gBACb,GAAE,EACJ,G,+BAED,WACEC,KAAKC,aACN,G,gCAED,WACED,KAAKC,aACN,K,GA1BiBC,KA2ILC,cAAwB9D,GC5JvC+D,IAAShD,OAEP,cAAC,IAAMiD,WAAP,UACE,8BACA,cAAC,EAAD,QAGFC,SAASC,eAAe,Q","file":"static/js/main.a5b15c71.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport type { InputRef } from 'antd';\nimport { Space, Input, Tag, Tooltip } from 'antd';\n\ninterface IState {\n  tags: Array<string>,\n  inputVisible: boolean,\n  inputValue: string,\n  editInputIndex: number,\n  editInputValue: string,\n  inputRef: InputRef | null,\n  editInputRef: InputRef | null,\n}\n\n\nclass STTag extends StreamlitComponentBase<IState> {\n  state = {\n    tags: this.props.args.tag_list,\n    inputVisible: false,\n    inputValue: \"\",\n    editInputIndex: -1,\n    editInputValue: \"\",\n    inputRef: null,\n    editInputRef: null,\n  }\n  new_tag_name = this.props.args.new_tag_name;\n  removable_start_idx: number = this.props.args.removable_start_idx;\n  log_tag_threshold: number = this.props.args.log_tag_threshold\n\n  ajustHeight() {\n    setTimeout(() => {\n        Streamlit.setFrameHeight();\n    }, 0)\n  }\n\n  componentDidMount() {\n    this.ajustHeight();\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight();\n  }\n\n  public render = (): ReactNode => {\n  \n    const handleClose = (removedTag: string) => {\n      const newTags = this.state.tags.filter((tag: any) => tag !== removedTag);\n      this.setState({tags: newTags}, () => {Streamlit.setComponentValue(this.state.tags)});\n    };\n  \n    const showInput = () => {\n      this.setState({inputVisible: true})\n    };\n  \n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({inputValue: e.target.value})\n    };\n  \n    const handleInputConfirm = () => {\n      if (this.state.inputValue && this.state.tags.indexOf(this.state.inputValue) === -1) {\n        this.setState({tags: [...this.state.tags, this.state.inputValue]}, () => {Streamlit.setComponentValue(this.state.tags)})\n      }\n      this.setState({inputVisible: false, inputValue: \"\"})\n    };\n  \n    const handleEditInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({editInputValue: e.target.value})\n    };\n  \n    const handleEditInputConfirm = () => {\n      const newTags = [...this.state.tags];\n      newTags[this.state.editInputIndex] = this.state.editInputValue;\n      this.setState({tags: newTags, editInputIndex: -1, editInputValue: \"\"}, () => {Streamlit.setComponentValue(this.state.tags)});\n    };\n  \n    const tagInputStyle: React.CSSProperties = {\n      width: 78,\n      verticalAlign: 'top',\n    };\n  \n    const tagPlusStyle: React.CSSProperties = {\n      // background: token.colorBgContainer,\n      borderStyle: 'dashed',\n    };\n  \n    return (\n      <Space size={[0, 8]} wrap>\n        <Space size={[0, 8]} wrap>\n          {this.state.tags.map((tag: string, index: number) => {\n            if (this.state.editInputIndex === index) {\n              return (\n                <Input\n                  ref={this.state.editInputRef}\n                  key={tag}\n                  size=\"small\"\n                  style={tagInputStyle}\n                  value={this.state.editInputValue}\n                  onChange={handleEditInputChange}\n                  onBlur={handleEditInputConfirm}\n                  onPressEnter={handleEditInputConfirm}\n                />\n              );\n            }\n            const isLongTag = tag.length > this.log_tag_threshold;\n            const tagElem = (\n              <Tag\n                key={tag}\n                closable={index >= this.removable_start_idx}\n                style={{ userSelect: 'none' }}\n                onClose={() => handleClose(tag)}\n              >\n                <span\n                  onDoubleClick={(e) => {\n                    if (index !== 0) {\n                      this.setState({editInputIndex: index, editInputValue: tag})\n                      e.preventDefault();\n                    }\n                  }}\n                >\n                  {isLongTag ? `${tag.slice(0, this.log_tag_threshold)}...` : tag}\n                </span>\n              </Tag>\n            );\n            return isLongTag ? (\n              <Tooltip title={tag} key={tag}>\n                {tagElem}\n              </Tooltip>\n            ) : (\n              tagElem\n            );\n          })}\n        </Space>\n        {this.state.inputVisible ? (\n          <Input\n            ref={this.state.inputRef}\n            type=\"text\"\n            size=\"small\"\n            style={tagInputStyle}\n            value={this.state.inputValue}\n            onChange={handleInputChange}\n            onBlur={handleInputConfirm}\n            onPressEnter={handleInputConfirm}\n          />\n        ) : (\n          <Tag style={tagPlusStyle} onClick={showInput}>\n            <PlusOutlined />{this.new_tag_name}\n          </Tag>\n        )}\n      </Space>\n    );\n  };\n\n}\n\nexport default withStreamlitConnection(STTag);","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport STTag from \"./STTag\"\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <div>\n    <STTag />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}