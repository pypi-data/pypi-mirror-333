{"version":3,"sources":["STCascader.tsx","index.tsx"],"names":["onVisibleChange","open","setTimeout","root","document","getElementById","droparea","getElementsByClassName","height","Math","max","clientHeight","body","scrollHeight","offsetHeight","Streamlit","setFrameHeight","undefined","ajustHeight","onChange","value","selectOptions","values","console","log","setComponentValue","onMultiplyChange","filter","inputValue","options","fieldNames","some","option","label","toString","toLowerCase","indexOf","STCascader","render","props","args","multiple","style","width","onDropdownVisibleChange","maxTagCount","allowClear","showSearch","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode"],"mappings":"oSA0BA,SAASA,EAAgBC,GACvBC,YAAW,YAdb,SAAqBD,GACnB,IAAME,EAAOC,SAASC,eAAe,QAC/BC,EAAWF,SAASG,uBAAuB,uBAAuB,GACxE,GAAIN,GACF,GAAIE,EAAM,CACR,IAAMK,EAASC,KAAKC,IAAIJ,EAASA,EAASK,aAAeR,EAAKQ,aAAa,EAAGP,SAASQ,KAAKD,aAAcR,EAAKQ,aAAcR,EAAKU,aAAcV,EAAKW,cACrJC,IAAUC,eAAeR,SAG3BO,IAAUC,eAAeb,EAAKA,EAAKQ,kBAAaM,GAMhDC,CAAYjB,KACX,GAGL,SAASkB,EAASC,EAAwBC,GACxC,IAAMC,EAAS,CAACF,GAChBG,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GACZN,IAAUU,kBAAkB,CAACH,SAAQD,kBAGvC,SAASK,EAAiBJ,EAA2BD,GACnDE,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GACZN,IAAUU,kBAAkB,CAACH,SAAQD,kBAGvC,SAASM,EAAOC,EAAoBC,EAA8BC,GAChE,OAAOD,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,OAASD,EAAOC,MAAMC,WAAWC,cAAcC,QAAQR,EAAWO,gBAAkB,K,IAIrHE,E,4MAEGC,OAAS,WAId,MAAwC,EAAKC,MAAMC,KAA3CX,EAAR,EAAQA,QAASY,EAAjB,EAAiBA,SAAaF,EAA9B,iBAsBA,OArBUE,EACN,kBAAC,IAAD,eAEAZ,QAASA,EACTV,SAAWO,EACXgB,MAAO,CAACC,MAAO,QACfF,UAAU,EACVG,wBAAyB5C,EACzB6C,YAAY,cACRN,IAEH,kBAAC,IAAD,eACDO,YAAY,EACZjB,QAASA,EACTV,SAAWA,EACXuB,MAAO,CAACC,MAAO,QACfF,UAAU,EACVG,wBAAyB5C,EACzB+C,WAAY,CAAEpB,WACVY,K,yBA1BaS,KAgCVC,cAAwBZ,G,OC7EvCa,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEF/C,SAASC,eAAe,W","file":"static/js/main.b022c147.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport { Cascader } from 'antd';\nimport { DefaultOptionType, FieldNames, SingleValueType } from \"rc-cascader/lib/Cascader\";\n\n\ninterface State {\n}\n\nfunction ajustHeight(open: boolean) {\n  const root = document.getElementById('root');\n  const droparea = document.getElementsByClassName('ant-select-dropdown')[0];\n  if (open) {\n    if (root) {\n      const height = Math.max(droparea?droparea.clientHeight + root.clientHeight:0, document.body.clientHeight, root.clientHeight, root.scrollHeight, root.offsetHeight);\n      Streamlit.setFrameHeight(height);\n    }\n  } else {\n    Streamlit.setFrameHeight(root?root.clientHeight:undefined);\n  }\n}\n\nfunction onVisibleChange(open: boolean) {\n  setTimeout(() => {\n    ajustHeight(open)\n  }, 0);\n}\n\nfunction onChange(value: SingleValueType, selectOptions: DefaultOptionType[])  {\n  const values = [value];\n  console.log(values);\n  console.log(selectOptions);\n  Streamlit.setComponentValue({values, selectOptions})\n}\n\nfunction onMultiplyChange(values: SingleValueType[], selectOptions: DefaultOptionType[][])  {\n  console.log(values);\n  console.log(selectOptions);\n  Streamlit.setComponentValue({values, selectOptions})\n}\n\nfunction filter(inputValue: string, options: DefaultOptionType[], fieldNames: FieldNames) : boolean {\n  return options.some(option => option.label && option.label.toString().toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\n}\n\n\nclass STCascader extends StreamlitComponentBase<State> {\n\n  public render = (): ReactNode => {\n    // const options = this.props.args.options;\n    // console.log(999, this.props.args);\n    // const multiple: boolean = this.props.args.multiple;\n    const { options, multiple, ...props } = this.props.args;\n    const x = multiple?\n        <Cascader\n        //allowClear={true}\n        options={options}\n        onChange={ onMultiplyChange }\n        style={{width: \"100%\"}}\n        multiple={true}\n        onDropdownVisibleChange={onVisibleChange}\n        maxTagCount=\"responsive\"\n        {...props}\n        //showSearch={{ filter }}\n      />:<Cascader\n        allowClear={true}\n        options={options}\n        onChange={ onChange }\n        style={{width: \"100%\"}}\n        multiple={false}\n        onDropdownVisibleChange={onVisibleChange}\n        showSearch={{ filter }}\n        {...props}\n      />\n    return x\n  }\n}\n\nexport default withStreamlitConnection(STCascader);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport STCascader from \"./STCascader\"\nimport 'antd/dist/antd.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <STCascader />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}