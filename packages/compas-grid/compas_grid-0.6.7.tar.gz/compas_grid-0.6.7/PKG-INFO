Metadata-Version: 2.2
Name: compas_grid
Version: 0.6.7
Summary: Model of simple grid structures for multi-storey buildings.
Author-email: Petras Vestartas <petrasvestartas@gmail.com>
License: MIT License
        
        Petras Vestartas
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/BRG-research/compas_grid.git
Project-URL: Documentation, https://github.com/BRG-research/compas_grid.git
Project-URL: Repository, https://github.com/BRG-research/compas_grid.git
Project-URL: Changelog, https://github.com/BRG-research/compas_grid/blob/main/CHANGELOG.md
Project-URL: Issues, https://github.com/BRG-research/compas_grid/issues
Project-URL: Forum, https://forum.compas-framework.org/
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: compas>=2
Requires-Dist: compas_viewer
Requires-Dist: compas_model
Provides-Extra: dev
Requires-Dist: attrs>=17.4; extra == "dev"
Requires-Dist: black>=22.12.0; extra == "dev"
Requires-Dist: bump-my-version; extra == "dev"
Requires-Dist: compas_invocations2; extra == "dev"
Requires-Dist: invoke>=0.14; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: sphinx_compas2_theme; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: wheel; extra == "dev"
Requires-Dist: build; extra == "dev"

# compas_grid

Model of simple grid structures for multi-storey buildings.

## Ubuntu Installation from Scratch

- **Download Installer**: Visit [www.anaconda.com](https://www.anaconda.com/products/distribution#download-section) to download `Anaconda3-2024.10-1-Linux-x86_64.sh`.
- **Run Installer**: Execute the installer with `bash Anaconda3-2024.10-1-Linux-x86_64.sh` and follow prompts.
- **Initialize Anaconda**: Run `source ~/.bashrc` and initialize with `conda init`.
- **Verify Installation**: Check Conda version with `conda --version`.
- **Update Conda**: Keep Conda updated using `conda update --all`.
- **Create Environment**: Use `conda create -n model -c conda-forge compas compas_viewer compas_occ compas_cgal python=3.9.10` to create a new environment.
- **Activate Environment**: Activate it with `conda activate model`.
- **Install Git**: `sudo apt install git -y`
- **Clone Model** go to you code directory `cd '/home/petras/code'`, then `git clone https://github.com/blockresearchgroup/compas_model` then, `cd  compas_model` then, `pip install -e .`
- **Clone Grid** go to you code directory `cd ..`, then `git clone https://github.com/BRG-research/compas_grid` then, `cd  compas_grid` then, `pip install -e .`
- **VS Code** open vscode set the environment with `CTRL+SHIFT+P` and `>Select: Python Interpreter`.
  
## Git Branch

For new features use other github branches.

To pull latest branch
```bash
git pull origin crea
```


## Commit style

```bash
git commit -m "DOC <description>"         <--- documentation related messages including readme
git commit -m "ADD <description>"         <--- for adding new elements
git commit -m "FIX <description>"         <--- for fixing (errors, typos)
git commit -m "FLASH <description>"       <--- quick checkpoint before refactoring
git commit -m "MILESTONE <description>"   <--- for capping moment in development
git commit -m "CAP <description>"         <--- for for less important milestones
git commit -m "UPDATE <description>"      <--- for moddification to the same file
git commit -m "MISC <description>"        <--- for any other reasons to be described
git commit -m "WIP <description>"         <--- for not finished work
git commit -m "REFACTOR <description>"    <--- for refactored code
git commit -m "MERGE <description>"       <--- for merging operations
git commit -m "WIP-CAP <description>"     <--- for when combining multiple commits into one
```

## Installation

Stable releases can be installed from PyPI.

```bash
pip install compas_grid
```

To install the latest version for development, do:

```bash
git clone https://github.com//compas_grid.git
cd compas_grid
pip install -e ".[dev]"
```

## Documentation

For further "getting started" instructions, a tutorial, examples, and an API reference,
please check out the online documentation here: [compas_grid docs](https://.github.io/compas_grid)

## Issue Tracker

If you find a bug or if you have a problem with running the code, please file an issue on the [Issue Tracker](https://github.com//compas_grid/issues).

