#!/usr/bin/env tesh
! expect return 1
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug assert ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning
> [  0.000000] (0:maestro@) Behavior: assert
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: dpor.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) *** PROPERTY NOT VALID ***
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)

! expect return 4
# because simgrid::mc::ExitStatus::PROGRAM_CRASH = 4
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug abort ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --log=no_loc
> [  0.000000] (0:maestro@) Behavior: abort
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: dpor.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) ** CRASH IN THE PROGRAM **
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) From signal: Aborted
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)


$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug printf ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning
> [  0.000000] (0:maestro@) Behavior: printf
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: dpor.
> [  0.000000] (1:app@Fafard) Error reached
> [  0.000000] (0:maestro@) DFS exploration ended. 43 unique states visited; 36 explored traces (30 transition replays, 73 states visited overall)


! expect return 4
# because simgrid::mc::ExitStatus::PROGRAM_CRASH = 4
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug segv ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --log=no_loc
> [  0.000000] (0:maestro@) Behavior: segv
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: dpor.
> Segmentation fault.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) ** CRASH IN THE PROGRAM **
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) From signal: Segmentation fault
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)

#!/usr/bin/env tesh
! expect return 1
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug assert ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --cfg=model-check/reduction:odpor
> [  0.000000] (0:maestro@) Behavior: assert
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: odpor.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) *** PROPERTY NOT VALID ***
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)

! expect return 4
# because simgrid::mc::ExitStatus::PROGRAM_CRASH = 4
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug abort ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --log=no_loc --cfg=model-check/reduction:odpor
> [  0.000000] (0:maestro@) Behavior: abort
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: odpor.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) ** CRASH IN THE PROGRAM **
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) From signal: Aborted
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)

$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug printf ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --cfg=model-check/reduction:odpor
> [  0.000000] (0:maestro@) Behavior: printf
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: odpor.
> [  0.000000] (1:app@Fafard) Error reached
> [  0.000000] (0:maestro@) DFS exploration ended. 43 unique states visited; 36 explored traces (30 transition replays, 73 states visited overall)

! expect return 4
# because simgrid::mc::ExitStatus::PROGRAM_CRASH = 4
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../../bin/simgrid-mc ${bindir:=.}/random-bug segv ${platfdir}/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=xbt_cfg.thresh:warning --log=no_loc --cfg=model-check/reduction:odpor
> [  0.000000] (0:maestro@) Behavior: segv
> [  0.000000] (0:maestro@) Start a DFS exploration. Reduction is: odpor.
> Segmentation fault.
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) ** CRASH IN THE PROGRAM **
> [  0.000000] (0:maestro@) **************************
> [  0.000000] (0:maestro@) From signal: Segmentation fault
> [  0.000000] (0:maestro@) Counter-example execution trace:
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   Actor 1 in simcall Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1/3;1/4'
> [  0.000000] (0:maestro@) DFS exploration ended. 27 unique states visited; 22 explored traces (19 transition replays, 46 states visited overall)
> [  0.000000] (0:maestro@) Start the critical transition detection phase.
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) *** CRITICAL TRANSITION FOUND ***
> [  0.000000] (0:maestro@) *********************************
> [  0.000000] (0:maestro@) Current knowledge of explored stack:
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 3)
> [  0.000000] (0:maestro@)   (  CORRECT) Actor 1 in  ==> simcall: Random([0;5] ~> 4)
> [  0.000000] (0:maestro@) Found the critical transition: Actor 1 ==> simcall: Random([0;5] ~> 4)
