# We ignore the LD_PRELOAD lines from the expected output because they contain the build path
! ignore .*LD_PRELOAD.*

! expect return 2
$ $VALGRIND_NO_TRACE_CHILDREN ${bindir:=.}/../../bin/simgrid-mc --cfg=model-check/reduction:odpor --cfg=model-check/setenv:LD_PRELOAD=${libdir:=.}/libsgmalloc.so:${libdir:=.}/libsthread.so ${bindir:=.}/mcmini/mcmini-simple_semaphores_with_threads_deadlock 1 0
> [0.000000] [xbt_cfg/INFO] Configuration change: Set 'model-check/reduction' to 'odpor'
> [0.000000] [mc_dfs/INFO] Start a DFS exploration. Reduction is: odpor.
> [0.000000] [mc_global/INFO] **************************
> [0.000000] [mc_global/INFO] *** DEADLOCK DETECTED ***
> [0.000000] [mc_global/INFO] **************************
> [0.000000] [ker_engine/INFO] 3 actors are still active, awaiting something. Here is their status:
> [0.000000] [ker_engine/INFO]  - pid 1 (main thread@Lilibeth) simcall ActorJoin(pid:2)
> [0.000000] [ker_engine/INFO]  - pid 2 (thread 1@Lilibeth) simcall SEM_WAIT(sem_id:1 not granted)
> [0.000000] [ker_engine/INFO]  - pid 3 (thread 2@Lilibeth) simcall SEM_WAIT(sem_id:0 not granted)
> [0.000000] [mc_global/INFO] Counter-example execution trace:
> [0.000000] [mc_global/INFO]   Actor 1 in simcall ActorCreate(child 2)
> [0.000000] [mc_global/INFO]   Actor 1 in simcall ActorCreate(child 3)
> [0.000000] [mc_global/INFO]   Actor 2 in simcall SEM_ASYNC_LOCK(semaphore: 1, capacity: 0)
> [0.000000] [mc_global/INFO]   Actor 2 in simcall SEM_WAIT(semaphore: 1, capacity: 0, granted: yes)
> [0.000000] [mc_global/INFO]   Actor 2 in simcall SEM_ASYNC_LOCK(semaphore: 1, capacity: 0)
> [0.000000] [mc_global/INFO]   Actor 3 in simcall SEM_ASYNC_LOCK(semaphore: 0, capacity: 0)
> [0.000000] [mc_global/INFO]   Actor 3 in simcall SEM_WAIT(semaphore: 0, capacity: 0, granted: yes)
> [0.000000] [mc_global/INFO]   Actor 3 in simcall SEM_ASYNC_LOCK(semaphore: 0, capacity: 0)
> [0.000000] [mc_session/INFO] You can debug the problem (and see the whole details) by rerunning out of simgrid-mc with --cfg=model-check/replay:'1;1;2;2;2;3;3;3'
> [0.000000] [mc_dfs/INFO] DFS exploration ended. 9 unique states visited; 0 explored traces (0 transition replays, 9 states visited overall)
> [0.000000] [mc_ct/INFO] Start the critical transition detection phase.
> [0.000000] [mc_ct/INFO] *********************************
> [0.000000] [mc_ct/INFO] *** CRITICAL TRANSITION FOUND ***
> [0.000000] [mc_ct/INFO] *********************************
> [0.000000] [mc_ct/INFO] Current knowledge of explored stack:
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 1 in  ==> simcall: ActorCreate(child 2)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 1 in  ==> simcall: ActorCreate(child 3)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 2 in  ==> simcall: SEM_ASYNC_LOCK(semaphore: 1, capacity: 0)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 2 in  ==> simcall: SEM_WAIT(semaphore: 1, capacity: 0, granted: yes)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 2 in  ==> simcall: SEM_ASYNC_LOCK(semaphore: 1, capacity: 0)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 3 in  ==> simcall: SEM_ASYNC_LOCK(semaphore: 0, capacity: 0)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 3 in  ==> simcall: SEM_WAIT(semaphore: 0, capacity: 0, granted: yes)
> [0.000000] [mc_ct/INFO]   (INCORRECT) Actor 3 in  ==> simcall: SEM_ASYNC_LOCK(semaphore: 0, capacity: 0)
> [0.000000] [mc_ct/INFO] The critical transition explorer reached the beginning of the stack without finding a correct execution. The program may have no correct behavior.
> [0.000000] [mc_ct/INFO] Found the critical transition: Actor 1 ==> simcall: ActorCreate(child 2)

