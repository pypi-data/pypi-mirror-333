[project]
name = "compute-horde-sdk"
requires-python = ">=3.11,<3.13"
keywords = []
readme = "README.md"
authors = [
    { name = "Reef Technologies", email = "opensource@reef.pl" },
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = []
dependencies = [
    "pydantic<3,>=2.10",
    "httpx>=0.26.0",
    "bittensor>=9.0.0,<9.1",
]
version = "0.0.0"

[project.license]
text = "MIT"

[project.urls]
Source = "https://github.com/backend-developers-ltd/compute-horde-sdk"
"Issue Tracker" = "https://github.com/backend-developers-ltd/compute-horde-sdk/issues"

[build-system]
requires = [
    "pdm-backend==2.4.3",
]
build-backend = "pdm.backend"

[tool.uv]
override-dependencies = [
    "bt-decode>=0.5.0a2",
]

[tool.pdm]
distribution = true

[tool.pytest.ini_options]
pythonpath = [
    ".",
]
target_package_name = "compute_horde_sdk"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "D",
    "E",
    "F",
    "I",
    "UP",
    "TC005",
]
ignore = [
    "D100",
    "D105",
    "D107",
    "D200",
    "D202",
    "D203",
    "D205",
    "D212",
    "D400",
    "D401",
    "D415",
    "D101",
    "D102",
    "D103",
    "D104",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"test/**" = [
    "D",
    "F403",
    "F405",
]

[tool.codespell]
skip = "*.min.js,pdm.lock"
ignore-words-list = "datas"

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = [
    "",
    "",
    "",
]
title_format = "## [{version}](https://github.com/backend-developers-ltd/compute-horde-sdk/releases/tag/v{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/backend-developers-ltd/compute-horde-sdk/issues/{issue})"
type = [
    { directory = "removed", name = "Removed", showcontent = true },
    { directory = "changed", name = "Changed", showcontent = true },
    { directory = "fixed", name = "Fixed", showcontent = true },
    { directory = "deprecated", name = "Deprecated", showcontent = true },
    { directory = "added", name = "Added", showcontent = true },
    { directory = "doc", name = "Doc", showcontent = true },
    { directory = "infrastructure", name = "Infrastructure", showcontent = true },
]

[[tool.mypy.overrides]]
module = [
    "bittensor",
    "nox",
    "pytest",
    "tests.*",
]
ignore_missing_imports = true

[dependency-groups]
format = [
    "ruff",
]
lint = [
    "ruff",
    "codespell[toml]",
]
release = [
    "towncrier>=23.11.0,<24",
]
type_check = [
    "django-stubs[compatible-mypy]",
    "djangorestframework-stubs[compatible-mypy]>=3.15.1",
    "mypy",
    "types-freezegun",
    "types-python-dateutil",
    "types-requests",
]
test = [
    "pytest>=8.2.1",
    "pytest-asyncio>=0.24.0",
    "responses>=0.25.0",
    "freezegun>=1.5.1",
    "faker>=33.1.0",
    "pytest-django>=4.9.0",
    "pytest-apiver",
    "pytest-xdist",
    "pytest-httpx>=0.35.0",
]
