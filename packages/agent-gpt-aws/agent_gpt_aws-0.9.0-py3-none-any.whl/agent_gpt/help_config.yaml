config:
  short_help: "Update configuration settings."
  detailed_help: |
    Update configuration settings.

    This command supports two modes for modifying configuration:

    1. Field Update Mode:
       Use dot notation to update configuration fields directly.

       For example:
       agent-gpt config --batch_size 64 --lr_init 0.0005 --env_id CartPole-v1
       agent-gpt config --trainer.max_run 360

       This mode updates any key in the top-level configuration (such as:
       simulator_registry, network, hyperparams, sagemaker)
       without requiring dedicated subcommands.

    2. Method Mode:
       Use dedicated methods to add or remove configuration entries in specific sections.
       The following functions are available, using the syntax:
       agent-gpt config simulator/env-host/exploration set/del [identifier] [--option value ...]

       a. Simulator Configuration:
          - Set:
            agent-gpt config simulator set my_simulator --hosting local --connection ip --env_type gym
            agent-gpt config simulator set my_simulator --hosting cloud --connection ec2 --env_type unity
          - Delete:
            agent-gpt config simulator del my_simulator

       b. Environment Host Configuration:
          - Set:
            agent-gpt config env-host set local0 --env_endpoint http://your-host:port --num_agents 32
            agent-gpt config env-host set local1 --env_endpoint http://your-host:port1 --num_agents 64
          - Delete:
            agent-gpt config env-host del local0

       c. Exploration Configuration:
          - Set:
            agent-gpt config exploration set continuous --type gaussian_noise --param1 0.1 --param2 0.001
          - Delete:
            agent-gpt config exploration del continuous

    Choose Field Update Mode for simple, direct key modifications and Method Mode for more guided, complex configuration changes.

edit:
  short_help: "Open the configuration file in the system's default text editor for manual modification."
  detailed_help: |
    Open the configuration file in the system's default text editor for manual modification.
    If the configuration file does not exist, create one with default values.

clear:
  short_help: "Clear configuration settings."
  detailed_help: |
    Clear configuration settings. If a section is provided, reset that section to its default.
    Otherwise, delete the entire configuration file from disk.

list:
  short_help: "List the current configuration settings."
  detailed_help: |
    List the current configuration settings. If a section is provided,
    only that part of the configuration is displayed.

upload:
  short_help: "Upload a simulator for cloud deployment."
  detailed_help: |
    Upload a simulator for cloud deployment.

    Steps:
     1. Validate & Retrieve Simulator:
        - Load the configuration and retrieve the simulator settings from the Simulator Registry.

     2. Create Dockerfile & Upload:
        - Generate a Dockerfile based on the simulator configuration.
        - Build and push a Docker image to your ECR account.
     
     3. Update Simulator Registry:
        - Update the Simulator configuration with the new image URI after a successful upload.

    Example:
     agent-gpt upload my_simulator

simulate:
  short_help: "Launch an environment simulation using the configured simulator settings or specified port numbers."
  detailed_help: |
    Launch an environment simulation using the configured simulator settings or specified port numbers.

    Steps:    
     1. Retrieve Simulator Configuration:
        - Load the simulator settings from the local configuration file.
        - Use default ports from the configuration if no port numbers are provided.

     2. Launch Simulation Server:
        - Start a simulation server on each provided port based on the simulator's hosting type.
          * Local: Runs the simulation server locally.
          * Remote: Not supported on this machine; run the simulation directly on the remote simulator.
          * Cloud: Cloud-based simulation is not supported yet.

     3. Monitor & Terminate:
        - The simulation runs in the current terminal.
        - Press Ctrl+C to gracefully terminate the simulation.

    Examples:
     agent-gpt simulate local
     agent-gpt simulate local 8080,8081
     agent-gpt simulate my_simulator 80,81,82,83

train:
  short_help: "Launch a SageMaker training job for AgentGPT using configuration settings."
  detailed_help: |
    Launch a SageMaker training job for AgentGPT using configuration settings.
    This command loads training configuration from the saved config file.

infer:
  short_help: "Deploy or reuse a SageMaker inference endpoint for AgentGPT using configuration settings."
  detailed_help: |
    Deploy or reuse a SageMaker inference endpoint for AgentGPT using configuration settings.
    This command loads inference configuration from the saved config file.
