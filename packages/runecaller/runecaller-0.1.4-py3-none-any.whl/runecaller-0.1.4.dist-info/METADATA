Metadata-Version: 2.2
Name: runecaller
Version: 0.1.4
Summary: Flexible framework for event management, hooks, and dynamic plugin systems
Author-email: DirtyWork Solutions Limited <runecaller@open.dirtywork.solutions>, Aidan Hogg <ahogg@dirtywork.solutions>
Maintainer-email: DirtyWork Solutions Limited <runecaller@open.dirtywork.solutions>
License: # MIT License
        
        ##### Copyright (c) 2025  -  DirtyWork Solutions Limited
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        ## Third-Party Licenses
        
        RuneCaller code 
        
        These include:
        
        - **[PyDispatcher](#pydispatcher)** | _Fork of the project as base for the events subpackage of RuneCaller._
        
        
        ### PyDispatcher
        
        This project includes code from PyDispatcher.
        
        - Original authors: Patrick K. O'Brien and Contributors
        - License: BSD 3-Clause
        - Source: https://github.com/pydispatcher/pydispatcher
        
        **The following license applies to PyDispatcher:**
        
        
        	Copyright (c) 2001-2006, Patrick K. O'Brien and Contributors
        	All rights reserved.
        	
        	Redistribution and use in source and binary forms, with or without
        	modification, are permitted provided that the following conditions
        	are met:
        	
        		Redistributions of source code must retain the above copyright
        		notice, this list of conditions and the following disclaimer.
        	
        		Redistributions in binary form must reproduce the above
        		copyright notice, this list of conditions and the following
        		disclaimer in the documentation and/or other materials
        		provided with the distribution.
        	
        		The name of Patrick K. O'Brien, or the name of any Contributor,
        		may not be used to endorse or promote products derived from this 
        		software without specific prior written permission.
        	
        	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        	``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
        	FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
        	COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
        	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
        	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        	OF THE POSSIBILITY OF SUCH DAMAGE. 
Project-URL: Homepage, https://open.dirtywork.solutions/runecaller
Project-URL: Documentation, https://github.com/DirtyWork-Solutions/RuneCaller/docs/INDEX.md
Project-URL: Source, https://github.com/DirtyWork-Solutions/RuneCaller
Project-URL: Issues, https://github.com/DirtyWork-Solutions/RuneCaller/tree/main/.github/ISSUE_TEMPLATE
Keywords: dispatcher,dispatch,pydispatch,event,signal,sender,receiver,propagate,multi-consumer,multi-producer,saferef,robustapply,apply
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Topic :: System
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: setuptools~=75.8.2
Requires-Dist: pyforged~=0.2.2
Requires-Dist: bedrocked~=0.1.3
Provides-Extra: dev
Requires-Dist: tox; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"

# RuneCaller

RuneCaller is the event, hook, and mods/extension project. It empowers developers to enhance and customize their
applications with a robust event handling system and modular extensions.

---

## Table of Contents

- [Overview](#overview)
- [Features](#features)
- [Getting Started](#getting-started)
  - [Prerequisites](#prerequisites)
  - [Installation](#installation)
- [Usage](#usage)
- [Documentation](#documentation)
- [Contributing](#contributing)
- [License](#license)
- [Acknowledgements](#acknowledgements)

---

## Overview

RuneCaller is designed to integrate seamlessly with PyForged, providing an intuitive API for managing events, hooks, 
and mods/extensions. Whether you're building a new feature or enhancing an existing one, RuneCaller gives you the 
flexibility to respond to events and load custom modules dynamically.

---

## Features

- **Event Hooks:** Listen to and trigger events within the PyForged framework.
- **Modular Extensions:** Easily load, manage, and unload mods to extend functionality.
- **Customizable:** Configure events and hooks to fit your unique application needs.
- **Community-Driven:** Open-source and built with contributions from the community.

---

## Getting Started

### Prerequisites

- Python 3.13 or higher.
- An existing PyForged installation.

### Installation

1. **Clone the Repository:**

   ```bash
   git clone https://github.com/YourUsername/RuneCaller.git
2. Navigate to the Project Directory:
    ```bash
    cd RuneCaller
3. Install Dependencies:
    ```bash
    pip install -r requirements.txt

### Usage
Integrate RuneCaller into your PyForged project by importing the module and registering event hooks:

    ```python

    from runecaller import EventHook

    def on_custom_event(data):
        print("Custom event triggered with data:", data)

    # Register an event hook
    EventHook.register('custom_event', on_custom_event)

Load and manage mods/extensions dynamically with the ModManager:

    ```
    from runecaller import ModManager

    mod_manager = ModManager()
    mod_manager.load_mod("example_mod")

For more details and advanced usage, refer to the Documentation.

## Documentation
Detailed guides, API references, and examples are available in our documentation. Visit our Wiki for more information.

## Contributing
Contributions are welcome! To contribute:

- Fork the repository.
- Create a new branch for your feature or bugfix.
- Commit your changes and open a pull request.
- Follow the guidelines in our CONTRIBUTING.md. 
 
Please report any issues or suggestions via the repository's issue tracker.

## License
RuneCaller is distributed under the MIT License. See the [LICENSE.md](LICENSE.md) file for more details.

## Acknowledgements
 - PyForged Team: For creating a powerful framework that inspired this project.
 - Contributors: Thanks to everyone who has contributed ideas, code, and feedback to RuneCaller.
