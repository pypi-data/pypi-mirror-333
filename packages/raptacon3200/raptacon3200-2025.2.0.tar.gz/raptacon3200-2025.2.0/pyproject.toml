[project]
name = "raptacon3200"
version = "2025.2.0"
description = "A FRC Raptacon 3200 Robot Common Library"
authors = [
  { name = "Chris Hirsch", email = "chris@base2technology.com"}
]
maintainers = [
]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha"
]

homepage = "https://github.com/raptacon/raptacon3200"
"Bug Tracker" = "https://github.com/raptacon/raptacon3200/issues"

requires-python = ">= 3.10"

depependencies = [
  "robotpy-rev^2025.0.2",
  "semantic-release"
]

dev.dependencies = [
  "pytest>=8.3",
  "pytest-cov>=6.0",
  "black>=25.1",
  "pylint>=3.2",
  "flake8^7.1.1"
]


#[tool.poetry.dependencies]
#[build-system]
#requires = ["poetry-core"]
#build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
flake8 = "^7.1.1"
pytest = "^8.3.4"
robotpy-rev = "^2025.0.2"


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
upload_to_pypi = false
upload_to_release = true
# Not needed..we build in a different step
#build_command = "pip install poetry && poetry build"
commit_message = "chore(release): bump version to {version}"
version_source = "commit"
major_on_zero = false
tag_format = "{version}"
logging_use_named_masks = false
allow_zero_version = true
no_git_verify = false

[tool.semantic_release.branches.main]
match = "(main|master|)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.release]
match = "release-[0-9a-f]{8}"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
