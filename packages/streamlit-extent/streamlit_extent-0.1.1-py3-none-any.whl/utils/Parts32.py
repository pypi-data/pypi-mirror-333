import streamlit as st
import requests

base_url="http://192.168.0.15:5000"

def reaction(id,type):

    if id is not None:
        requests.post(base_url+f"/swagger/{id}/{type}",json={})
        # return response.json()

def main():
    
    st.set_page_config(page_icon="",page_title="—á—Ç–æ —Ç–æ –¥–ª—è –º–æ–±–ª—ã")

    menu = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", ["–ù–æ–≤–æ—Å—Ç–∏", "–°–æ–±—ã—Ç–∏—è"])

    if menu == "–ù–æ–≤–æ—Å—Ç–∏":
        st.title("–ù–æ–≤–æ—Å—Ç–∏")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤ (–∫–ª—é—á ‚Äî news_id)
        if "news_reactions" not in st.session_state:
            st.session_state.news_reactions = {}

        response = requests.get(f"{base_url}/swagger")
        data = response.json()

        if "index" not in st.session_state:
            st.session_state.index = 0

        index = st.session_state.index

        col1, col2 = st.columns([1, 1])

        with col1:
            if st.button("<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è"):
                index = (index - 1) % len(data)
                st.session_state.index = index
        with col2:
            if st.button("–°–ª–µ–¥—É—é—â–∞—è >>"):
                index = (index + 1) % len(data)
                st.session_state.index = index

        st.header(data[index]["title"])

        if data[index]["image"]:
            st.image(data[index]["image"])
        else:
            st.image("image/photo.jpg")

        st.text(data[index]["description"])
        st.write(data[index]["date"])

        news_id = data[index]["id"]
        current_reaction = st.session_state.news_reactions.get(news_id)

        if current_reaction:
            st.info(f"–í–∞—à —Ç–µ–∫—É—â–∏–π –≥–æ–ª–æ—Å: {current_reaction}")
        else:
            st.info("–í—ã –µ—â–µ –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏.")

        # –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –ø–æ–∑–≤–æ–ª–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å
        col_like, col_dislike = st.columns([1, 1])

        with col_like:
            if st.button("üëç Likes", key="btn_like"):
                # –ï—Å–ª–∏ –≥–æ–ª–æ—Å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Ç–æ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ
                if current_reaction != "likes":
                    reaction(news_id, "likes")
                    st.session_state.news_reactions[news_id] = "likes"
                    st.rerun()
        with col_dislike:
            if st.button("üëé Dislikes", key="btn_dislike"):
                if current_reaction != "dislikes":
                    reaction(news_id, "dislikes")
                    st.session_state.news_reactions[news_id] = "dislikes"
                    st.rerun()

        st.write(f"likes: {data[index]['likes']} | Dislikes: {data[index]['dislikes']}")

    else:
        st.header("–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è")

        response=requests.get(base_url+"/event")
        events_data= response.json()


        sorted_events = sorted(events_data, key=lambda e: e["date"], reverse=True)

        for event in sorted_events:
            st.header(event["title"])
            st.write(event["short_text"])
            col1,col2=st.columns([1,1])
            with col1:
                st.write(event["date"])
            with col2:
                st.write(event["author"])

if __name__=="__main__":
    main()