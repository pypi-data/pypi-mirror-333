import streamlit as st
from datetime import datetime
import os

# –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ .ics-—Ñ–∞–π–ª–æ–≤
from ics import Calendar, Event

# ============ –î–ê–ù–ù–´–ï ============

# –ü—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
news_data = [
    {
        "id": 1,
        "title": "–ù–æ–≤–æ—Å—Ç—å 1",
        "description": "–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ 1",
        "image_url": None,  # –ü–æ–∫–∞ –Ω–µ—Ç URL, –±—É–¥–µ—Ç –∑–∞–≥–ª—É—à–∫–∞
        "date": "2025-02-10",
        "likes": 10,
        "dislikes": 2
    },
    {
        "id": 2,
        "title": "–ù–æ–≤–æ—Å—Ç—å 2",
        "description": "–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ 2",
        "image_url": None,
        "date": "2025-02-12",
        "likes": 5,
        "dislikes": 1
    },
    {
        "id": 3,
        "title": "–ù–æ–≤–æ—Å—Ç—å 3",
        "description": "–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ 3",
        "image_url": None,
        "date": "2025-02-13",
        "likes": 0,
        "dislikes": 0
    },
]

# –ü—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
events_data = [
    {
        "id": 101,
        "title": "–°–æ–±—ã—Ç–∏–µ A",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è A",
        "date": "2025-02-20"
    },
    {
        "id": 102,
        "title": "–°–æ–±—ã—Ç–∏–µ B",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è B",
        "date": "2025-03-01"
    },
    {
        "id": 103,
        "title": "–°–æ–±—ã—Ç–∏–µ C",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è C",
        "date": "2025-04-15"
    },
]

# ============ –§–£–ù–ö–¶–ò–ò ============

def update_reaction(news_id, reaction_type):
    """–û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤ –≤ –ø–∞–º—è—Ç–∏ (–∏–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞)."""
    for news in news_data:
        if news["id"] == news_id:
            if reaction_type == "like":
                news["likes"] += 1
            elif reaction_type == "dislike":
                news["dislikes"] += 1

def create_ics_event(title, description, start_date):
    """
    –°–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä–æ–∫—É .ics (—Ñ–æ—Ä–º–∞—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è) –¥–ª—è —Å–æ–±—ã—Ç–∏—è.
    –ó–¥–µ—Å—å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã end_date = start_date + 1 —á–∞—Å.
    """
    c = Calendar()
    e = Event()
    e.name = title
    e.begin = f"{start_date} 10:00:00"  # –ù–∞—á–∞–ª–æ –≤ 10:00
    e.end = f"{start_date} 11:00:00"    # –ö–æ–Ω–µ—Ü –≤ 11:00
    e.description = description
    c.events.add(e)
    return str(c)

# ============ –û–°–ù–û–í–ù–û–ô –ö–û–î –°–¢–†–ê–ù–ò–¶–´ ============

def main():
    st.title("–ù–æ–≤–æ—Å—Ç–∏ –∏ –°–æ–±—ã—Ç–∏—è")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º
    # –ö–ª—é—á ‚Äì id –Ω–æ–≤–æ—Å—Ç–∏, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è ("like" –∏–ª–∏ "dislike")
    if "news_reactions" not in st.session_state:
        st.session_state.news_reactions = {}

    tabs = ["–ù–æ–≤–æ—Å—Ç–∏", "–°–æ–±—ã—Ç–∏—è"]
    selected_tab = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", tabs)

    if selected_tab == "–ù–æ–≤–æ—Å—Ç–∏":
        st.header("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")

        if "news_index" not in st.session_state:
            st.session_state.news_index = 0

        col1, col2 = st.columns([1, 1])
        with col1:
            if st.button("<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è"):
                st.session_state.news_index = max(0, st.session_state.news_index - 1)
        with col2:
            if st.button("–°–ª–µ–¥—É—é—â–∞—è >>"):
                st.session_state.news_index = min(len(news_data) - 1, st.session_state.news_index + 1)

        current_news = news_data[st.session_state.news_index]
        st.subheader(current_news["title"])

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: –µ—Å–ª–∏ –Ω–µ—Ç URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        placeholder_path = "placeholder.png"
        if current_news["image_url"]:
            st.image(current_news["image_url"], width=300)
        else:
            if os.path.exists(placeholder_path):
                st.image(placeholder_path, width=300)
            else:
                st.warning("–§–∞–π–ª –∑–∞–≥–ª—É—à–∫–∏ (placeholder.png) –Ω–µ –Ω–∞–π–¥–µ–Ω!")

        st.write(current_news["description"])
        st.write(f"–î–∞—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏: {current_news['date']}")

        news_id = current_news["id"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ–ª–æ—Å–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å
        if news_id in st.session_state.news_reactions:
            st.info(f"–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏: {st.session_state.news_reactions[news_id]}")
        else:
            like_col, dislike_col = st.columns([1, 1])
            with like_col:
                if st.button("üëç", key=f"like_{news_id}"):
                    update_reaction(news_id, "like")
                    st.session_state.news_reactions[news_id] = "like"
            with dislike_col:
                if st.button("üëé", key=f"dislike_{news_id}"):
                    update_reaction(news_id, "dislike")
                    st.session_state.news_reactions[news_id] = "dislike"

        st.write(f"Likes: {current_news['likes']} | Dislikes: {current_news['dislikes']}")

    else:
        st.header("–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è")

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ –¥–∞—Ç–µ (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
        sorted_events = sorted(events_data, key=lambda e: e["date"], reverse=True)

        for event in sorted_events:
            st.subheader(event["title"])
            st.write(event["description"])
            st.write(f"–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: {event['date']}")

            # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º ICS-—Ñ–∞–π–ª –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            if st.button("‚òÖ –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å", key=f"event_{event['id']}"):
                ics_data = create_ics_event(
                    title=event["title"],
                    description=event["description"],
                    start_date=event["date"]
                )
                st.download_button(
                    label="–°–∫–∞—á–∞—Ç—å ICS-—Ñ–∞–π–ª",
                    data=ics_data,
                    file_name=f"{event['title']}.ics",
                    mime="text/calendar"
                )
                st.success(f"–§–∞–π–ª –¥–ª—è —Å–æ–±—ã—Ç–∏—è '{event['title']}' —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.")

if __name__ == "__main__":
    main()
