[project]
name = "floword"
version = "0.0.3"
description = "Build workflow with natural language"
authors = [{ name = "Wh1isper", email = "jizhongsheng957@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiosqlite>=0.21.0", # ignore: DEP002
    "alembic>=1.14.1",
    "click>=8.1.8",
    "fastapi[standard]>=0.115.10",
    "gradio>=5.20.1",
    "httpx>=0.28.1",
    "httpx-sse>=0.4.0",
    "loguru>=0.7.3",
    "mcp[cli]>=1.3.0",
    "psycopg[binary,pool]>=3.2.5", # ignore: DEP002
    "pydantic>=2.10.6",
    "pydantic-ai>=0.0.39",
    "pydantic-settings[toml]>=2.8.0",
    "python-jose[cryptography]>=3.4.0",
    "redis>=5.2.1",
    "sqlalchemy[asyncio]>=2.0.38",
    "sse-starlette>=2.2.1",
    "starlette>=0.46.0",
    "uvicorn[standard]>=0.34.0",
]

[project.scripts]
floword = "floword.cli:cli"

[project.urls]
Homepage = "https://ai-zerolab.github.io/floword/"
Repository = "https://github.com/ai-zerolab/floword"
Documentation = "https://ai-zerolab.github.io/floword/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.22.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.9.2",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "docker>=7.1.0",
    "pytest-asyncio>=0.25.3",
    "inline-snapshot>=0.20.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
py-modules = ["floword"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # needless-bool
    "SIM103",
    # raise-vanilla-args
    "TRY003",
    # function-call-in-default-argument
    "B008",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "E722", "F841", "B017", "S105", "S106", "S110"]
"floword/dbutils.py" = ["S603", "S607"]
"floword/ui/**/*.py" = ["ALL"]  # Ignore all rules for UI files
"dev/*" = ["S311"]
"floword/config.py" = ["S105"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["floword"]
omit = ["floword/ui/*"]  # Exclude UI files from coverage


[tool.deptry.per_rule_ignores]
DEP002 = ["aiosqlite", "psycopg"]
