"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations

from typing import Literal

import pydantic
from typing_extensions import Annotated, TypedDict

from friendli.types import BaseModel

Format = Literal["url", "raw", "png", "jpeg", "jpg"]
r"""The format of the generated image. One of `url(default)`, `raw`, `png`, `jpeg`, and `jpg`."""


class URLImageItemTypedDict(TypedDict):
    format_: Format
    r"""The format of the generated image. One of `url(default)`, `raw`, `png`, `jpeg`, and `jpg`."""
    seed: int
    r"""The seed used during image generation."""
    url: str
    r"""The URL of the generated image."""


class URLImageItem(BaseModel):
    format_: Annotated[Format, pydantic.Field(alias="format")]
    r"""The format of the generated image. One of `url(default)`, `raw`, `png`, `jpeg`, and `jpg`."""

    seed: int
    r"""The seed used during image generation."""

    url: str
    r"""The URL of the generated image."""
