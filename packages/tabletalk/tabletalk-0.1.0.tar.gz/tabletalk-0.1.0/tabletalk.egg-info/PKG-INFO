Metadata-Version: 2.2
Name: tabletalk
Version: 0.1.0
Summary: A command-line tool for managing database schemas and generating SQL queries using natural language.
Home-page: https://github.com/wtbates99/tabletalk
Author: william bates
Author-email: wtbates99@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyyaml>=6.0
Requires-Dist: openai>=1.0.0
Requires-Dist: google-cloud-bigquery>=3.0.0
Requires-Dist: sphinx
Requires-Dist: mysql-connector-python
Requires-Dist: psycopg2-binary
Requires-Dist: anthropic
Requires-Dist: click
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Local Development
1. Clone the repo
2. Run `pre-commit install` to install pre-commit hooks and required tools
3. Run `pip install -r requirements.txt` to install required Python packages
4. Run `python src/main.py init` to initialize the project structure
5. Run `python src/main.py apply` to generate contexts

# BigQuery Schema Analysis

This project analyzes BigQuery schemas and organizes them into modules for easier analysis.


### Step 4: Build and Distribute (Optional)
To test locally:
1. Install build tools: `pip install build twine`.
2. Build the package: `python -m build`.
3. Install locally: `pip install dist/tabletalk-0.1.0-py3-none-any.whl`.

To distribute on PyPI:
1. Build: `python -m build`.
2. Upload: `twine upload dist/*` (after registering on PyPI).

### Result
With this `setup.py`, users can:
- Install your package with `pip install tabletalk`.
- Run it as `tabletalk run` or `tabletalk test` from the command line, just like dbt.

This setup mirrors dbtâ€™s approach, adapted to your simpler application and specific requirements, ensuring a seamless user experience without compilation. Adjust the `author`, `author_email`, `url`, and `version` as needed for your project.
